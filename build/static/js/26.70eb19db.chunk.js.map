{"version":3,"file":"static/js/26.70eb19db.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","views/app-views/reports/playback_history/index.js","../node_modules/react-leaflet/lib/MapContainer.js","../node_modules/react-leaflet/lib/TileLayer.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React, {useState} from 'react'\r\nimport {Table,Button,Card,Drawer,Select, Input,Form,DatePicker } from 'antd'\r\nimport Flex from 'components/shared-components/Flex'\r\n\r\nimport { PlusOutlined,FileExcelOutlined,SearchOutlined } from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport {MapContainer,TileLayer,Marker,Popup,LayersControl} from 'react-leaflet'\r\nconst { Option } = Select\r\nconst { RangePicker } = DatePicker;\r\nconst position = [11.0467, 76.9254]\r\nconst { BaseLayer } = LayersControl;\r\nexport const PlaybackHistory = () => {\r\n  const tableColumns = [\r\n    {\r\n      title: 'S.No',\r\n      dataIndex:'s_no'\r\n    },\r\n    {\r\n        title: 'Vehicle Name',\r\n        dataIndex:'vehicle_name'\r\n    },\r\n    {\r\n        title: 'Start Date',\r\n        dataIndex: 'start_date',\r\n    },\r\n{\r\n        title: 'End Date',\r\n        dataIndex: 'end_date',\r\n    },\r\n\r\n    {\r\n        title: 'Location',\r\n        dataIndex: 'location',\r\n    },\r\n    {\r\n        title: 'Map View',\r\n        dataIndex: 'map_view',\r\n    },\r\n]\r\n  const onFinish = values => {\r\n    console.log('Success:', values);\r\n  };\r\n  const DateChange = (values) =>{\r\n    alert(\"Selected Values \"+values);\r\n}\r\nconst Playback = (values) => {\r\nalert(values);\r\nconsole.log(values);\r\n}\r\n  return (\r\n    \r\n    <>\r\n    <Card title=\"Playback History\">\r\n\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mobileFlex={false}>\r\n        <Flex className=\"mb-1\" mobileFlex={false}>\r\n        <div className='mr-md-6 mr-3'>\r\n            <Select showSearch defaultValue=\"Today\" \r\n\t\t\t\t\t\t\tclassName=\"w-100\" \r\n\t\t\t\t\t\t\tstyle={{ minWidth: 180 }} onChange={DateChange} name=\"date_selection\">\r\n            <option value=\"1\">Today</option>\r\n            <option value=\"2\">Last 7 Days</option>\r\n            <option value=\"3\">Last Month</option>\r\n            <option value=\"4\">Custom</option>\r\n            </Select>\r\n          </div>\r\n\t\t\t\t\t<div className='mr-md-3 mr-3' >\r\n            <RangePicker showTime name=\"date_range\" onChange={DateChange}/>\r\n          </div>\r\n\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t<Select mode=\"multiple\" name=\"vehicle_id\" onChange={DateChange}\r\n\t\t\t\t\t\t\tdefaultValue=\"All\" \r\n\t\t\t\t\t\t\tclassName=\"w-100\" \r\n\t\t\t\t\t\t\tstyle={{ minWidth: 180 }} \r\n\t\t\t\t\t\t\tplaceholder=\"Vehicle\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Option value=\"1\">TN01AB1234</Option>\r\n\t\t\t\t\t\t\t<Option value=\"2\">TN02AB9874</Option>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n          <div className=\"mb-3\">\r\n          <Button type=\"primary\" success icon={<SearchOutlined/>} onClick={Playback}>Search</Button>\r\n          </div>\r\n          \r\n\t\t\t\t</Flex>\r\n      </Flex>\r\n      <div className=\"table-responsive\">\r\n        <Card>\r\n          <MapContainer center={position} zoom={13} scrollWheelZoom={true}>\r\n            <LayersControl>\r\n                <BaseLayer checked name=\"OpenStreetMap\">\r\n                    <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                    />\r\n                </BaseLayer>\r\n                <BaseLayer name=\"Google-Street View\">\r\n                    <TileLayer\r\n                        attribution=\"Google Maps\"\r\n                        url=\"https://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                        />\r\n                </BaseLayer>\r\n                <BaseLayer checked name=\"Google-Satelite\">\r\n                <TileLayer\r\n                        url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                        maxZoom= {20}\r\n                        subdomains={['mt1','mt2','mt3']}\r\n                    />\r\n                </BaseLayer>\r\n            </LayersControl>\r\n          </MapContainer>\r\n        </Card>\r\n      </div>\r\n    </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaybackHistory","function _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nimport { LeafletProvider, createLeafletContext } from '@react-leaflet/core';\nimport { Map as LeafletMap } from 'leaflet';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nfunction MapContainerComponent({ bounds , boundsOptions , center , children , className , id , placeholder , style , whenReady , zoom , ...options }, forwardedRef) {\n    const [props] = useState({\n        className,\n        id,\n        style\n    });\n    const [context, setContext] = useState(null);\n    useImperativeHandle(forwardedRef, ()=>context?.map ?? null, [\n        context\n    ]);\n    const mapRef = useCallback((node)=>{\n        if (node !== null && context === null) {\n            const map = new LeafletMap(node, options);\n            if (center != null && zoom != null) {\n                map.setView(center, zoom);\n            } else if (bounds != null) {\n                map.fitBounds(bounds, boundsOptions);\n            }\n            if (whenReady != null) {\n                map.whenReady(whenReady);\n            }\n            setContext(createLeafletContext(map));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    useEffect(()=>{\n        return ()=>{\n            context?.map.remove();\n        };\n    }, [\n        context\n    ]);\n    const contents = context ? /*#__PURE__*/ React.createElement(LeafletProvider, {\n        value: context\n    }, children) : placeholder ?? null;\n    return /*#__PURE__*/ React.createElement(\"div\", _extends({}, props, {\n        ref: mapRef\n    }), contents);\n}\nexport const MapContainer = /*#__PURE__*/ forwardRef(MapContainerComponent);\n","import { createElementObject, createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({ url , ...options }, context) {\n    const layer = new LeafletTileLayer(url, withPane(options, context));\n    return createElementObject(layer, context);\n}, function updateTileLayer(layer, props, prevProps) {\n    updateGridLayer(layer, props, prevProps);\n    const { url  } = props;\n    if (url != null && url !== prevProps.url) {\n        layer.setUrl(url);\n    }\n});\n"],"names":["Flex","styled","div","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","Option","Select","RangePicker","DatePicker","position","BaseLayer","LayersControl","PlaybackHistory","DateChange","values","alert","title","mobileFlex","className","showSearch","defaultValue","style","minWidth","onChange","name","value","showTime","mode","placeholder","type","success","icon","onClick","console","log","center","zoom","scrollWheelZoom","checked","url","attribution","maxZoom","subdomains","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","MapContainerComponent","forwardedRef","bounds","boundsOptions","children","id","whenReady","options","useState","props","context","setContext","useImperativeHandle","map","mapRef","useCallback","node","LeafletMap","setView","fitBounds","createLeafletContext","useEffect","remove","contents","React","LeafletProvider","ref","MapContainer","forwardRef","TileLayer","createTileLayerComponent","layer","LeafletTileLayer","withPane","createElementObject","prevProps","updateGridLayer","setUrl"],"sourceRoot":""}