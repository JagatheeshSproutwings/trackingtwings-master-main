{"version":3,"file":"static/js/266.f10dbfd2.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","views/app-views/stock_management/demo/index.js","../node_modules/antd/es/col/index.js","../node_modules/antd/es/row/index.js","../node_modules/antd/es/style/motion/collapse.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Card, Select, Form, Button, notification } from \"antd\";\r\nimport api from \"configs/apiConfig\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nconst { Option } = Select;\r\n\r\nconst Assign = ({ parentToChild, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  const [isComponentVisible, setIsComponentVisible] = useState(true);\r\n\r\n  const [adminList, SetAdminList] = useState([]);\r\n  const [distributorList, SetDistributorList] = useState([]);\r\n  const [dealerList, SetDealerList] = useState([]);\r\n  const [subdealerList, SetSubdealerList] = useState([]);\r\n\r\n  const toggleComponentVisibility = () => {\r\n    setIsComponentVisible(!isComponentVisible);\r\n  };\r\n\r\n  const [currentUser, SetCurrentUser] = useState(\r\n    localStorage.getItem(\"id\") || \"\"\r\n  );\r\n  const [currentRole, SetCurrentRole] = useState(\r\n    localStorage.getItem(\"role\") || \"\"\r\n  );\r\n  const openNotification = (type, message, description) => {\r\n    notification[type]({\r\n      message,\r\n      description,\r\n    });\r\n  };\r\n\r\n  const getUserList = async () => {\r\n    const user_data = { user_id: currentUser };\r\n    const vehicle_data = await api\r\n      .post(\"role_based_user_list\", user_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return [];\r\n      });\r\n\r\n    // Super Admin\r\n    if (currentRole == 1) {\r\n      console.log(\"Super Admin\");\r\n      SetAdminList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 2) {\r\n      console.log(\"Admin\");\r\n      SetDistributorList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 3) {\r\n      console.log(\"Distributor\");\r\n      SetDealerList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 4) {\r\n      console.log(\"Dealer\");\r\n      SetSubdealerList(vehicle_data?.data?.data?.subdealer_list);\r\n    }\r\n  };\r\n  const user = () => {\r\n    return localStorage.getItem(\"id\");\r\n  };\r\n  const role = () => {\r\n    return localStorage.getItem(\"role\");\r\n  };\r\n\r\n  // on change Admin\r\n  const AdminChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetDistributorList([]);\r\n    SetDealerList([]);\r\n    SetSubdealerList([]);\r\n    const user_get_data = { user_id: value };\r\n    const distributor_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetDistributorList(distributor_list?.data?.data?.user_list);\r\n  };\r\n  // On change Distributor\r\n  const DistributorChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetDealerList(\"\");\r\n    SetSubdealerList(\"\");\r\n    const user_get_data = { user_id: value };\r\n    const dealer_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetDealerList(dealer_list?.data?.data?.user_list);\r\n  };\r\n  // on change Dealer\r\n  const DealerChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetSubdealerList([]);\r\n\r\n    const user_get_data = { user_id: value };\r\n    const subdealer_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetSubdealerList(subdealer_list?.data?.data?.subdealer_list);\r\n  };\r\n\r\n  useEffect(() => {\r\n    SetCurrentUser(user());\r\n    SetCurrentRole(role());\r\n    getUserList();\r\n  }, []);\r\n\r\n  const onFinish = async (values) => {\r\n    if (parentToChild[1] == \"Sim\") {\r\n      values[\"id\"] = parentToChild[0];\r\n      await api.post(\"sim_transfer\", values);\r\n      form.resetFields();\r\n      props.parentFunction();\r\n      openNotification(\"success\", \"Device\", \"Sim Transfered Successfully!\");\r\n\r\n      toggleComponentVisibility();\r\n    } else if (parentToChild[1] == \"Device\") {\r\n      values[\"id\"] = parentToChild[0];\r\n      await api.post(\"device_transfer\", values);\r\n      form.resetFields();\r\n      props.parentFunction();\r\n      openNotification(\"success\", \"Device\", \"Device Transfered Successfully!\");\r\n\r\n      toggleComponentVisibility();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row gutter={6}>\r\n      {isComponentVisible && (\r\n        <Col>\r\n          <Card title=\"Assign Form\">\r\n            <Flex>\r\n              <div className=\"container\">\r\n                <Form layout=\"vertical\" size=\"small\" onFinish={onFinish}>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {currentRole == 1 && (\r\n                      <Form.Item label=\"Admin\" name=\"admin_id\">\r\n                        <Select\r\n                          onChange={AdminChange}\r\n                          allowClear\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                        >\r\n                          {Array.isArray(adminList) ? (\r\n                            adminList.map((admin) => (\r\n                              <Select.Option\r\n                                key={admin?.id}\r\n                                role_id=\"2\"\r\n                                value={admin?.id}\r\n                              >\r\n                                {admin?.name}\r\n                              </Select.Option>\r\n                            ))\r\n                          ) : (\r\n                            <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {(currentRole == 1 || currentRole == 2) && (\r\n                      <Form.Item label=\"Distributor\" name=\"distributor_id\">\r\n                        <Select\r\n                          onChange={DistributorChange}\r\n                          allowClear\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                        >\r\n                          {Array.isArray(distributorList) ? (\r\n                            distributorList.map((distributor) => (\r\n                              <Option\r\n                                key={distributor?.id}\r\n                                role_id=\"3\"\r\n                                value={distributor?.id}\r\n                              >\r\n                                {distributor?.name}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option role_id=\"3\" value=\"\"></Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {(currentRole == 1 ||\r\n                      currentRole == 2 ||\r\n                      currentRole == 3) && (\r\n                      <Form.Item label=\"Dealer\" name=\"dealer_id\">\r\n                        <Select\r\n                          onChange={DealerChange}\r\n                          allowClear\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                        >\r\n                          {Array.isArray(dealerList) ? (\r\n                            dealerList.map((dealer) => (\r\n                              <Option\r\n                                key={dealer?.id}\r\n                                role_id=\"4\"\r\n                                value={dealer?.id}\r\n                              >\r\n                                {dealer?.name}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option role_id=\"4\" value=\"\"></Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {(currentRole == 1 ||\r\n                      currentRole == 2 ||\r\n                      currentRole == 3 ||\r\n                      currentRole == 4) && (\r\n                      <Form.Item label=\"Subdealer\" name=\"subdealer_id\">\r\n                        <Select\r\n                          allowClear\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                        >\r\n                          {Array.isArray(subdealerList) &&\r\n                          subdealerList.length > 0 ? (\r\n                            subdealerList.map((subdealer) => (\r\n                              <Option\r\n                                key={subdealer?.id}\r\n                                role_id=\"5\"\r\n                                value={subdealer?.id}\r\n                              >\r\n                                {subdealer?.name}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option></Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Col>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    Assign\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </Flex>\r\n          </Card>\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Assign;\r\n","import { Col } from '../grid';\nexport default Col;","import { Row } from '../grid';\nexport default Row;","const genCollapseMotion = token => ({\n  [token.componentCls]: {\n    // For common/openAnimation\n    [`${token.antCls}-motion-collapse-legacy`]: {\n      overflow: 'hidden',\n      '&-active': {\n        transition: `height ${token.motionDurationMid} ${token.motionEaseInOut},\n        opacity ${token.motionDurationMid} ${token.motionEaseInOut} !important`\n      }\n    },\n    [`${token.antCls}-motion-collapse`]: {\n      overflow: 'hidden',\n      transition: `height ${token.motionDurationMid} ${token.motionEaseInOut},\n        opacity ${token.motionDurationMid} ${token.motionEaseInOut} !important`\n    }\n  }\n});\nexport default genCollapseMotion;"],"names":["Flex","styled","div","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","Option","Select","parentToChild","props","Form","useForm","form","useState","isComponentVisible","setIsComponentVisible","adminList","SetAdminList","distributorList","SetDistributorList","dealerList","SetDealerList","subdealerList","SetSubdealerList","toggleComponentVisibility","localStorage","getItem","currentUser","SetCurrentUser","currentRole","SetCurrentRole","openNotification","type","message","description","notification","getUserList","user_data","user_id","api","post","then","res","catch","err","vehicle_data","console","log","data","user_list","subdealer_list","AdminChange","value","setFieldValue","user_get_data","distributor_list","DistributorChange","dealer_list","DealerChange","useEffect","onFinish","values","resetFields","parentFunction","gutter","title","className","layout","size","sm","md","lg","Item","label","name","onChange","allowClear","showSearch","optionFilterProp","Array","isArray","map","admin","role_id","id","distributor","dealer","length","subdealer","htmlType","Col","Row","token","componentCls","antCls","overflow","transition","motionDurationMid","motionEaseInOut"],"sourceRoot":""}