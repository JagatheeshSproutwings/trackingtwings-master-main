{"version":3,"file":"static/js/396.1b130f84.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","utils/index.js","views/app-views/device_management/config.js","views/app-views/device_management/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React, { useState } from \"react\";\r\nimport { Row, Col, Button, Form, Input, Modal, notification, Card } from \"antd\";\r\nimport api from \"configs/apiConfig\";\r\nimport Flex from \"components/shared-components/Flex\";\r\n\r\nconst Config = ({ parentToChild, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  const [isModalOpen, setIsModalOpen] = useState(true);\r\n\r\n  const handleOk = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const openNotification = (type, message, description) => {\r\n    notification[type]({\r\n      message,\r\n      description,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    try {\r\n      await api.post(\"config/store\", values);\r\n      form.resetFields();\r\n      props.parentFunction();\r\n      openNotification(\r\n        \"success\",\r\n        \"Vehicle\",\r\n        \"Vehicle Settings Saved Successfully!\"\r\n      );\r\n      handleOk();\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 403) {\r\n        const errorData = error.response.data;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row gutter={6}>\r\n      <Col>\r\n        <Flex>\r\n          <div className=\"container\">\r\n            <Modal\r\n              title=\"Vehicle Settings\"\r\n              visible={isModalOpen} // Change \"open\" to \"visible\"\r\n              onOk={handleOk}\r\n              onCancel={handleCancel}\r\n              footer={null} // Set the footer to null to hide it\r\n            >\r\n              <Form\r\n                form={form}\r\n                size=\"small\"\r\n                name=\"settings_form\"\r\n                onFinish={onSubmit}\r\n              >\r\n                <Row gutter={[8, 8]}>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      name=\"vehicle_id\"\r\n                      hidden\r\n                      initialValue={parentToChild.vehicle_id}\r\n                    >\r\n                      <Input type=\"text\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      name=\"device_imei\"\r\n                      hidden\r\n                      initialValue={parentToChild.device_imei}\r\n                    >\r\n                      <Input type=\"text\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Parking Alert Time\"\r\n                      name=\"parking_alert_time\"\r\n                      initialValue={parentToChild.parking_alert_time}\r\n                    >\r\n                      <Input placeholder=\"Parking Alert Time\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Idle Alert Time\"\r\n                      name=\"idle_alert_time\"\r\n                      initialValue={parentToChild.idle_alert_time}\r\n                    >\r\n                      <Input placeholder=\"Idle Alert Time\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Speed Limit\"\r\n                      name=\"speed_limit\"\r\n                      initialValue={parentToChild.speed_limit}\r\n                    >\r\n                      <Input placeholder=\"Speed Limit\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Expected Mileage\"\r\n                      name=\"expected_mileage\"\r\n                      initialValue={parentToChild.expected_mileage}\r\n                    >\r\n                      <Input placeholder=\"Expected Mileage\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Idle RPM\"\r\n                      name=\"idle_rpm\"\r\n                      initialValue={parentToChild.idle_rpm}\r\n                    >\r\n                      <Input placeholder=\"Idle RPM\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Maximum RPM\"\r\n                      name=\"max_rpm\"\r\n                      initialValue={parentToChild.max_rpm}\r\n                    >\r\n                      <Input placeholder=\"Maximum RPM\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      name=\"temp_low\"\r\n                      label=\"Minimum Temp\"\r\n                      initialValue={parentToChild.temp_low}\r\n                    >\r\n                      <Input placeholder=\"Minimum Temperature\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      name=\"temp_high\"\r\n                      label=\"Maximum Temp\"\r\n                      initialValue={parentToChild.temp_high}\r\n                    >\r\n                      <Input placeholder=\"Maximum Temperature\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Fuel Fill Limit\"\r\n                      name=\"fuel_fill_limit\"\r\n                      initialValue={parentToChild.fuel_fill_limit}\r\n                    >\r\n                      <Input placeholder=\"Fuel Fill Limit\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Fuel Dip Limit\"\r\n                      name=\"fuel_dip_limit\"\r\n                      initialValue={parentToChild.fuel_dip_limit}\r\n                    >\r\n                      <Input placeholder=\"Fuel Dip Limit\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Form.Item>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    Save\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </Modal>\r\n          </div>\r\n        </Flex>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Config;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Form,\r\n  Drawer,\r\n  Select,\r\n  Input,\r\n  DatePicker,\r\n  notification,\r\n  Spin,\r\n} from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport api from \"configs/apiConfig\";\r\nimport { Space, Menu, Dropdown, message } from \"antd\";\r\nimport Flex from \"components/shared-components/Flex\";\r\n\r\nimport {\r\n  DownOutlined,\r\n  EditOutlined,\r\n  SettingOutlined,\r\n  SearchOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Config from \"./config\";\r\nimport utils from \"utils\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Vehicle = () => {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [isComponentVisible, setIsComponentVisible] = useState(false);\r\n\r\n  const [editdata, setEditData] = useState(\"\");\r\n\r\n  const dateFormat = \"YYYY-MM-DD\";\r\n  const [open, setOpen] = useState(false);\r\n  const showDrawer = () => {\r\n    setOpen(true);\r\n  };\r\n  const onClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const openNotification = (type, message, description) => {\r\n    notification[type]({\r\n      message,\r\n      description,\r\n    });\r\n  };\r\n\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  const [adminList, SetAdminList] = useState([]);\r\n  const [distributorList, SetDistributorList] = useState([]);\r\n  const [dealerList, SetDealerList] = useState([]);\r\n  const [subdealerList, SetSubdealerList] = useState([]);\r\n  const [customerList, SetCustomerList] = useState([]);\r\n\r\n  const [planList, SetPlanList] = useState([]);\r\n\r\n  //For Dealer and SubDealer Direct\r\n  const [userValue, setUserValue] = useState(localStorage.getItem(\"id\") || \"\");\r\n\r\n  const [licenseList, SetLicenseList] = useState([]);\r\n\r\n  const [vehicleTypeList, SetVehicleTypeList] = useState([]);\r\n\r\n  const [simList, SetSimList] = useState([]);\r\n  const [simData, SetSimData] = useState(\"\");\r\n  const [vehicleList, setVehicleList] = useState([]);\r\n  const [mainvehicleList, setMainVehicleList] = useState([]);\r\n\r\n  const [deviceList, SetDeviceList] = useState([]);\r\n  const [deviceData, SetDeviceData] = useState(\"\");\r\n  const [makeIdData, SetMakeIdData] = useState(\"\");\r\n  const [modelIdData, SetModelIdData] = useState(\"\");\r\n  const [makeData, SetMakeData] = useState(\"\");\r\n  const [modelData, SetModelData] = useState(\"\");\r\n\r\n  const [currentUser, SetCurrentUser] = useState(\r\n    localStorage.getItem(\"id\") || \"\"\r\n  );\r\n  const [currentRole, SetCurrentRole] = useState(\r\n    localStorage.getItem(\"role\") || \"\"\r\n  );\r\n\r\n  const getUserList = async () => {\r\n    const user_data = { user_id: currentUser };\r\n    const vehicle_data = await api\r\n      .post(\"role_based_user_list\", user_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return [];\r\n      });\r\n\r\n    // Super Admin\r\n    if (currentRole == 1) {\r\n      SetAdminList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 2) {\r\n      SetDistributorList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 3) {\r\n      SetDealerList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 4) {\r\n      SetCustomerList(vehicle_data?.data?.data?.user_list);\r\n      SetSubdealerList(vehicle_data?.data?.data?.subdealer_list);\r\n    }\r\n    if (currentRole == 5) {\r\n      SetCustomerList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n  };\r\n  const user = () => {\r\n    return localStorage.getItem(\"id\");\r\n  };\r\n  const role = () => {\r\n    return localStorage.getItem(\"role\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    SetCurrentUser(user());\r\n    SetCurrentRole(role());\r\n    getUserList();\r\n    loadVehicles();\r\n    loadPlans();\r\n    loadsims();\r\n    loaddevices();\r\n  }, []);\r\n\r\n  // on change Admin\r\n  const AdminChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetDistributorList([]);\r\n    SetDealerList([]);\r\n    SetSubdealerList([]);\r\n    SetCustomerList([]);\r\n    if (value != null) {\r\n      const user_get_data = { user_id: value };\r\n      const distributor_list = await api\r\n        .post(\"role_based_user_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetDistributorList(distributor_list?.data?.data?.user_list);\r\n    }\r\n  };\r\n  // On change Distributor\r\n  const DistributorChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetDealerList(\"\");\r\n    SetSubdealerList(\"\");\r\n    SetCustomerList(\"\");\r\n    if (value != null) {\r\n      const user_get_data = { user_id: value };\r\n      const dealer_list = await api\r\n        .post(\"role_based_user_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetDealerList(dealer_list?.data?.data?.user_list);\r\n    }\r\n  };\r\n  // on change Dealer\r\n  const DealerChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetSubdealerList([]);\r\n    SetCustomerList([]);\r\n    SetPlanList([]);\r\n    SetSimList([]);\r\n    SetDeviceList([]);\r\n\r\n    if (value != null) {\r\n      const user_get_data = { user_id: value };\r\n      const subdealer_list = await api\r\n        .post(\"role_based_user_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetCustomerList(subdealer_list?.data?.data?.user_list);\r\n      SetSubdealerList(subdealer_list?.data?.data?.subdealer_list);\r\n\r\n      setUserValue(value);\r\n      const plan_list = await api\r\n        .post(\"user_plan_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetPlanList(plan_list?.data.data);\r\n\r\n      const sim_list = await api\r\n        .post(\"sim_stock_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetSimList(sim_list?.data.data);\r\n\r\n      const device_list = await api\r\n        .post(\"device_stock_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetDeviceList(device_list?.data.data);\r\n    }\r\n  };\r\n  // on change SubDealer\r\n  const SubDealerChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n\r\n    SetCustomerList(\"\");\r\n    SetPlanList(\"\");\r\n    SetLicenseList(\"\");\r\n    SetSimList(\"\");\r\n    SetDeviceList(\"\");\r\n    SetDeviceData(\"\");\r\n    SetMakeData(\"\");\r\n    SetModelData(\"\");\r\n    SetSimData(\"\");\r\n\r\n    if (value != null) {\r\n      const user_get_data = { user_id: value };\r\n      const customer_list = await api\r\n        .post(\"role_based_user_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetCustomerList(customer_list?.data?.data?.user_list);\r\n      setUserValue(value);\r\n      const plan_list = await api\r\n        .post(\"user_plan_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetPlanList(plan_list?.data.data);\r\n      const sim_list = await api\r\n        .post(\"sim_stock_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetSimList(sim_list?.data.data);\r\n      const device_list = await api\r\n        .post(\"device_stock_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetDeviceList(device_list?.data.data);\r\n    } else {\r\n      alert(currentRole);\r\n      alert(currentUser);\r\n      if (currentRole == 4) {\r\n        const user_get_data = { user_id: currentUser };\r\n        const subdealer_list = await api\r\n          .post(\"role_based_user_list\", user_get_data)\r\n          .then((res) => {\r\n            return res;\r\n          })\r\n          .catch((err) => {\r\n            return err;\r\n          });\r\n        SetCustomerList(subdealer_list?.data?.data?.user_list);\r\n        SetSubdealerList(subdealer_list?.data?.data?.subdealer_list);\r\n        setUserValue(currentUser);\r\n        const plan_list = await api\r\n          .post(\"user_plan_list\", user_get_data)\r\n          .then((res) => {\r\n            return res;\r\n          })\r\n          .catch((err) => {\r\n            return err;\r\n          });\r\n        SetPlanList(plan_list?.data.data);\r\n\r\n        const sim_list = await api\r\n          .post(\"sim_stock_list\", user_get_data)\r\n          .then((res) => {\r\n            return res;\r\n          })\r\n          .catch((err) => {\r\n            return err;\r\n          });\r\n        SetSimList(sim_list?.data.data);\r\n\r\n        const device_list = await api\r\n          .post(\"device_stock_list\", user_get_data)\r\n          .then((res) => {\r\n            return res;\r\n          })\r\n          .catch((err) => {\r\n            return err;\r\n          });\r\n        SetDeviceList(device_list?.data.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  const CustomerChange = async () => {\r\n    SetVehicleTypeList([]);\r\n    const vehicle_type_list = await api\r\n      .get(\"vehicle_type\")\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetVehicleTypeList(vehicle_type_list?.data?.data);\r\n  };\r\n\r\n  const PlanChange = async (value) => {\r\n    SetLicenseList([]);\r\n\r\n    if (value != null) {\r\n      const data = { user_id: userValue, plan_id: value };\r\n      const license_list = await api\r\n        .post(\"user_license_list\", data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetLicenseList(license_list?.data.data);\r\n    } else {\r\n      alert(\"s\");\r\n    }\r\n  };\r\n\r\n  const DeviceChange = async (value) => {\r\n    SetDeviceData(\"\");\r\n    SetMakeIdData(\"\");\r\n    SetModelIdData(\"\");\r\n    SetMakeData(\"\");\r\n    SetModelData(\"\");\r\n\r\n    try {\r\n      const device_data = await api.get(`device/${value}`);\r\n      const deviceUid = device_data?.data?.data?.uid;\r\n      const device_make_id = device_data?.data?.data?.device_make_id;\r\n      const device_model_id = device_data?.data?.data?.device_model_id;\r\n      const device_make = device_data?.data?.data?.device_make;\r\n      const device_model = device_data?.data?.data?.device_model;\r\n\r\n      if (deviceUid) {\r\n        SetDeviceData(deviceUid);\r\n        SetMakeIdData(device_make_id);\r\n        SetModelIdData(device_model_id);\r\n        SetMakeData(device_make);\r\n        SetModelData(device_model);\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching device data:\", error);\r\n    }\r\n  };\r\n\r\n  const SimChange = async (value) => {\r\n    SetSimData(\"\");\r\n    try {\r\n      const sim_data = await api.get(`sim/${value}`);\r\n      const sim_imei_no = sim_data?.data?.data?.sim_imei_no;\r\n      if (sim_imei_no) {\r\n        SetSimData(sim_imei_no);\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching device data:\", error);\r\n    }\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      setLoading(true);\r\n      values[\"user_id\"] = currentUser;\r\n      const installation_date = new Date(values[\"installation_date\"]);\r\n      values[\"installation_date\"] = installation_date\r\n        .toISOString()\r\n        .split(\"T\")[0];\r\n      await api.post(\"vehicle\", values);\r\n      form.resetFields();\r\n      setLoading(false);\r\n\r\n      openNotification(\"success\", \"Vehicle\", \"Vehicle Added Successfully!\");\r\n      loadVehicles();\r\n      SetSimData(\"\");\r\n      SetDeviceData(\"\");\r\n      SetMakeData(\"\");\r\n      SetModelData(\"\");\r\n      onClose();\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if (error.response && error.response.status === 403) {\r\n        const errorData = error.response.data;\r\n      }\r\n    }\r\n  };\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"id\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      dataIndex: \"vehicle_type\",\r\n    },\r\n    {\r\n      title: \"Vehicle No\",\r\n      dataIndex: \"vehicle_name\",\r\n    },\r\n    {\r\n      title: \"Sim No\",\r\n      dataIndex: \"sim_mob_no\",\r\n    },\r\n    {\r\n      title: \"Device IMEI\",\r\n      dataIndex: \"device_imei\",\r\n    },\r\n    {\r\n      title: \"License No\",\r\n      dataIndex: \"license_no\",\r\n    },\r\n    {\r\n      title: \"Installation Date\",\r\n      dataIndex: \"installation_date\",\r\n    },\r\n    {\r\n      title: \"Expire Date\",\r\n      dataIndex: \"expire_date\",\r\n    },\r\n    {\r\n      title: \"Client Name\",\r\n      dataIndex: \"client_name\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actions\",\r\n      fixed: \"right\",\r\n\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Dropdown overlay={getMenu(record)} placement=\"bottomLeft\">\r\n            <Button>\r\n              Actions <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const getMenu = (record) => (\r\n    <Menu>\r\n      {/* <Menu.Item\r\n        key=\"edit\"\r\n        icon={<EditOutlined />}\r\n        onClick={() => handleEdit(record)}\r\n      >\r\n        Edit\r\n      </Menu.Item> */}\r\n      <Menu.Item\r\n        key=\"config\"\r\n        icon={<SettingOutlined />}\r\n        onClick={() => handleSetting(record)}\r\n      >\r\n        Settings\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const handleEdit = (record) => {\r\n    message.success(`Editing ${record.vehicle_name}`);\r\n  };\r\n\r\n  const handleSetting = async (record) => {\r\n    try {\r\n      const data = {\r\n        vehicle_id: record.id,\r\n        device_imei: record.device_imei,\r\n      };\r\n      const response = await api.post(\"config/show\", data);\r\n      console.log(\"API Response:\", response);\r\n\r\n      if (response.status === 200) {\r\n        const responseData = response.data; // Assuming the data is directly under response.data\r\n        if (responseData.success) {\r\n          const configurationData = responseData.data; // Access the data property\r\n          setEditData(configurationData); // Set the data in setEditData\r\n          setIsComponentVisible(true);\r\n        } else {\r\n          alert(\r\n            \"API request was successful, but the response indicates an error.\"\r\n          );\r\n        }\r\n      } else {\r\n        alert(\"API request failed with status code: \" + response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  const loadVehicles = async () => {\r\n    try {\r\n      const user_data = { user_id: currentUser };\r\n      const response = await api.post(\"vehicle_list\", user_data);\r\n\r\n      if (response.data && Array.isArray(response.data.data)) {\r\n        const processedData = response.data.data.map((item) => ({\r\n          id: item.id,\r\n          vehicle_type: item.vehicle_type,\r\n          vehicle_name: item.vehicle_name,\r\n          sim_mob_no: item.sim_mob_no,\r\n          device_imei: item.device_imei,\r\n          license_no: item.license_no,\r\n          installation_date: item.installation_date,\r\n          expire_date: item.expire_date,\r\n          client_name: item.client_name,\r\n        }));\r\n        setVehicleList(processedData);\r\n        setMainVehicleList(processedData);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  const loadsims = async () => {\r\n    try {\r\n      SetSimList([]);\r\n\r\n      const user_data = { user_id: currentUser };\r\n      const sim_list = await api.post(\"sim_stock_list\", user_data);\r\n\r\n      if (sim_list.data && Array.isArray(sim_list.data.data)) {\r\n        SetSimList(sim_list?.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n  const loaddevices = async () => {\r\n    try {\r\n      SetDeviceList([]);\r\n\r\n      const user_data = { user_id: currentUser };\r\n      const device_list = await api.post(\"device_stock_list\", user_data);\r\n\r\n      if (device_list.data && Array.isArray(device_list.data.data)) {\r\n        SetDeviceList(device_list?.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n  const loadPlans = async () => {\r\n    SetPlanList([]);\r\n\r\n    const data = { user_id: currentUser };\r\n\r\n    const plan_list = await api\r\n      .post(\"user_plan_list\", data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetPlanList(plan_list?.data?.data);\r\n  };\r\n\r\n  const onSearch = (e) => {\r\n    const searchValue = e.currentTarget.value;\r\n    const searchArray = searchValue ? vehicleList : mainvehicleList; // Use a different source if needed\r\n    const filteredUserList = utils.wildCardSearch(searchArray, searchValue);\r\n    setVehicleList(filteredUserList);\r\n    setSelectedRowKeys([]);\r\n  };\r\n\r\n  const parentFunction = () => {\r\n    setIsComponentVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isComponentVisible && (\r\n        <Config parentToChild={editdata} parentFunction={parentFunction} />\r\n      )}\r\n      <Card title=\"Vehicle List\">\r\n        <Row>\r\n          <Flex className=\"mb-1\" mobileFlex={false}>\r\n            <div className=\"mr-md-3 mb-3\">\r\n              <Input\r\n                placeholder=\"Search\"\r\n                prefix={<SearchOutlined />}\r\n                onChange={(e) => onSearch(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-3\"></div>\r\n          </Flex>\r\n          <Col span={4}>\r\n            <Button type=\"primary\" onClick={showDrawer} icon={<PlusOutlined />}>\r\n              Add Vehicle\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <div className=\"table-responsive\">\r\n            <Table\r\n              bordered\r\n              columns={tableColumns}\r\n              dataSource={vehicleList}\r\n              rowKey=\"id\"\r\n            />\r\n          </div>\r\n        </Row>\r\n      </Card>\r\n      <Drawer\r\n        placement=\"right\"\r\n        closable={false}\r\n        onClose={onClose}\r\n        width={850}\r\n        open={open}\r\n        title=\"Add Vehicle\"\r\n      >\r\n        <Spin spinning={loading} delay={500}>\r\n          <Form form={form} name=\"device_form\" onFinish={onFinish}>\r\n            <h5>Users Details:</h5>\r\n            <Row gutter={[10, 10]}>\r\n              {currentRole == 1 && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item name=\"admin_id\">\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={AdminChange}\r\n                      placeholder=\"Select Admin\"\r\n                    >\r\n                      {Array.isArray(adminList) ? (\r\n                        adminList.map((admin) => (\r\n                          <Select.Option\r\n                            key={admin?.id}\r\n                            role_id=\"2\"\r\n                            value={admin?.id}\r\n                          >\r\n                            {admin?.name}\r\n                          </Select.Option>\r\n                        ))\r\n                      ) : (\r\n                        <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {(currentRole == 1 || currentRole == 2) && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item name=\"distributor_id\">\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={DistributorChange}\r\n                      placeholder=\"Select Distributor\"\r\n                    >\r\n                      {Array.isArray(distributorList) ? (\r\n                        distributorList.map((distributor) => (\r\n                          <Option\r\n                            key={distributor?.id}\r\n                            role_id=\"3\"\r\n                            value={distributor?.id}\r\n                          >\r\n                            {distributor?.name}\r\n                          </Option>\r\n                        ))\r\n                      ) : (\r\n                        <Option role_id=\"3\" value=\"\"></Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {(currentRole == 1 || currentRole == 2 || currentRole == 3) && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item name=\"dealer_id\">\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={DealerChange}\r\n                      placeholder=\"Select Dealer\"\r\n                    >\r\n                      {Array.isArray(dealerList) ? (\r\n                        dealerList.map((dealer) => (\r\n                          <Option\r\n                            key={dealer?.id}\r\n                            role_id=\"4\"\r\n                            value={dealer?.id}\r\n                          >\r\n                            {dealer?.name}\r\n                          </Option>\r\n                        ))\r\n                      ) : (\r\n                        <Option role_id=\"4\" value=\"\"></Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {(currentRole == 1 ||\r\n                currentRole == 2 ||\r\n                currentRole == 3 ||\r\n                currentRole == 4) && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item name=\"subdealer_id\">\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={SubDealerChange}\r\n                      placeholder=\"Select SubDealer\"\r\n                    >\r\n                      {Array.isArray(subdealerList) &&\r\n                      subdealerList.length > 0 ? (\r\n                        subdealerList.map((subdealer) => (\r\n                          <Option\r\n                            key={subdealer?.id}\r\n                            role_id=\"5\"\r\n                            value={subdealer?.id}\r\n                          >\r\n                            {subdealer?.name}\r\n                          </Option>\r\n                        ))\r\n                      ) : (\r\n                        <Option></Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {(currentRole == 1 ||\r\n                currentRole == 2 ||\r\n                currentRole == 3 ||\r\n                currentRole == 4 ||\r\n                currentRole == 5) && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item\r\n                    name=\"client_id\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please Select Client Name\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={CustomerChange}\r\n                      placeholder=\"Select Client\"\r\n                    >\r\n                      {Array.isArray(customerList) ? (\r\n                        customerList.map((customer) => (\r\n                          <Option\r\n                            key={customer?.id}\r\n                            role_id=\"6\"\r\n                            value={customer?.id}\r\n                          >\r\n                            {customer?.name}\r\n                          </Option>\r\n                        ))\r\n                      ) : (\r\n                        <Option role_id=\"6\" value=\"\"></Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n            <h5>Licence Details:</h5>\r\n            <Row gutter={6}>\r\n              <Col sm={5} md={10} lg={10} xxl={10}>\r\n                <Form.Item\r\n                  name=\"plan_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select Plan\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    placeholder=\"Select Plan\"\r\n                    onChange={PlanChange}\r\n                  >\r\n                    {Array.isArray(planList) ? (\r\n                      planList.map((plan) => (\r\n                        <Select.Option key={plan?.id} value={plan?.id}>\r\n                          {plan?.package_name}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option value=\"\"></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={5} md={10} lg={10} xxl={10}>\r\n                <Form.Item\r\n                  name=\"license_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select License\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    placeholder=\"Select License\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {Array.isArray(licenseList) ? (\r\n                      licenseList.map((license) => (\r\n                        <Select.Option key={license?.id} value={license?.id}>\r\n                          {license?.license_no}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <h5>Device Details :</h5>\r\n            <Row gutter={6}>\r\n              <Col sm={3} md={6} lg={6} xxl={6}>\r\n                <Form.Item\r\n                  name=\"device_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select Device IMEI\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    onChange={DeviceChange}\r\n                    placeholder=\"Select Device IMEI\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {Array.isArray(deviceList) ? (\r\n                      deviceList.map((device) => (\r\n                        <Select.Option key={device?.id} value={device?.id}>\r\n                          {device?.device_imei_no}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={3} md={6} lg={6} xxl={6}>\r\n                <Form.Item>\r\n                  <Input type=\"text\" value={deviceData}></Input>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={4} md={8} lg={8} xxl={8}>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"device_make_id\"\r\n                  hidden\r\n                  value={makeIdData}\r\n                ></input>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"device_model_id\"\r\n                  hidden\r\n                  value={modelIdData}\r\n                ></input>\r\n                <Form.Item>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    value={makeData + \"-\" + modelData}\r\n                  ></Input>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <h5>SIM Details :</h5>\r\n            <Row gutter={6}>\r\n              <Col sm={5} md={10} lg={10} xxl={10}>\r\n                <Form.Item\r\n                  name=\"sim_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select Sim Mobile No\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    placeholder=\"Select Sim\"\r\n                    optionFilterProp=\"children\"\r\n                    onChange={SimChange}\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {Array.isArray(simList) ? (\r\n                      simList.map((sim) => (\r\n                        <Select.Option key={sim?.id} value={sim?.id}>\r\n                          {sim?.sim_mob_no1}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Form.Item>\r\n                <Input type=\"text\" value={simData}></Input>\r\n              </Form.Item>\r\n            </Row>\r\n            <h5>Vehicle Details :</h5>\r\n            <Row gutter={6}>\r\n              <Col sm={5} md={10} lg={10} xxl={10}>\r\n                <Form.Item\r\n                  name=\"vehicle_type_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select Vehicle Type\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    placeholder=\"Select Vehicle Type\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {Array.isArray(vehicleTypeList) ? (\r\n                      vehicleTypeList.map((vehicletype) => (\r\n                        <Select.Option\r\n                          key={vehicletype?.id}\r\n                          value={vehicletype?.id}\r\n                        >\r\n                          {vehicletype?.vehicle_type}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={4} md={8} lg={8} xxl={8}>\r\n                <Form.Item\r\n                  name=\"vehicle_name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Enter Vehicle Name\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"vehicle_name\"\r\n                    placeholder=\"Vehicle Name\"\r\n                  ></Input>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={4} md={8} lg={8} xxl={8}>\r\n                <Form.Item name=\"installation_date\">\r\n                  <DatePicker\r\n                    required\r\n                    allowClear={false}\r\n                    format={dateFormat}\r\n                    placeholder=\"Installation Date\"\r\n                  ></DatePicker>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Save\r\n                </Button>\r\n              </Form.Item>\r\n            </Row>\r\n          </Form>\r\n        </Spin>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Vehicle;\r\n"],"names":["Flex","styled","div","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","Utils","name","initials","match","shift","pop","toUpperCase","navTree","path","route","p","hasOwnProperty","this","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","key","toLowerCase","list","value","data","filter","item","input","searchText","screens","breakpoints","push","parentToChild","props","Form","useForm","form","useState","isModalOpen","setIsModalOpen","handleOk","openNotification","type","message","description","notification","onSubmit","values","api","post","resetFields","parentFunction","response","status","gutter","className","title","visible","onOk","onCancel","footer","size","onFinish","sm","md","lg","Item","hidden","initialValue","vehicle_id","device_imei","label","parking_alert_time","placeholder","idle_alert_time","speed_limit","expected_mileage","idle_rpm","max_rpm","temp_low","temp_high","fuel_fill_limit","fuel_dip_limit","htmlType","Option","Select","loading","setLoading","isComponentVisible","setIsComponentVisible","editdata","setEditData","open","setOpen","onClose","setSelectedRowKeys","adminList","SetAdminList","distributorList","SetDistributorList","dealerList","SetDealerList","subdealerList","SetSubdealerList","customerList","SetCustomerList","planList","SetPlanList","localStorage","getItem","userValue","setUserValue","licenseList","SetLicenseList","vehicleTypeList","SetVehicleTypeList","simList","SetSimList","simData","SetSimData","vehicleList","setVehicleList","mainvehicleList","setMainVehicleList","deviceList","SetDeviceList","deviceData","SetDeviceData","makeIdData","SetMakeIdData","modelIdData","SetModelIdData","makeData","SetMakeData","modelData","SetModelData","currentUser","SetCurrentUser","currentRole","SetCurrentRole","getUserList","user_data","user_id","then","res","catch","err","vehicle_data","user_list","subdealer_list","useEffect","loadVehicles","loadPlans","loadsims","loaddevices","AdminChange","setFieldValue","user_get_data","distributor_list","DistributorChange","dealer_list","DealerChange","plan_list","sim_list","device_list","SubDealerChange","customer_list","alert","CustomerChange","get","vehicle_type_list","PlanChange","plan_id","license_list","DeviceChange","device_data","deviceUid","uid","device_make_id","device_model_id","device_make","device_model","console","error","SimChange","sim_data","sim_imei_no","installation_date","Date","toISOString","tableColumns","dataIndex","fixed","render","text","record","overlay","getMenu","placement","DownOutlined","icon","SettingOutlined","onClick","handleSetting","id","log","responseData","success","configurationData","Array","isArray","processedData","map","vehicle_type","vehicle_name","sim_mob_no","license_no","expire_date","client_name","mobileFlex","prefix","SearchOutlined","onChange","e","searchValue","currentTarget","searchArray","filteredUserList","utils","wildCardSearch","onSearch","span","PlusOutlined","bordered","columns","dataSource","rowKey","closable","width","spinning","delay","xxl","showSearch","allowClear","optionFilterProp","admin","role_id","distributor","dealer","subdealer","rules","required","customer","plan","package_name","filterOption","option","children","license","device","device_imei_no","sim","sim_mob_no1","vehicletype","format"],"sourceRoot":""}