{"version":3,"file":"static/js/611.eb780a16.chunk.js","mappings":"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","sources":["components/map-components/expiryVehicles.js","../node_modules/react-leaflet/lib/Polyline.js","views/app-views/dashboard/customer.js","../node_modules/react-leaflet/lib/MapContainer.js","../node_modules/react-leaflet/lib/Marker.js","../node_modules/react-leaflet/lib/Popup.js","../node_modules/react-leaflet/lib/TileLayer.js"],"sourcesContent":["import React from 'react'\r\nimport {Table,Row} from 'antd'\r\nconst expiryVehicles = () => {\r\n  return (\r\n    <div>\r\n        <Table></Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default expiryVehicles","import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Polyline as LeafletPolyline } from 'leaflet';\nexport const Polyline = createPathComponent(function createPolyline({ positions , ...options }, ctx) {\n    const polyline = new LeafletPolyline(positions, options);\n    return createElementObject(polyline, extendContext(ctx, {\n        overlayContainer: polyline\n    }));\n}, function updatePolyline(layer, props, prevProps) {\n    if (props.positions !== prevProps.positions) {\n        layer.setLatLngs(props.positions);\n    }\n});\n","import React, { useState } from 'react'\r\nimport {Form,Row,Col,Card,Table,Select,Input,Badge,Avatar,Divider,Tabs, List } from 'antd'\r\nimport {MapContainer,TileLayer,Marker,Popup,LayersControl,Polyline} from 'react-leaflet'\r\nimport { WHITE } from 'constants/ThemeConstant'\r\nimport { Sticky, StickyContainer } from 'react-sticky';\r\nimport AllVehicles from 'components/map-components/allVehicles';\r\nimport IdleVehicles from 'components/map-components/idleVehicles';\r\nimport MovingVehicles from 'components/map-components/movingVehicles';\r\nimport ParkingVehicles from 'components/map-components/parkingVehicles';\r\nimport NoNetworkVehicles from 'components/map-components/noNetworkVehicles';\r\nimport ExpiryVehicles from 'components/map-components/expiryVehicles';\r\nconst { Option } = Select\r\n\r\nexport const Customer = () => {\r\n    // const mapStyle = {\r\n    //     width: '100%',\r\n    //     height: '100vh',\r\n    //     position: 'relative',\r\n    //   };\r\n    //   const tabViewStyle = {\r\n    //     position: 'absolute',\r\n    //     top: '10px',\r\n    //     left: '10px',\r\n    //     backgroundColor: 'white',\r\n    //     padding: '10px',\r\n    //     zIndex: 1000,\r\n    //     pointerEvents: 'auto'\r\n    // };\r\n    const center = [51.505, -0.09]\r\n    const polyline = [\r\n        [51.505, -0.09],\r\n        [51.51, -0.1],\r\n        [51.51, -0.12],\r\n      ]\r\n      const limeOptions = { color: 'lime' }\r\n    const { BaseLayer } = LayersControl;\r\n    const tableColumns = [\r\n        {\r\n            title: 'Vehicle No.',\r\n            dataIndex: 'vehicle_no',\r\n            key: 'vehicle_no',\r\n          },\r\n          {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n          },\r\n    ];\r\n    const handleChange = (values) =>{\r\n        console.log(values);\r\n    }\r\n    \r\nreturn(\r\n    <>\r\n        <Row style={{height:'600','margin':'0','padding':'0'}}>\r\n            <Col xs={24} sm={24} md={24} lg={24} style={{padding:0,margin:0}}>\r\n                <Row gutter={6} style={{padding:0,margin:0}}>\r\n                    <Col sm={12} md={6} lg={6}  style={{padding:0,margin:0}}>\r\n                    <Form name=\"customer-form\" layout=\"inline\" size=\"small\">\r\n                            <Col xs={12}>\r\n                            <Form.Item name=\"dealer_id\" size=\"small\" rules={[{required:true,message:'Dealer Value is Required!'}]}>\r\n                                <Select showSearch onChange={handleChange} placeholder=\"Dealer/Reseller\">\r\n                                    <Option value=\"1\" selected>Acute</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                            <Form.Item name=\"customer_id\" size=\"small\" rules={[{required:true,message:'Customer Value is Required!'}]}>\r\n                                <Select showSearch onChange={handleChange} placeholder=\"Customer\">\r\n                                    <Option value=\"1\">Customer 1</Option>\r\n                                    <Option value=\"2\">Customer 2</Option>\r\n                                    <Option value=\"3\">Customer 3</Option>\r\n                                    <Option value=\"4\">Customer 4</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                            <Form.Item name=\"dealer_id\"  rules={[{required:true,message:'Dealer Value is Required!'}]}>\r\n                                <Select showSearch onChange={handleChange} placeholder=\"Dealer/Reseller\">\r\n                                    <Option value=\"1\" selected>Acute</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                            <Form.Item name=\"customer_id\"  rules={[{required:true,message:'Customer Value is Required!'}]}>\r\n                                <Select showSearch onChange={handleChange} placeholder=\"Customer\">\r\n                                    <Option value=\"1\">Customer 1</Option>\r\n                                    <Option value=\"2\">Customer 2</Option>\r\n                                    <Option value=\"3\">Customer 3</Option>\r\n                                    <Option value=\"4\">Customer 4</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            </Col>\r\n                        </Form>\r\n                        <Card style={{padding:0,margin:0}}>\r\n                            <StickyContainer style={{padding:0,margin:0}}>\r\n                                <Tabs defaultActiveKey=\"1\"  items={[\r\n                                        {\r\n                                            label: `All`,\r\n                                            key: '1',\r\n                                            children: <AllVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Moving`,\r\n                                            key: '2',\r\n                                            children: <MovingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Idle`,\r\n                                            key: '3',\r\n                                            children: <IdleVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Parking`,\r\n                                            key: '4',\r\n                                            children: <ParkingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `OOC`,\r\n                                            key: '5',\r\n                                            children: <NoNetworkVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Expired`,\r\n                                            key: '6',\r\n                                            children: <ExpiryVehicles/>,\r\n                                        },\r\n                                    ]} />\r\n                            </StickyContainer>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={12} md={18} lg={18} style={{padding:0}}>\r\n                        <Card  style={{height:'600'}}>\r\n                            <MapContainer center={center} zoom={13} scrollWheelZoom={true}>\r\n                                <LayersControl>\r\n                                    <BaseLayer checked name=\"OpenStreetMap\">\r\n                                        <TileLayer\r\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                                        />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer name=\"Google-Street View\">\r\n                                        <TileLayer\r\n                                            attribution=\"Google Maps\"\r\n                                            url=\"https://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                                            />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer checked name=\"Google-Satelite\">\r\n                                    <TileLayer\r\n                                            url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                                            maxZoom= {20}\r\n                                            subdomains={['mt1','mt2','mt3']}\r\n                                        />\r\n                                    </BaseLayer>\r\n                                </LayersControl>\r\n\r\n                                <Marker position={center}>\r\n                                    <Popup>\r\n                                        <Card size=\"small\" style={{background:\"lightblue\"}} >\r\n                                            <Row>\r\n                                                <Col>\r\n                                                <div>Vehicle No: TN01AB1234</div>\r\n                                            <div>Status: MOVING</div>\r\n                                            <div>Speed: 30 km/hr</div>\r\n                                            <div>Battery: 25.86 volt</div>\r\n                                            <div>Last Updated on: 2023-08-02 13:56:47</div>\r\n                                            <div>Lat/Long: 10.7920,79.5656</div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Card>\r\n                                    </Popup>\r\n                                </Marker>\r\n\r\n                                <Polyline pathOptions={limeOptions} positions={polyline} />\r\n                            </MapContainer>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n         {/* <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24}>\r\n                <Row gutter={6} style={{padding:0,margin:0}}>\r\n                    <Col sm={12} md={5} lg={5}>\r\n                    <StickyContainer style={{padding:0,margin:0}}>\r\n                                <Tabs defaultActiveKey=\"1\" size='small' style={{fontSize:'10px'}}  items={[\r\n                                        {\r\n                                            label: `All`,\r\n                                            key: '1',\r\n                                            children: <AllVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Moving`,\r\n                                            key: '2',\r\n                                            children: <MovingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Idle`,\r\n                                            key: '3',\r\n                                            children: <IdleVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Parking`,\r\n                                            key: '4',\r\n                                            children: <ParkingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `OOC`,\r\n                                            key: '5',\r\n                                            children: <NoNetworkVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Expired`,\r\n                                            key: '6',\r\n                                            children: <ExpiryVehicles/>,\r\n                                        },\r\n                                    ]} />\r\n                            </StickyContainer>\r\n                    </Col>\r\n                    <Col sm={12} md={19} lg={19}>\r\n                    <MapContainer center={center} zoom={13} scrollWheelZoom={true}>\r\n                                <LayersControl>\r\n                                    <BaseLayer checked name=\"OpenStreetMap\">\r\n                                        <TileLayer\r\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                                        />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer name=\"Google-Street View\">\r\n                                        <TileLayer\r\n                                            attribution=\"Google Maps\"\r\n                                            url=\"https://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                                            />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer checked name=\"Google-Satelite\">\r\n                                    <TileLayer\r\n                                            url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                                            maxZoom= {20}\r\n                                            subdomains={['mt1','mt2','mt3']}\r\n                                        />\r\n                                    </BaseLayer>\r\n                                </LayersControl>\r\n\r\n                                <Marker position={center}>\r\n                                    <Popup>\r\n                                        <Card size=\"small\" style={{background:\"lightblue\"}} >\r\n                                            <Row>\r\n                                                <Col>\r\n                                                <div>Vehicle No: TN01AB1234</div>\r\n                                            <div>Status: MOVING</div>\r\n                                            <div>Speed: 30 km/hr</div>\r\n                                            <div>Battery: 25.86 volt</div>\r\n                                            <div>Last Updated on: 2023-08-02 13:56:47</div>\r\n                                            <div>Lat/Long: 10.7920,79.5656</div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Card>\r\n                                    </Popup>\r\n                                </Marker>\r\n\r\n                                <Polyline pathOptions={limeOptions} positions={polyline} />\r\n                            </MapContainer>\r\n                    </Col>\r\n                </Row>\r\n            </Col> \r\n        </Row>                           */}\r\n        {/* <MapContainer center={center} zoom={13} scrollWheelZoom={true}>\r\n        <LayersControl>\r\n                                    <BaseLayer checked name=\"OpenStreetMap\">\r\n                                        <TileLayer\r\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                                        />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer name=\"Google-Street View\">\r\n                                        <TileLayer\r\n                                            attribution=\"Google Maps\"\r\n                                            url=\"https://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                                            />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer checked name=\"Google-Satelite\">\r\n                                    <TileLayer\r\n                                            url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                                            maxZoom= {20}\r\n                                            subdomains={['mt1','mt2','mt3']}\r\n                                        />\r\n                                    </BaseLayer>\r\n                                </LayersControl>\r\n                                <div style={tabViewStyle}>\r\n                                <StickyContainer style={{padding:0,margin:0}}>\r\n                                <Tabs defaultActiveKey=\"1\"  items={[\r\n                                        {\r\n                                            label: `All`,\r\n                                            key: '1',\r\n                                            children: <AllVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Moving`,\r\n                                            key: '2',\r\n                                            children: <MovingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Idle`,\r\n                                            key: '3',\r\n                                            children: <IdleVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Parking`,\r\n                                            key: '4',\r\n                                            children: <ParkingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `OOC`,\r\n                                            key: '5',\r\n                                            children: <NoNetworkVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Expired`,\r\n                                            key: '6',\r\n                                            children: <ExpiryVehicles/>,\r\n                                        },\r\n                                    ]} />\r\n                            </StickyContainer>\r\n                </div>\r\n        </MapContainer> */}\r\n    </>\r\n)\r\n}\r\n\r\nexport default Customer;","function _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nimport { LeafletProvider, createLeafletContext } from '@react-leaflet/core';\nimport { Map as LeafletMap } from 'leaflet';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nfunction MapContainerComponent({ bounds , boundsOptions , center , children , className , id , placeholder , style , whenReady , zoom , ...options }, forwardedRef) {\n    const [props] = useState({\n        className,\n        id,\n        style\n    });\n    const [context, setContext] = useState(null);\n    useImperativeHandle(forwardedRef, ()=>context?.map ?? null, [\n        context\n    ]);\n    const mapRef = useCallback((node)=>{\n        if (node !== null && context === null) {\n            const map = new LeafletMap(node, options);\n            if (center != null && zoom != null) {\n                map.setView(center, zoom);\n            } else if (bounds != null) {\n                map.fitBounds(bounds, boundsOptions);\n            }\n            if (whenReady != null) {\n                map.whenReady(whenReady);\n            }\n            setContext(createLeafletContext(map));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    useEffect(()=>{\n        return ()=>{\n            context?.map.remove();\n        };\n    }, [\n        context\n    ]);\n    const contents = context ? /*#__PURE__*/ React.createElement(LeafletProvider, {\n        value: context\n    }, children) : placeholder ?? null;\n    return /*#__PURE__*/ React.createElement(\"div\", _extends({}, props, {\n        ref: mapRef\n    }), contents);\n}\nexport const MapContainer = /*#__PURE__*/ forwardRef(MapContainerComponent);\n","import { createElementObject, createLayerComponent, extendContext } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({ position , ...options }, ctx) {\n    const marker = new LeafletMarker(position, options);\n    return createElementObject(marker, extendContext(ctx, {\n        overlayContainer: marker\n    }));\n}, function updateMarker(marker, props, prevProps) {\n    if (props.position !== prevProps.position) {\n        marker.setLatLng(props.position);\n    }\n    if (props.icon != null && props.icon !== prevProps.icon) {\n        marker.setIcon(props.icon);\n    }\n    if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n        marker.setZIndexOffset(props.zIndexOffset);\n    }\n    if (props.opacity != null && props.opacity !== prevProps.opacity) {\n        marker.setOpacity(props.opacity);\n    }\n    if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n        if (props.draggable === true) {\n            marker.dragging.enable();\n        } else {\n            marker.dragging.disable();\n        }\n    }\n});\n","import { createElementObject, createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n    const popup = new LeafletPopup(props, context.overlayContainer);\n    return createElementObject(popup, context);\n}, function usePopupLifecycle(element, context, { position  }, setOpen) {\n    useEffect(function addPopup() {\n        const { instance  } = element;\n        function onPopupOpen(event) {\n            if (event.popup === instance) {\n                instance.update();\n                setOpen(true);\n            }\n        }\n        function onPopupClose(event) {\n            if (event.popup === instance) {\n                setOpen(false);\n            }\n        }\n        context.map.on({\n            popupopen: onPopupOpen,\n            popupclose: onPopupClose\n        });\n        if (context.overlayContainer == null) {\n            // Attach to a Map\n            if (position != null) {\n                instance.setLatLng(position);\n            }\n            instance.openOn(context.map);\n        } else {\n            // Attach to container component\n            context.overlayContainer.bindPopup(instance);\n        }\n        return function removePopup() {\n            context.map.off({\n                popupopen: onPopupOpen,\n                popupclose: onPopupClose\n            });\n            context.overlayContainer?.unbindPopup();\n            context.map.removeLayer(instance);\n        };\n    }, [\n        element,\n        context,\n        setOpen,\n        position\n    ]);\n});\n","import { createElementObject, createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({ url , ...options }, context) {\n    const layer = new LeafletTileLayer(url, withPane(options, context));\n    return createElementObject(layer, context);\n}, function updateTileLayer(layer, props, prevProps) {\n    updateGridLayer(layer, props, prevProps);\n    const { url  } = props;\n    if (url != null && url !== prevProps.url) {\n        layer.setUrl(url);\n    }\n});\n"],"names":["Polyline","createPathComponent","ctx","positions","options","polyline","LeafletPolyline","createElementObject","extendContext","overlayContainer","layer","props","prevProps","setLatLngs","Option","Select","Customer","center","BaseLayer","LayersControl","handleChange","values","console","log","style","height","xs","sm","md","lg","padding","margin","gutter","name","layout","size","Item","rules","required","message","showSearch","onChange","placeholder","value","selected","defaultActiveKey","items","label","key","children","MapContainer","zoom","scrollWheelZoom","checked","TileLayer","url","attribution","maxZoom","subdomains","Marker","position","Popup","background","pathOptions","color","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","MapContainerComponent","forwardedRef","bounds","boundsOptions","className","id","whenReady","useState","context","setContext","useImperativeHandle","map","mapRef","useCallback","node","LeafletMap","setView","fitBounds","createLeafletContext","useEffect","remove","contents","React","LeafletProvider","ref","forwardRef","createLayerComponent","marker","LeafletMarker","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","createOverlayComponent","popup","LeafletPopup","element","setOpen","instance","onPopupOpen","event","update","onPopupClose","on","popupopen","popupclose","openOn","bindPopup","off","unbindPopup","removeLayer","createTileLayerComponent","LeafletTileLayer","withPane","updateGridLayer","setUrl"],"sourceRoot":""}