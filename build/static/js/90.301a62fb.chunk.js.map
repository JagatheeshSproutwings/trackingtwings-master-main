{"version":3,"file":"static/js/90.301a62fb.chunk.js","mappings":"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","sources":["components/map-components/expiryVehicles.js","views/app-views/dashboard/customer.js","../node_modules/react-leaflet/lib/Polyline.js","../node_modules/react-leaflet/lib/Popup.js"],"sourcesContent":["import React from 'react'\r\nimport {Table,Row} from 'antd'\r\nconst expiryVehicles = () => {\r\n  return (\r\n    <div>\r\n        <Table></Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default expiryVehicles","import React, { useState } from 'react'\r\nimport {Form,Row,Col,Card,Table,Select,Input,Badge,Avatar,Divider,Tabs, List } from 'antd'\r\nimport {MapContainer,TileLayer,Marker,Popup,LayersControl,Polyline} from 'react-leaflet'\r\nimport { WHITE } from 'constants/ThemeConstant'\r\nimport { Sticky, StickyContainer } from 'react-sticky';\r\nimport AllVehicles from 'components/map-components/allVehicles';\r\nimport IdleVehicles from 'components/map-components/idleVehicles';\r\nimport MovingVehicles from 'components/map-components/movingVehicles';\r\nimport ParkingVehicles from 'components/map-components/parkingVehicles';\r\nimport NoNetworkVehicles from 'components/map-components/noNetworkVehicles';\r\nimport ExpiryVehicles from 'components/map-components/expiryVehicles';\r\nconst { Option } = Select\r\n\r\nexport const Customer = () => {\r\n    // const mapStyle = {\r\n    //     width: '100%',\r\n    //     height: '100vh',\r\n    //     position: 'relative',\r\n    //   };\r\n    //   const tabViewStyle = {\r\n    //     position: 'absolute',\r\n    //     top: '10px',\r\n    //     left: '10px',\r\n    //     backgroundColor: 'white',\r\n    //     padding: '10px',\r\n    //     zIndex: 1000,\r\n    //     pointerEvents: 'auto'\r\n    // };\r\n    const center = [51.505, -0.09]\r\n    const polyline = [\r\n        [51.505, -0.09],\r\n        [51.51, -0.1],\r\n        [51.51, -0.12],\r\n      ]\r\n      const limeOptions = { color: 'lime' }\r\n    const { BaseLayer } = LayersControl;\r\n    const tableColumns = [\r\n        {\r\n            title: 'Vehicle No.',\r\n            dataIndex: 'vehicle_no',\r\n            key: 'vehicle_no',\r\n          },\r\n          {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n          },\r\n    ];\r\n    const handleChange = (values) =>{\r\n        console.log(values);\r\n    }\r\n    \r\nreturn(\r\n    <>\r\n        <Row style={{height:'600','margin':'0','padding':'0'}}>\r\n            <Col xs={24} sm={24} md={24} lg={24} style={{padding:0,margin:0}}>\r\n                <Row gutter={6} style={{padding:0,margin:0}}>\r\n                    <Col sm={12} md={6} lg={6}  style={{padding:0,margin:0}}>\r\n                    <Form name=\"customer-form\" layout=\"inline\" size=\"small\">\r\n                            <Col xs={12}>\r\n                            <Form.Item name=\"dealer_id\" size=\"small\" rules={[{required:true,message:'Dealer Value is Required!'}]}>\r\n                                <Select showSearch onChange={handleChange} placeholder=\"Dealer/Reseller\">\r\n                                    <Option value=\"1\" selected>Acute</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                            <Form.Item name=\"customer_id\" size=\"small\" rules={[{required:true,message:'Customer Value is Required!'}]}>\r\n                                <Select showSearch onChange={handleChange} placeholder=\"Customer\">\r\n                                    <Option value=\"1\">Customer 1</Option>\r\n                                    <Option value=\"2\">Customer 2</Option>\r\n                                    <Option value=\"3\">Customer 3</Option>\r\n                                    <Option value=\"4\">Customer 4</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                            <Form.Item name=\"dealer_id\"  rules={[{required:true,message:'Dealer Value is Required!'}]}>\r\n                                <Select showSearch onChange={handleChange} placeholder=\"Dealer/Reseller\">\r\n                                    <Option value=\"1\" selected>Acute</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                            <Form.Item name=\"customer_id\"  rules={[{required:true,message:'Customer Value is Required!'}]}>\r\n                                <Select showSearch onChange={handleChange} placeholder=\"Customer\">\r\n                                    <Option value=\"1\">Customer 1</Option>\r\n                                    <Option value=\"2\">Customer 2</Option>\r\n                                    <Option value=\"3\">Customer 3</Option>\r\n                                    <Option value=\"4\">Customer 4</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            </Col>\r\n                        </Form>\r\n                        <Card style={{padding:0,margin:0}}>\r\n                            <StickyContainer style={{padding:0,margin:0}}>\r\n                                <Tabs defaultActiveKey=\"1\"  items={[\r\n                                        {\r\n                                            label: `All`,\r\n                                            key: '1',\r\n                                            children: <AllVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Moving`,\r\n                                            key: '2',\r\n                                            children: <MovingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Idle`,\r\n                                            key: '3',\r\n                                            children: <IdleVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Parking`,\r\n                                            key: '4',\r\n                                            children: <ParkingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `OOC`,\r\n                                            key: '5',\r\n                                            children: <NoNetworkVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Expired`,\r\n                                            key: '6',\r\n                                            children: <ExpiryVehicles/>,\r\n                                        },\r\n                                    ]} />\r\n                            </StickyContainer>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={12} md={18} lg={18} style={{padding:0}}>\r\n                        <Card  style={{height:'600'}}>\r\n                            <MapContainer center={center} zoom={13} scrollWheelZoom={true}>\r\n                                <LayersControl>\r\n                                    <BaseLayer checked name=\"OpenStreetMap\">\r\n                                        <TileLayer\r\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                                        />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer name=\"Google-Street View\">\r\n                                        <TileLayer\r\n                                            attribution=\"Google Maps\"\r\n                                            url=\"https://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                                            />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer checked name=\"Google-Satelite\">\r\n                                    <TileLayer\r\n                                            url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                                            maxZoom= {20}\r\n                                            subdomains={['mt1','mt2','mt3']}\r\n                                        />\r\n                                    </BaseLayer>\r\n                                </LayersControl>\r\n\r\n                                <Marker position={center}>\r\n                                    <Popup>\r\n                                        <Card size=\"small\" style={{background:\"lightblue\"}} >\r\n                                            <Row>\r\n                                                <Col>\r\n                                                <div>Vehicle No: TN01AB1234</div>\r\n                                            <div>Status: MOVING</div>\r\n                                            <div>Speed: 30 km/hr</div>\r\n                                            <div>Battery: 25.86 volt</div>\r\n                                            <div>Last Updated on: 2023-08-02 13:56:47</div>\r\n                                            <div>Lat/Long: 10.7920,79.5656</div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Card>\r\n                                    </Popup>\r\n                                </Marker>\r\n\r\n                                <Polyline pathOptions={limeOptions} positions={polyline} />\r\n                            </MapContainer>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n         {/* <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24}>\r\n                <Row gutter={6} style={{padding:0,margin:0}}>\r\n                    <Col sm={12} md={5} lg={5}>\r\n                    <StickyContainer style={{padding:0,margin:0}}>\r\n                                <Tabs defaultActiveKey=\"1\" size='small' style={{fontSize:'10px'}}  items={[\r\n                                        {\r\n                                            label: `All`,\r\n                                            key: '1',\r\n                                            children: <AllVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Moving`,\r\n                                            key: '2',\r\n                                            children: <MovingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Idle`,\r\n                                            key: '3',\r\n                                            children: <IdleVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Parking`,\r\n                                            key: '4',\r\n                                            children: <ParkingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `OOC`,\r\n                                            key: '5',\r\n                                            children: <NoNetworkVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Expired`,\r\n                                            key: '6',\r\n                                            children: <ExpiryVehicles/>,\r\n                                        },\r\n                                    ]} />\r\n                            </StickyContainer>\r\n                    </Col>\r\n                    <Col sm={12} md={19} lg={19}>\r\n                    <MapContainer center={center} zoom={13} scrollWheelZoom={true}>\r\n                                <LayersControl>\r\n                                    <BaseLayer checked name=\"OpenStreetMap\">\r\n                                        <TileLayer\r\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                                        />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer name=\"Google-Street View\">\r\n                                        <TileLayer\r\n                                            attribution=\"Google Maps\"\r\n                                            url=\"https://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                                            />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer checked name=\"Google-Satelite\">\r\n                                    <TileLayer\r\n                                            url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                                            maxZoom= {20}\r\n                                            subdomains={['mt1','mt2','mt3']}\r\n                                        />\r\n                                    </BaseLayer>\r\n                                </LayersControl>\r\n\r\n                                <Marker position={center}>\r\n                                    <Popup>\r\n                                        <Card size=\"small\" style={{background:\"lightblue\"}} >\r\n                                            <Row>\r\n                                                <Col>\r\n                                                <div>Vehicle No: TN01AB1234</div>\r\n                                            <div>Status: MOVING</div>\r\n                                            <div>Speed: 30 km/hr</div>\r\n                                            <div>Battery: 25.86 volt</div>\r\n                                            <div>Last Updated on: 2023-08-02 13:56:47</div>\r\n                                            <div>Lat/Long: 10.7920,79.5656</div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Card>\r\n                                    </Popup>\r\n                                </Marker>\r\n\r\n                                <Polyline pathOptions={limeOptions} positions={polyline} />\r\n                            </MapContainer>\r\n                    </Col>\r\n                </Row>\r\n            </Col> \r\n        </Row>                           */}\r\n        {/* <MapContainer center={center} zoom={13} scrollWheelZoom={true}>\r\n        <LayersControl>\r\n                                    <BaseLayer checked name=\"OpenStreetMap\">\r\n                                        <TileLayer\r\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                                        />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer name=\"Google-Street View\">\r\n                                        <TileLayer\r\n                                            attribution=\"Google Maps\"\r\n                                            url=\"https://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                                            />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer checked name=\"Google-Satelite\">\r\n                                    <TileLayer\r\n                                            url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                                            maxZoom= {20}\r\n                                            subdomains={['mt1','mt2','mt3']}\r\n                                        />\r\n                                    </BaseLayer>\r\n                                </LayersControl>\r\n                                <div style={tabViewStyle}>\r\n                                <StickyContainer style={{padding:0,margin:0}}>\r\n                                <Tabs defaultActiveKey=\"1\"  items={[\r\n                                        {\r\n                                            label: `All`,\r\n                                            key: '1',\r\n                                            children: <AllVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Moving`,\r\n                                            key: '2',\r\n                                            children: <MovingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Idle`,\r\n                                            key: '3',\r\n                                            children: <IdleVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Parking`,\r\n                                            key: '4',\r\n                                            children: <ParkingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `OOC`,\r\n                                            key: '5',\r\n                                            children: <NoNetworkVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Expired`,\r\n                                            key: '6',\r\n                                            children: <ExpiryVehicles/>,\r\n                                        },\r\n                                    ]} />\r\n                            </StickyContainer>\r\n                </div>\r\n        </MapContainer> */}\r\n    </>\r\n)\r\n}\r\n\r\nexport default Customer;","import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Polyline as LeafletPolyline } from 'leaflet';\nexport const Polyline = createPathComponent(function createPolyline({ positions , ...options }, ctx) {\n    const polyline = new LeafletPolyline(positions, options);\n    return createElementObject(polyline, extendContext(ctx, {\n        overlayContainer: polyline\n    }));\n}, function updatePolyline(layer, props, prevProps) {\n    if (props.positions !== prevProps.positions) {\n        layer.setLatLngs(props.positions);\n    }\n});\n","import { createElementObject, createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n    const popup = new LeafletPopup(props, context.overlayContainer);\n    return createElementObject(popup, context);\n}, function usePopupLifecycle(element, context, { position  }, setOpen) {\n    useEffect(function addPopup() {\n        const { instance  } = element;\n        function onPopupOpen(event) {\n            if (event.popup === instance) {\n                instance.update();\n                setOpen(true);\n            }\n        }\n        function onPopupClose(event) {\n            if (event.popup === instance) {\n                setOpen(false);\n            }\n        }\n        context.map.on({\n            popupopen: onPopupOpen,\n            popupclose: onPopupClose\n        });\n        if (context.overlayContainer == null) {\n            // Attach to a Map\n            if (position != null) {\n                instance.setLatLng(position);\n            }\n            instance.openOn(context.map);\n        } else {\n            // Attach to container component\n            context.overlayContainer.bindPopup(instance);\n        }\n        return function removePopup() {\n            context.map.off({\n                popupopen: onPopupOpen,\n                popupclose: onPopupClose\n            });\n            context.overlayContainer?.unbindPopup();\n            context.map.removeLayer(instance);\n        };\n    }, [\n        element,\n        context,\n        setOpen,\n        position\n    ]);\n});\n"],"names":["Option","Select","Customer","center","BaseLayer","LayersControl","handleChange","values","console","log","style","height","xs","sm","md","lg","padding","margin","gutter","name","layout","size","Item","rules","required","message","showSearch","onChange","placeholder","value","selected","defaultActiveKey","items","label","key","children","zoom","scrollWheelZoom","checked","url","attribution","maxZoom","subdomains","position","background","pathOptions","color","positions","Polyline","createPathComponent","ctx","options","polyline","LeafletPolyline","createElementObject","extendContext","overlayContainer","layer","props","prevProps","setLatLngs","Popup","createOverlayComponent","context","popup","LeafletPopup","element","setOpen","useEffect","instance","onPopupOpen","event","update","onPopupClose","map","on","popupopen","popupclose","setLatLng","openOn","bindPopup","off","unbindPopup","removeLayer"],"sourceRoot":""}