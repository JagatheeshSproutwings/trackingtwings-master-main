{"version":3,"file":"static/js/554.2dafc5dc.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","views/app-views/stock_management/demo/index.js","views/app-views/stock_management/device/create.js","views/app-views/stock_management/device/edit.js","views/app-views/stock_management/device/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Card, Select, Form, Button } from \"antd\";\r\nimport api from \"configs/apiConfig\";\r\nimport Input from \"antd/es/input/Input\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nconst { Option } = Select;\r\n\r\nconst Assign = ({ parentToChild }) => {\r\n  const [form] = Form.useForm();\r\n  const [isComponentVisible, setIsComponentVisible] = useState(true);\r\n\r\n  const [adminList, SetAdminList] = useState([]);\r\n  const [distributorList, SetDistributorList] = useState([]);\r\n  const [dealerList, SetDealerList] = useState([]);\r\n  const [subdealerList, SetSubdealerList] = useState([]);\r\n\r\n  const toggleComponentVisibility = () => {\r\n    setIsComponentVisible(!isComponentVisible);\r\n  };\r\n  const [currentUser, SetCurrentUser] = useState(\r\n    localStorage.getItem(\"id\") || \"\"\r\n  );\r\n  const [currentRole, SetCurrentRole] = useState(\r\n    localStorage.getItem(\"role\") || \"\"\r\n  );\r\n\r\n  const getUserList = async () => {\r\n    const user_data = { user_id: currentUser };\r\n    const vehicle_data = await api\r\n      .post(\"role_based_user_list\", user_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return [];\r\n      });\r\n\r\n    // Super Admin\r\n    if (currentRole == 1) {\r\n      console.log(\"Super Admin\");\r\n      SetAdminList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 2) {\r\n      console.log(\"Admin\");\r\n      SetDistributorList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 3) {\r\n      console.log(\"Distributor\");\r\n      SetDealerList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 4) {\r\n      console.log(\"Dealer\");\r\n      SetSubdealerList(vehicle_data?.data?.data?.subdealer_list);\r\n    }\r\n  };\r\n  const user = () => {\r\n    return localStorage.getItem(\"id\");\r\n  };\r\n  const role = () => {\r\n    return localStorage.getItem(\"role\");\r\n  };\r\n\r\n  // on change Admin\r\n  const AdminChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetDistributorList([]);\r\n    SetDealerList([]);\r\n    SetSubdealerList([]);\r\n    const user_get_data = { user_id: value };\r\n    const distributor_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetDistributorList(distributor_list?.data?.data?.user_list);\r\n  };\r\n  // On change Distributor\r\n  const DistributorChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetDealerList(\"\");\r\n    SetSubdealerList(\"\");\r\n    const user_get_data = { user_id: value };\r\n    const dealer_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetDealerList(dealer_list?.data?.data?.user_list);\r\n  };\r\n  // on change Dealer\r\n  const DealerChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetSubdealerList([]);\r\n\r\n    const user_get_data = { user_id: value };\r\n    const subdealer_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetSubdealerList(subdealer_list?.data?.data?.subdealer_list);\r\n  };\r\n\r\n  useEffect(() => {\r\n    SetCurrentUser(user());\r\n    SetCurrentRole(role());\r\n    getUserList();\r\n  }, []);\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(values[\"type\"]);\r\n    values[\"id\"] = parentToChild[0];\r\n    if (parentToChild[1] == \"Sim\") {\r\n      const form_data = await api\r\n        .post(\"sim_transfer\", values)\r\n        .then((res) => {\r\n          return alert(\"Sim Transfered Successfuly\");\r\n        })\r\n        .catch((err) => {\r\n          return [];\r\n        });\r\n      toggleComponentVisibility();\r\n    } else if (parentToChild[1] == \"Device\") {\r\n      values[\"id\"] = parentToChild[0];\r\n      const form_data = await api\r\n        .post(\"device_transfer\", values)\r\n        .then((res) => {\r\n          return alert(\"Device Transfered Successfuly\");\r\n        })\r\n        .catch((err) => {\r\n          return [];\r\n        });\r\n      toggleComponentVisibility();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row gutter={6}>\r\n      {isComponentVisible && (\r\n        <Col>\r\n          <Card title=\"Assign Form\">\r\n            <Flex>\r\n              <div className=\"container\">\r\n                <Form layout=\"vertical\" size=\"small\" onFinish={onFinish}>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {currentRole == 1 && (\r\n                      <Form.Item label=\"Admin\" name=\"admin_id\">\r\n                        <Select\r\n                          onChange={AdminChange}\r\n                          allowClear\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                        >\r\n                          {Array.isArray(adminList) ? (\r\n                            adminList.map((admin) => (\r\n                              <Select.Option\r\n                                key={admin?.id}\r\n                                role_id=\"2\"\r\n                                value={admin?.id}\r\n                              >\r\n                                {admin?.name}\r\n                              </Select.Option>\r\n                            ))\r\n                          ) : (\r\n                            <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {(currentRole == 1 || currentRole == 2) && (\r\n                      <Form.Item label=\"Distributor\" name=\"distributor_id\">\r\n                        <Select\r\n                          onChange={DistributorChange}\r\n                          allowClear\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                        >\r\n                          {Array.isArray(distributorList) ? (\r\n                            distributorList.map((distributor) => (\r\n                              <Option\r\n                                key={distributor?.id}\r\n                                role_id=\"3\"\r\n                                value={distributor?.id}\r\n                              >\r\n                                {distributor?.name}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option role_id=\"3\" value=\"\"></Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {(currentRole == 1 ||\r\n                      currentRole == 2 ||\r\n                      currentRole == 3) && (\r\n                      <Form.Item label=\"Dealer\" name=\"dealer_id\">\r\n                        <Select\r\n                          onChange={DealerChange}\r\n                          allowClear\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                        >\r\n                          {Array.isArray(dealerList) ? (\r\n                            dealerList.map((dealer) => (\r\n                              <Option\r\n                                key={dealer?.id}\r\n                                role_id=\"4\"\r\n                                value={dealer?.id}\r\n                              >\r\n                                {dealer?.name}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option role_id=\"4\" value=\"\"></Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {(currentRole == 1 ||\r\n                      currentRole == 2 ||\r\n                      currentRole == 3 ||\r\n                      currentRole == 4) && (\r\n                      <Form.Item label=\"Subdealer\" name=\"subdealer_id\">\r\n                        <Select\r\n                          allowClear\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                        >\r\n                          {Array.isArray(subdealerList) &&\r\n                          subdealerList.length > 0 ? (\r\n                            subdealerList.map((subdealer) => (\r\n                              <Option\r\n                                key={subdealer?.id}\r\n                                role_id=\"5\"\r\n                                value={subdealer?.id}\r\n                              >\r\n                                {subdealer?.name}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option></Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Col>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    Assign\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </Flex>\r\n          </Card>\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Assign;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Select, Input, Form, Row, Col, Space } from \"antd\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport api from \"configs/apiConfig\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function Create() {\r\n  const [form] = Form.useForm();\r\n\r\n  const [selectedSupplierId, setselectedSupplierId] = useState();\r\n  const [supplierOptions, setSupplierOptions] = useState([]);\r\n  const [selectedMakeId, setselectedMakeId] = useState();\r\n  const [makeOptions, setMakeOptions] = useState([]);\r\n  const [selectedModelId, setselectedModelId] = useState();\r\n  const [modelOptions, setModelOptions] = useState([]);\r\n\r\n  const handleSupplierIdChange = (roleID) => {\r\n    setselectedSupplierId(roleID);\r\n  };\r\n  const handleMakeIdChange = (roleID) => {\r\n    setselectedMakeId(roleID);\r\n  };\r\n\r\n  const handleModelIdChange = (roleID) => {\r\n    setselectedModelId(roleID);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSupplierOptions(setSupplierOptions);\r\n    fetchMakeOptions(setMakeOptions);\r\n    fetchModelOptions(setModelOptions);\r\n  }, []);\r\n\r\n  const onFinish = async (values) => {\r\n    document.getElementById(\"imei_er_span\").textContent = \"\";\r\n\r\n    const data = {\r\n      supplier_id: values.supplier_id,\r\n      device_make_id: values.device_make_id,\r\n      device_model_id: values.device_model_id,\r\n      device_imei_no: values.device_imei_no,\r\n      uid: values.uid,\r\n      ccid: values.ccid,\r\n    };\r\n\r\n    try {\r\n      await api.post(\"device/store\", data);\r\n      form.resetFields();\r\n      alert(\"Device Inserted Successfully\");\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 403) {\r\n        const errorData = error.response.data;\r\n        if (errorData.message && typeof errorData.message === \"object\") {\r\n          const validationErrors = errorData.message;\r\n          if (validationErrors.hasOwnProperty(\"device_imei_no\")) {\r\n            console.log(validationErrors.name);\r\n            document.getElementById(\"imei_er_span\").textContent =\r\n              validationErrors.device_imei_no;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Define the functions outside the component\r\n  async function fetchSupplierOptions(setSupplierOptions) {\r\n    try {\r\n      const response = await api.get(\"supplier\");\r\n      if (response.data.success) {\r\n        setSupplierOptions(response.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching roles:\", error);\r\n    }\r\n  }\r\n\r\n  async function fetchMakeOptions(setMakeOptions) {\r\n    try {\r\n      const response = await api.get(\"device_make\");\r\n      if (response.data.success) {\r\n        setMakeOptions(response.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching roles:\", error);\r\n    }\r\n  }\r\n\r\n  async function fetchModelOptions(setModelOptions) {\r\n    try {\r\n      const response = await api.get(\"device_model\");\r\n      if (response.data.success) {\r\n        setModelOptions(response.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching roles:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row gutter={6}>\r\n      <Col>\r\n        <Card title=\"New Device\">\r\n          <Flex>\r\n            <div className=\"container\">\r\n              <Form\r\n                form={form}\r\n                size=\"small\"\r\n                name=\"registrationForm\"\r\n                onFinish={onFinish}\r\n                layout=\"vertical\"\r\n              >\r\n                <Row gutter={[8, 8]}>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Supplier\"\r\n                      name=\"supplier_id\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please Select a Supplier\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        showSearch\r\n                        allowClear\r\n                        optionFilterProp=\"children\"\r\n                        placeholder=\"Select Supplier\"\r\n                        onChange={handleSupplierIdChange}\r\n                        value={selectedSupplierId}\r\n                        filterOption={(input, option) =>\r\n                          option.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      >\r\n                        {Array.isArray(supplierOptions) ? (\r\n                          supplierOptions.map((supplier) => (\r\n                            <Option key={supplier.id} value={supplier.id}>\r\n                              {supplier.supplier_name}\r\n                            </Option>\r\n                          ))\r\n                        ) : (\r\n                          <Option value=\"Loading\" disabled>\r\n                            Loading...\r\n                          </Option>\r\n                        )}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Device Make\"\r\n                      name=\"device_make_id\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please Select a Device Make\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        showSearch\r\n                        allowClear\r\n                        placeholder=\"Select Device Make\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={handleMakeIdChange}\r\n                        value={selectedMakeId}\r\n                        filterOption={(input, option) =>\r\n                          option.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      >\r\n                        {Array.isArray(makeOptions) ? (\r\n                          makeOptions.map((make) => (\r\n                            <Option key={make.id} value={make.id}>\r\n                              {make.device_make}\r\n                            </Option>\r\n                          ))\r\n                        ) : (\r\n                          <Option value=\"Loading\" disabled>\r\n                            Loading...\r\n                          </Option>\r\n                        )}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Device Model\"\r\n                      name=\"device_model_id\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please Select a Device Model\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        showSearch\r\n                        allowClear\r\n                        placeholder=\"Select Device Model\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={handleModelIdChange}\r\n                        value={selectedModelId}\r\n                        filterOption={(input, option) =>\r\n                          option.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      >\r\n                        {Array.isArray(modelOptions) ? (\r\n                          modelOptions.map((model) => (\r\n                            <Option key={model.id} value={model.id}>\r\n                              {model.device_model}\r\n                            </Option>\r\n                          ))\r\n                        ) : (\r\n                          <Option value=\"Loading\" disabled>\r\n                            Loading...\r\n                          </Option>\r\n                        )}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Device IMEI No\"\r\n                      name=\"device_imei_no\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter a Device IMEI No\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item size=\"small\" label=\"Device UID\" name=\"uid\">\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item size=\"small\" label=\"Device CCID\" name=\"ccid\">\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row align={\"middle\"}>\r\n                  <Col span={12}>\r\n                    <Form.Item>\r\n                      <Space wrap>\r\n                        <Button type=\"primary\" shape=\"round\" htmlType=\"submit\">\r\n                          Save\r\n                        </Button>\r\n                        <Button type=\"primary\" shape=\"round\">\r\n                          Back\r\n                        </Button>\r\n                      </Space>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <span\r\n                  id=\"imei_er_span\"\r\n                  style={{\r\n                    color: \"red\",\r\n                    fontSize: \"12px\",\r\n                    fontWeight: \"bold\",\r\n                    fontFamily: \"sans-serif\",\r\n                  }}\r\n                ></span>\r\n              </Form>\r\n            </div>\r\n          </Flex>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Select,\r\n  Input,\r\n  Alert,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport api from \"configs/apiConfig\";\r\nimport moment from \"moment\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function Edit({ parentToChild }) {\r\n  const [form] = Form.useForm();\r\n\r\n  const [selectedSupplierId, setselectedSupplierId] = useState();\r\n  const [supplierOptions, setSupplierOptions] = useState([]);\r\n  const [selectedMakeId, setselectedMakeId] = useState();\r\n  const [makeOptions, setMakeOptions] = useState([]);\r\n  const [selectedModelId, setselectedModelId] = useState();\r\n  const [modelOptions, setModelOptions] = useState([]);\r\n  const [isComponentVisible, setIsComponentVisible] = useState(true);\r\n  const toggleComponentVisibility = () => {\r\n    setIsComponentVisible(!isComponentVisible);\r\n  };\r\n\r\n  const handleSupplierIdChange = (roleID) => {\r\n    setselectedSupplierId(roleID);\r\n  };\r\n  const handleMakeIdChange = (roleID) => {\r\n    setselectedMakeId(roleID);\r\n  };\r\n\r\n  const handleModelIdChange = (roleID) => {\r\n    setselectedModelId(roleID);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSupplierOptions(setSupplierOptions);\r\n    fetchMakeOptions(setMakeOptions);\r\n    fetchModelOptions(setModelOptions);\r\n  }, []);\r\n\r\n  const onFinish = async (values) => {\r\n    document.getElementById(\"imei_er_span\").textContent = \"\";\r\n\r\n    const data = {\r\n      id: parentToChild[0],\r\n      supplier_id: values.supplier_id,\r\n      device_make_id: values.device_make_id,\r\n      device_model_id: values.device_model_id,\r\n      device_imei_no: values.device_imei_no,\r\n      uid: values.uid,\r\n      ccid: values.ccid,\r\n    };\r\n\r\n    try {\r\n      await api.post(\"device/update\", data);\r\n      form.resetFields();\r\n      alert(\"Sim Updated Successfully\");\r\n      toggleComponentVisibility();\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 403) {\r\n        const errorData = error.response.data;\r\n        if (errorData.message && typeof errorData.message === \"object\") {\r\n          const validationErrors = errorData.message;\r\n          if (validationErrors.hasOwnProperty(\"device_imei_no\")) {\r\n            console.log(validationErrors.name);\r\n            document.getElementById(\"imei_er_span\").textContent =\r\n              validationErrors.device_imei_no;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Define the functions outside the component\r\n  async function fetchSupplierOptions(setSupplierOptions) {\r\n    try {\r\n      const response = await api.get(\"supplier\");\r\n      if (response.data.success) {\r\n        setSupplierOptions(response.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching roles:\", error);\r\n    }\r\n  }\r\n\r\n  async function fetchMakeOptions(setMakeOptions) {\r\n    try {\r\n      const response = await api.get(\"device_make\");\r\n      if (response.data.success) {\r\n        setMakeOptions(response.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching roles:\", error);\r\n    }\r\n  }\r\n\r\n  async function fetchModelOptions(setModelOptions) {\r\n    try {\r\n      const response = await api.get(\"device_model\");\r\n      if (response.data.success) {\r\n        setModelOptions(response.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching roles:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row gutter={6}>\r\n      {isComponentVisible && (\r\n        <Col>\r\n          <Card title=\"Edit Device\">\r\n            <Flex>\r\n              <div className=\"container\">\r\n                <Form\r\n                  size=\"small\"\r\n                  name=\"registrationForm\"\r\n                  onFinish={onFinish}\r\n                  layout=\"vertical\"\r\n                >\r\n                  <Row gutter={[8, 8]}>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Form.Item\r\n                        initialValue={parentToChild[1]}\r\n                        size=\"small\"\r\n                        label=\"Supplier\"\r\n                        name=\"supplier_id\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please Select a Supplier\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          placeholder=\"Select Supplier\"\r\n                          optionFilterProp=\"children\"\r\n                          onChange={handleSupplierIdChange}\r\n                          value={selectedSupplierId}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {Array.isArray(supplierOptions) ? (\r\n                            supplierOptions.map((supplier) => (\r\n                              <Option key={supplier.id} value={supplier.id}>\r\n                                {supplier.supplier_name}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option value=\"Loading\" disabled>\r\n                              Loading...\r\n                            </Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Form.Item\r\n                        initialValue={parentToChild[3]}\r\n                        size=\"small\"\r\n                        label=\"Device Make\"\r\n                        name=\"device_make_id\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please Select a Device Make\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          placeholder=\"Select Device Make\"\r\n                          optionFilterProp=\"children\"\r\n                          onChange={handleMakeIdChange}\r\n                          value={selectedMakeId}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {Array.isArray(makeOptions) ? (\r\n                            makeOptions.map((make) => (\r\n                              <Option key={make.id} value={make.id}>\r\n                                {make.device_make}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option value=\"Loading\" disabled>\r\n                              Loading...\r\n                            </Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Form.Item\r\n                        initialValue={parentToChild[5]}\r\n                        size=\"small\"\r\n                        label=\"Device Model\"\r\n                        name=\"device_model_id\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please Select a Device Model\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          placeholder=\"Select Device Model\"\r\n                          optionFilterProp=\"children\"\r\n                          onChange={handleModelIdChange}\r\n                          value={selectedModelId}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {Array.isArray(modelOptions) ? (\r\n                            modelOptions.map((model) => (\r\n                              <Option key={model.id} value={model.id}>\r\n                                {model.device_model}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option value=\"Loading\" disabled>\r\n                              Loading...\r\n                            </Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Form.Item\r\n                        initialValue={parentToChild[7]}\r\n                        size=\"small\"\r\n                        label=\"Device IMEI No\"\r\n                        name=\"device_imei_no\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please enter a Device IMEI No\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Form.Item\r\n                        initialValue={parentToChild[8]}\r\n                        size=\"small\"\r\n                        label=\"Device UID\"\r\n                        name=\"uid\"\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Form.Item\r\n                        initialValue={parentToChild[9]}\r\n                        size=\"small\"\r\n                        label=\"Device CCID\"\r\n                        name=\"ccid\"\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row align={\"middle\"}>\r\n                    <Col span={12}>\r\n                      <Form.Item>\r\n                        <Space wrap>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            shape=\"round\"\r\n                            htmlType=\"submit\"\r\n                          >\r\n                            Update\r\n                          </Button>\r\n                          <Button type=\"primary\" shape=\"round\">\r\n                            Back\r\n                          </Button>\r\n                        </Space>\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <span\r\n                    id=\"imei_er_span\"\r\n                    style={{\r\n                      color: \"red\",\r\n                      fontSize: \"12px\",\r\n                      fontWeight: \"bold\",\r\n                      fontFamily: \"sans-serif\",\r\n                    }}\r\n                  ></span>\r\n                </Form>\r\n              </div>\r\n            </Flex>\r\n          </Card>\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button, Card, Row, Col, Input } from \"antd\";\r\nimport { PlusOutlined, SearchOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport api from \"configs/apiConfig\";\r\nimport Create from \"./create\";\r\nimport Edit from \"./edit\";\r\nimport Assign from \"../demo/index\";\r\n\r\nexport const Device = () => {\r\n  const [deviceList, setDeviceList] = useState([]);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [isCreateVisible, setIsCreateVisible] = useState(false);\r\n  const [isEditVisible, setIsEditVisible] = useState(false);\r\n  const [isAssignVisible, setIsAssignVisible] = useState(false);\r\n\r\n  const [editdata, setEditData] = useState(\"\");\r\n  const [assigndata, setAssignData] = useState(\"\");\r\n\r\n  const handleCreateCard = () => {\r\n    setIsCreateVisible(true);\r\n    setIsEditVisible(false);\r\n    setIsAssignVisible(false);\r\n  };\r\n  const handleEditCard = () => {\r\n    setIsCreateVisible(false);\r\n    setIsEditVisible(true);\r\n  };\r\n  const handleAssignCard = () => {\r\n    setIsCreateVisible(false);\r\n    setIsEditVisible(false);\r\n    setIsAssignVisible(true);\r\n  };\r\n\r\n  async function loadDevices(setDeviceList) {\r\n    try {\r\n      const response = await api.post(\"device_list\");\r\n\r\n      if (response.data && Array.isArray(response.data.data)) {\r\n        const processedData = response.data.data.map((item) => ({\r\n          id: item.id,\r\n          supplier_id: item.supplier_id,\r\n          supplier_name: item.supplier_name,\r\n          device_imei_no: item.device_imei_no,\r\n          ccid: item.ccid,\r\n          uid: item.uid,\r\n          device_make_id: item.device_make_id,\r\n          device_model_id: item.device_model_id,\r\n          device_make: item.device_make,\r\n          device_model: item.device_model,\r\n        }));\r\n        setDeviceList(processedData);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  }\r\n\r\n  function handleEditClick(record) {\r\n    setEditData([\r\n      record.id,\r\n      record.supplier_id,\r\n      record.supplier_name,\r\n      record.device_make_id,\r\n      record.device_make,\r\n      record.device_model_id,\r\n      record.device_model,\r\n      record.device_imei_no,\r\n      record.ccid,\r\n      record.uid,\r\n    ]);\r\n\r\n    // Set isEditVisible to true\r\n    setIsEditVisible(true);\r\n    setIsCreateVisible(false);\r\n    setIsAssignVisible(false);\r\n  }\r\n\r\n  function handleAssignClick(record) {\r\n    handleAssignCard();\r\n\r\n    const id = record.id;\r\n    const type = \"Device\";\r\n    const device_imei_no = record.device_imei_no;\r\n\r\n    const data = [id, type, device_imei_no];\r\n\r\n    setAssignData(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadDevices(setDeviceList);\r\n  }, []);\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"Supplier Name\",\r\n      dataIndex: \"supplier_name\",\r\n    },\r\n    {\r\n      title: \"Device No\",\r\n      dataIndex: \"device_imei_no\",\r\n    },\r\n    {\r\n      title: \"Device Make\",\r\n      dataIndex: \"device_make\",\r\n    },\r\n    {\r\n      title: \"Device Model\",\r\n      dataIndex: \"device_model\",\r\n    },\r\n    {\r\n      title: \"Edit\",\r\n      dataIndex: \"edit\",\r\n      render: (_, record) => (\r\n        <span\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => handleEditClick(record)}\r\n        >\r\n          <EditOutlined />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Assign\",\r\n      dataIndex: \"edit\",\r\n      render: (_, record) => (\r\n        <span\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => handleAssignClick(record)} // Replace handleEditClick with your custom action function\r\n        >\r\n          <EditOutlined /> {/* Replace EditOutlined with your custom icon */}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // const onSearch = (e) => {\r\n  //   const value = e.currentTarget.value;\r\n  //   const searchArray = e.currentTarget.value ? deviceList : OrderListData;\r\n  //   const data = utils.wildCardSearch(searchArray, value);\r\n  //   setDeviceList(data);\r\n  //   setSelectedRowKeys([]);\r\n  // };\r\n\r\n  const rowSelection = {\r\n    onChange: (key, rows) => {\r\n      setSelectedRowKeys(key);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={6}>\r\n        <Col sm={24} md={14} lg={14}>\r\n          <Card title=\"Device\">\r\n            <Flex\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              mobileFlex={false}\r\n            >\r\n              <Flex className=\"mb-1\" mobileFlex={false}>\r\n                <div className=\"mr-md-3 mb-3\">\r\n                  <Input\r\n                    placeholder=\"Search\"\r\n                    prefix={<SearchOutlined />}\r\n                    // onChange={(e) => onSearch(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\"></div>\r\n              </Flex>\r\n              <div className=\"mb-3\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  icon={<PlusOutlined />}\r\n                  ghost\r\n                  onClick={handleCreateCard}\r\n                >\r\n                  Add Device\r\n                </Button>\r\n              </div>\r\n            </Flex>\r\n            <div className=\"table-responsive\">\r\n              <Table\r\n                bordered\r\n                columns={tableColumns}\r\n                dataSource={deviceList}\r\n                rowKey=\"id\"\r\n                rowSelection={{\r\n                  selectedRowKeys: selectedRowKeys,\r\n                  type: \"checkbox\",\r\n                  preserveSelectedRowKeys: false,\r\n                  ...rowSelection,\r\n                }}\r\n              />\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={24} md={10} lg={10}>\r\n          {isCreateVisible && <Create />}\r\n          {isAssignVisible && <Assign parentToChild={assigndata} />}\r\n          {isEditVisible && <Edit key={editdata[0]} parentToChild={editdata} />}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default Device;\r\n"],"names":["Flex","styled","div","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","Option","Select","parentToChild","Form","useForm","form","useState","isComponentVisible","setIsComponentVisible","adminList","SetAdminList","distributorList","SetDistributorList","dealerList","SetDealerList","subdealerList","SetSubdealerList","toggleComponentVisibility","localStorage","getItem","currentUser","SetCurrentUser","currentRole","SetCurrentRole","getUserList","user_data","user_id","api","post","then","res","catch","err","vehicle_data","console","log","data","user_list","subdealer_list","AdminChange","value","setFieldValue","user_get_data","distributor_list","DistributorChange","dealer_list","DealerChange","useEffect","onFinish","values","alert","gutter","title","className","layout","size","sm","md","lg","Item","label","name","onChange","allowClear","showSearch","optionFilterProp","Array","isArray","map","admin","role_id","id","distributor","dealer","length","subdealer","type","htmlType","Create","selectedSupplierId","setselectedSupplierId","supplierOptions","setSupplierOptions","selectedMakeId","setselectedMakeId","makeOptions","setMakeOptions","selectedModelId","setselectedModelId","modelOptions","setModelOptions","fetchSupplierOptions","fetchMakeOptions","fetchModelOptions","document","getElementById","textContent","supplier_id","device_make_id","device_model_id","device_imei_no","uid","ccid","resetFields","response","status","errorData","message","validationErrors","hasOwnProperty","get","success","error","rules","required","placeholder","roleID","filterOption","input","option","children","toLowerCase","indexOf","supplier","supplier_name","disabled","make","device_make","model","device_model","align","span","wrap","shape","style","color","fontSize","fontWeight","fontFamily","Edit","initialValue","Device","deviceList","setDeviceList","selectedRowKeys","setSelectedRowKeys","isCreateVisible","setIsCreateVisible","isEditVisible","setIsEditVisible","isAssignVisible","setIsAssignVisible","editdata","setEditData","assigndata","setAssignData","processedData","item","handleAssignClick","record","loadDevices","tableColumns","dataIndex","render","_","cursor","onClick","handleEditClick","EditOutlined","rowSelection","key","rows","mobileFlex","prefix","SearchOutlined","icon","PlusOutlined","ghost","bordered","columns","dataSource","rowKey","preserveSelectedRowKeys"],"sourceRoot":""}