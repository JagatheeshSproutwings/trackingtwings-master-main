{"version":3,"file":"static/js/713.bc775215.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","utils/index.js","views/app-views/device_management/config.js","views/app-views/device_management/configs.js","views/app-views/device_management/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React, { useState } from \"react\";\r\nimport { Row, Col, Button, Form, Input, Modal, notification } from \"antd\";\r\nimport api from \"configs/apiConfig\";\r\nimport Flex from \"components/shared-components/Flex\";\r\n\r\nconst Config = ({ parentToChild, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  const [isModalOpen, setIsModalOpen] = useState(true);\r\n\r\n  const handleOk = () => {\r\n    props.parentFunction();\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    props.parentFunction();\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const openNotification = (type, message, description) => {\r\n    notification[type]({\r\n      message,\r\n      description,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    try {\r\n      await api.post(\"config/store\", values);\r\n      form.resetFields();\r\n      props.parentFunction();\r\n      openNotification(\r\n        \"success\",\r\n        \"Vehicle\",\r\n        \"Vehicle Settings Saved Successfully!\"\r\n      );\r\n      handleOk();\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 403) {\r\n        const errorData = error.response.data;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row gutter={6}>\r\n      <Col>\r\n        <Flex>\r\n          <div className=\"container\">\r\n            <Modal\r\n              title=\"Vehicle Settings\"\r\n              visible={isModalOpen} // Change \"open\" to \"visible\"\r\n              onOk={handleOk}\r\n              onCancel={handleCancel}\r\n              footer={null} // Set the footer to null to hide it\r\n            >\r\n              <Form\r\n                form={form}\r\n                size=\"small\"\r\n                name=\"settings_form\"\r\n                onFinish={onSubmit}\r\n              >\r\n                <Row gutter={[8, 8]}>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      name=\"vehicle_id\"\r\n                      hidden\r\n                      initialValue={parentToChild.vehicle_id}\r\n                    >\r\n                      <Input type=\"text\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      name=\"device_imei\"\r\n                      hidden\r\n                      initialValue={parentToChild.device_imei}\r\n                    >\r\n                      <Input type=\"text\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Parking Alert Time\"\r\n                      name=\"parking_alert_time\"\r\n                      initialValue={parentToChild.parking_alert_time}\r\n                    >\r\n                      <Input placeholder=\"Parking Alert Time\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Idle Alert Time\"\r\n                      name=\"idle_alert_time\"\r\n                      initialValue={parentToChild.idle_alert_time}\r\n                    >\r\n                      <Input placeholder=\"Idle Alert Time\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Speed Limit\"\r\n                      name=\"speed_limit\"\r\n                      initialValue={parentToChild.speed_limit}\r\n                    >\r\n                      <Input placeholder=\"Speed Limit\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Expected Mileage\"\r\n                      name=\"expected_mileage\"\r\n                      initialValue={parentToChild.expected_mileage}\r\n                    >\r\n                      <Input placeholder=\"Expected Mileage\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Idle RPM\"\r\n                      name=\"idle_rpm\"\r\n                      initialValue={parentToChild.idle_rpm}\r\n                    >\r\n                      <Input placeholder=\"Idle RPM\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Maximum RPM\"\r\n                      name=\"max_rpm\"\r\n                      initialValue={parentToChild.max_rpm}\r\n                    >\r\n                      <Input placeholder=\"Maximum RPM\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      name=\"temp_low\"\r\n                      label=\"Minimum Temp\"\r\n                      initialValue={parentToChild.temp_low}\r\n                    >\r\n                      <Input placeholder=\"Minimum Temperature\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      name=\"temp_high\"\r\n                      label=\"Maximum Temp\"\r\n                      initialValue={parentToChild.temp_high}\r\n                    >\r\n                      <Input placeholder=\"Maximum Temperature\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Fuel Fill Limit\"\r\n                      name=\"fuel_fill_limit\"\r\n                      initialValue={parentToChild.fuel_fill_limit}\r\n                    >\r\n                      <Input placeholder=\"Fuel Fill Limit\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Fuel Dip Limit\"\r\n                      name=\"fuel_dip_limit\"\r\n                      initialValue={parentToChild.fuel_dip_limit}\r\n                    >\r\n                      <Input placeholder=\"Fuel Dip Limit\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Form.Item>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    Save\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </Modal>\r\n          </div>\r\n        </Flex>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Config;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button, Form, Input, Modal, notification } from \"antd\";\r\nimport api from \"configs/apiConfig\";\r\nimport Flex from \"components/shared-components/Flex\";\r\n\r\nconst Config = ({ parentToChild, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  const [isModalOpen, setIsModalOpen] = useState(true);\r\n\r\n  const handleOk = () => {\r\n    props.parentFunction();\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    props.parentFunction();\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const openNotification = (type, message, description) => {\r\n    notification[type]({\r\n      message,\r\n      description,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    try {\r\n      values[\"vehicle_id\"] = parentToChild;\r\n      await api.post(\"config/store_all\", values);\r\n      form.resetFields();\r\n      props.parentFunction();\r\n      openNotification(\r\n        \"success\",\r\n        \"Vehicle\",\r\n        \"Vehicle Settings Saved Successfully!\"\r\n      );\r\n      handleOk();\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 403) {\r\n        const errorData = error.response.data;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row gutter={6}>\r\n      <Col>\r\n        <Flex>\r\n          <div className=\"container\">\r\n            <Modal\r\n              title=\"Vehicle Settings\"\r\n              visible={isModalOpen} // Change \"open\" to \"visible\"\r\n              onOk={handleOk}\r\n              onCancel={handleCancel}\r\n              footer={null} // Set the footer to null to hide it\r\n            >\r\n              <Form\r\n                form={form}\r\n                size=\"small\"\r\n                name=\"settings_form\"\r\n                onFinish={onSubmit}\r\n              >\r\n                <Row gutter={[12, 12]}>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      name=\"vehicle_id\"\r\n                      hidden\r\n                      initialValue={parentToChild.vehicle_id}\r\n                    >\r\n                      <Input type=\"text\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      name=\"device_imei\"\r\n                      hidden\r\n                      initialValue={parentToChild.device_imei}\r\n                    >\r\n                      <Input type=\"text\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Parking Alert Time\"\r\n                      name=\"parking_alert_time\"\r\n                      initialValue={parentToChild.parking_alert_time}\r\n                    >\r\n                      <Input placeholder=\"Parking Alert Time\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Idle Alert Time\"\r\n                      name=\"idle_alert_time\"\r\n                      initialValue={parentToChild.idle_alert_time}\r\n                    >\r\n                      <Input placeholder=\"Idle Alert Time\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Speed Limit\"\r\n                      name=\"speed_limit\"\r\n                      initialValue={parentToChild.speed_limit}\r\n                    >\r\n                      <Input placeholder=\"Speed Limit\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Expected Mileage\"\r\n                      name=\"expected_mileage\"\r\n                      initialValue={parentToChild.expected_mileage}\r\n                    >\r\n                      <Input placeholder=\"Expected Mileage\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Idle RPM\"\r\n                      name=\"idle_rpm\"\r\n                      initialValue={parentToChild.idle_rpm}\r\n                    >\r\n                      <Input placeholder=\"Idle RPM\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Maximum RPM\"\r\n                      name=\"max_rpm\"\r\n                      initialValue={parentToChild.max_rpm}\r\n                    >\r\n                      <Input placeholder=\"Maximum RPM\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      name=\"temp_low\"\r\n                      label=\"Minimum Temp\"\r\n                      initialValue={parentToChild.temp_low}\r\n                    >\r\n                      <Input placeholder=\"Minimum Temperature\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      name=\"temp_high\"\r\n                      label=\"Maximum Temp\"\r\n                      initialValue={parentToChild.temp_high}\r\n                    >\r\n                      <Input placeholder=\"Maximum Temperature\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Fuel Fill Limit\"\r\n                      name=\"fuel_fill_limit\"\r\n                      initialValue={parentToChild.fuel_fill_limit}\r\n                    >\r\n                      <Input placeholder=\"Fuel Fill Limit\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      label=\"Fuel Dip Limit\"\r\n                      name=\"fuel_dip_limit\"\r\n                      initialValue={parentToChild.fuel_dip_limit}\r\n                    >\r\n                      <Input placeholder=\"Fuel Dip Limit\"></Input>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Form.Item>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    Save\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </Modal>\r\n          </div>\r\n        </Flex>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Config;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Form,\r\n  Drawer,\r\n  Select,\r\n  Input,\r\n  DatePicker,\r\n  notification,\r\n  Spin,\r\n} from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport api from \"configs/apiConfig\";\r\nimport { Space, Menu, Dropdown, message } from \"antd\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport {\r\n  DownOutlined,\r\n  SettingOutlined,\r\n  SearchOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Config from \"./config\";\r\nimport Configs from \"./configs\";\r\n\r\nimport utils from \"utils\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Vehicle = () => {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [isComponentVisible, setIsComponentVisible] = useState(false);\r\n  const [isConfigVisible, setIsConfigVisible] = useState(false);\r\n\r\n  const [mulitiVehicles, setMulitiVehicles] = useState([]);\r\n\r\n  const [editdata, setEditData] = useState(\"\");\r\n\r\n  const dateFormat = \"YYYY-MM-DD\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [adminList, SetAdminList] = useState([]);\r\n  const [distributorList, SetDistributorList] = useState([]);\r\n  const [dealerList, SetDealerList] = useState([]);\r\n  const [subdealerList, SetSubdealerList] = useState([]);\r\n  const [customerList, SetCustomerList] = useState([]);\r\n\r\n  const [planList, SetPlanList] = useState([]);\r\n  const [licenseList, SetLicenseList] = useState([]);\r\n  const [vehicleTypeList, SetVehicleTypeList] = useState([]);\r\n\r\n  const [simList, SetSimList] = useState([]);\r\n  const [deviceList, SetDeviceList] = useState([]);\r\n  const [vehicleList, setVehicleList] = useState([]);\r\n  const [mainvehicleList, setMainVehicleList] = useState([]);\r\n\r\n  const [simData, SetSimData] = useState(\"\");\r\n\r\n  const [deviceData, SetDeviceData] = useState(\"\");\r\n  const [makeIdData, SetMakeIdData] = useState(\"\");\r\n  const [modelIdData, SetModelIdData] = useState(\"\");\r\n  const [makeData, SetMakeData] = useState(\"\");\r\n  const [modelData, SetModelData] = useState(\"\");\r\n\r\n  const [currentUser, SetCurrentUser] = useState(\r\n    localStorage.getItem(\"id\") || \"\"\r\n  );\r\n  const [currentRole, SetCurrentRole] = useState(\r\n    localStorage.getItem(\"role\") || \"\"\r\n  );\r\n\r\n  const showDrawer = () => {\r\n    setOpen(true);\r\n  };\r\n  const onClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const openNotification = (type, message, description) => {\r\n    notification[type]({\r\n      message,\r\n      description,\r\n    });\r\n  };\r\n\r\n  const [userValue, setUserValue] = useState(localStorage.getItem(\"id\") || \"\");\r\n\r\n  const getUserList = async () => {\r\n    const user_data = { user_id: currentUser };\r\n    const vehicle_data = await api\r\n      .post(\"role_based_user_list\", user_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return [];\r\n      });\r\n\r\n    // Super Admin\r\n    if (currentRole == 1) {\r\n      SetAdminList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 2) {\r\n      SetDistributorList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 3) {\r\n      SetDealerList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 4) {\r\n      SetCustomerList(vehicle_data?.data?.data?.user_list);\r\n      SetSubdealerList(vehicle_data?.data?.data?.subdealer_list);\r\n    }\r\n    if (currentRole == 5) {\r\n      SetCustomerList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n  };\r\n  const user = () => {\r\n    return localStorage.getItem(\"id\");\r\n  };\r\n  const role = () => {\r\n    return localStorage.getItem(\"role\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    SetCurrentUser(user());\r\n    SetCurrentRole(role());\r\n    getUserList();\r\n    loadVehicles();\r\n    loadPlans();\r\n    loadsims();\r\n    loaddevices();\r\n  }, []);\r\n\r\n  // on change Admin\r\n  const AdminChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetDistributorList([]);\r\n    SetDealerList([]);\r\n    SetSubdealerList([]);\r\n    SetCustomerList([]);\r\n    if (value != null) {\r\n      const user_get_data = { user_id: value };\r\n      const distributor_list = await api\r\n        .post(\"role_based_user_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetDistributorList(distributor_list?.data?.data?.user_list);\r\n    }\r\n  };\r\n  // On change Distributor\r\n  const DistributorChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetDealerList(\"\");\r\n    SetSubdealerList(\"\");\r\n    SetCustomerList(\"\");\r\n    if (value != null) {\r\n      const user_get_data = { user_id: value };\r\n      const dealer_list = await api\r\n        .post(\"role_based_user_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetDealerList(dealer_list?.data?.data?.user_list);\r\n    }\r\n  };\r\n  // on change Dealer\r\n  const DealerChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetSubdealerList([]);\r\n    SetCustomerList([]);\r\n    SetPlanList([]);\r\n    SetSimList([]);\r\n    SetDeviceList([]);\r\n\r\n    if (value != null) {\r\n      const user_get_data = { user_id: value };\r\n      const subdealer_list = await api\r\n        .post(\"role_based_user_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetCustomerList(subdealer_list?.data?.data?.user_list);\r\n      SetSubdealerList(subdealer_list?.data?.data?.subdealer_list);\r\n\r\n      setUserValue(value);\r\n      const plan_list = await api\r\n        .post(\"user_plan_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetPlanList(plan_list?.data.data);\r\n\r\n      const sim_list = await api\r\n        .post(\"sim_stock_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetSimList(sim_list?.data.data);\r\n\r\n      const device_list = await api\r\n        .post(\"device_stock_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetDeviceList(device_list?.data.data);\r\n    }\r\n  };\r\n  // on change SubDealer\r\n  const SubDealerChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n\r\n    SetCustomerList(\"\");\r\n    SetPlanList(\"\");\r\n    SetLicenseList(\"\");\r\n    SetSimList(\"\");\r\n    SetDeviceList(\"\");\r\n    SetDeviceData(\"\");\r\n    SetMakeData(\"\");\r\n    SetModelData(\"\");\r\n    SetSimData(\"\");\r\n\r\n    if (value != null) {\r\n      const user_get_data = { user_id: value };\r\n      const customer_list = await api\r\n        .post(\"role_based_user_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetCustomerList(customer_list?.data?.data?.user_list);\r\n      setUserValue(value);\r\n      const plan_list = await api\r\n        .post(\"user_plan_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetPlanList(plan_list?.data.data);\r\n      const sim_list = await api\r\n        .post(\"sim_stock_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetSimList(sim_list?.data.data);\r\n      const device_list = await api\r\n        .post(\"device_stock_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetDeviceList(device_list?.data.data);\r\n    } else {\r\n      if (currentRole == 4) {\r\n        const user_get_data = { user_id: currentUser };\r\n        const subdealer_list = await api\r\n          .post(\"role_based_user_list\", user_get_data)\r\n          .then((res) => {\r\n            return res;\r\n          })\r\n          .catch((err) => {\r\n            return err;\r\n          });\r\n        SetCustomerList(subdealer_list?.data?.data?.user_list);\r\n        SetSubdealerList(subdealer_list?.data?.data?.subdealer_list);\r\n        setUserValue(currentUser);\r\n        const plan_list = await api\r\n          .post(\"user_plan_list\", user_get_data)\r\n          .then((res) => {\r\n            return res;\r\n          })\r\n          .catch((err) => {\r\n            return err;\r\n          });\r\n        SetPlanList(plan_list?.data.data);\r\n\r\n        const sim_list = await api\r\n          .post(\"sim_stock_list\", user_get_data)\r\n          .then((res) => {\r\n            return res;\r\n          })\r\n          .catch((err) => {\r\n            return err;\r\n          });\r\n        SetSimList(sim_list?.data.data);\r\n\r\n        const device_list = await api\r\n          .post(\"device_stock_list\", user_get_data)\r\n          .then((res) => {\r\n            return res;\r\n          })\r\n          .catch((err) => {\r\n            return err;\r\n          });\r\n        SetDeviceList(device_list?.data.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  const CustomerChange = async () => {\r\n    SetVehicleTypeList([]);\r\n    const vehicle_type_list = await api\r\n      .get(\"vehicle_type\")\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetVehicleTypeList(vehicle_type_list?.data?.data);\r\n  };\r\n\r\n  const PlanChange = async (value) => {\r\n    SetLicenseList([]);\r\n\r\n    if (value != null) {\r\n      const data = { user_id: userValue, plan_id: value };\r\n      const license_list = await api\r\n        .post(\"user_license_list\", data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return err;\r\n        });\r\n      SetLicenseList(license_list?.data.data);\r\n    }\r\n  };\r\n\r\n  const DeviceChange = async (value) => {\r\n    SetDeviceData(\"\");\r\n    SetMakeIdData(\"\");\r\n    SetModelIdData(\"\");\r\n    SetMakeData(\"\");\r\n    SetModelData(\"\");\r\n\r\n    try {\r\n      const device_data = await api.get(`device/${value}`);\r\n      const device_make_id = device_data?.data?.data?.device_make_id;\r\n      const device_model_id = device_data?.data?.data?.device_model_id;\r\n      const device_make = device_data?.data?.data?.device_make;\r\n      const device_model = device_data?.data?.data?.device_model;\r\n      const deviceUid = device_data?.data?.data?.uid;\r\n\r\n      SetDeviceData(deviceUid);\r\n      SetMakeIdData(device_make_id);\r\n      SetModelIdData(device_model_id);\r\n      SetMakeData(device_make);\r\n      SetModelData(device_model);\r\n    } catch (error) {\r\n      console.error(\"Error fetching device data:\", error);\r\n    }\r\n  };\r\n\r\n  const SimChange = async (value) => {\r\n    SetSimData(\"\");\r\n    try {\r\n      const sim_data = await api.get(`sim/${value}`);\r\n      const sim_imei_no = sim_data?.data?.data?.sim_imei_no;\r\n      if (sim_imei_no) {\r\n        SetSimData(sim_imei_no);\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching device data:\", error);\r\n    }\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      setLoading(true);\r\n      values[\"user_id\"] = currentUser;\r\n      const installation_date = new Date(values[\"installation_date\"]);\r\n      values[\"installation_date\"] = installation_date\r\n        .toISOString()\r\n        .split(\"T\")[0];\r\n      await api.post(\"vehicle\", values);\r\n      form.resetFields();\r\n      setLoading(false);\r\n\r\n      openNotification(\"success\", \"Vehicle\", \"Vehicle Added Successfully!\");\r\n      loadVehicles();\r\n      SetSimData(\"\");\r\n      SetDeviceData(\"\");\r\n      SetMakeData(\"\");\r\n      SetModelData(\"\");\r\n\r\n      loadsims();\r\n      loaddevices();\r\n      onClose();\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if (error.response && error.response.status === 403) {\r\n        const errorData = error.response.data;\r\n      }\r\n    }\r\n  };\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"Type\",\r\n      dataIndex: \"vehicle_type\",\r\n    },\r\n    {\r\n      title: \"Vehicle No\",\r\n      dataIndex: \"vehicle_name\",\r\n    },\r\n    {\r\n      title: \"Sim No\",\r\n      dataIndex: \"sim_mob_no\",\r\n    },\r\n    {\r\n      title: \"Device IMEI\",\r\n      dataIndex: \"device_imei\",\r\n    },\r\n    {\r\n      title: \"License No\",\r\n      dataIndex: \"license_no\",\r\n    },\r\n    {\r\n      title: \"Installation Date\",\r\n      dataIndex: \"installation_date\",\r\n    },\r\n    {\r\n      title: \"Expire Date\",\r\n      dataIndex: \"expire_date\",\r\n    },\r\n    {\r\n      title: \"Client Name\",\r\n      dataIndex: \"client_name\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actions\",\r\n      fixed: \"right\",\r\n\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Dropdown overlay={getMenu(record)} placement=\"bottomLeft\">\r\n            <Button>\r\n              Actions <DownOutlined />\r\n            </Button>\r\n          </Dropdown>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const getMenu = (record) => (\r\n    <Menu>\r\n      {/* <Menu.Item\r\n        key=\"edit\"\r\n        icon={<EditOutlined />}\r\n        onClick={() => handleEdit(record)}\r\n      >\r\n        Edit\r\n      </Menu.Item> */}\r\n      <Menu.Item\r\n        key=\"config\"\r\n        icon={<SettingOutlined />}\r\n        onClick={() => handleSetting(record)}\r\n      >\r\n        Settings\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const handleEdit = (record) => {\r\n    message.success(`Editing ${record.vehicle_name}`);\r\n  };\r\n\r\n  const handleSetting = async (record) => {\r\n    try {\r\n      const data = {\r\n        vehicle_id: record.id,\r\n        device_imei: record.device_imei,\r\n      };\r\n      const response = await api.post(\"config/show\", data);\r\n      if (response.status === 200) {\r\n        const responseData = response.data;\r\n        if (responseData.success) {\r\n          const configurationData = responseData.data; // Access the data property\r\n          setEditData(configurationData); // Set the data in setEditData\r\n          setIsComponentVisible(true);\r\n        } else {\r\n          alert(\r\n            \"API request was successful, but the response indicates an error.\"\r\n          );\r\n        }\r\n      } else {\r\n        alert(\"API request failed with status code: \" + response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  const clickConfig = async () => {\r\n    if (mulitiVehicles.length !== 0) {\r\n      setIsConfigVisible(true);\r\n    } else {\r\n      openNotification(\"success\", \"Vehicle\", \"Please Select One Vehicles\");\r\n    }\r\n  };\r\n\r\n  const loadVehicles = async () => {\r\n    try {\r\n      const user_data = { user_id: currentUser };\r\n      const response = await api.post(\"vehicle_list\", user_data);\r\n\r\n      if (response.data && Array.isArray(response.data.data)) {\r\n        const processedData = response.data.data.map((item) => ({\r\n          id: item.id,\r\n          vehicle_type: item.vehicle_type,\r\n          vehicle_name: item.vehicle_name,\r\n          sim_mob_no: item.sim_mob_no,\r\n          device_imei: item.device_imei,\r\n          license_no: item.license_no,\r\n          installation_date: item.installation_date,\r\n          expire_date: item.expire_date,\r\n          client_name: item.client_name,\r\n        }));\r\n        setVehicleList(processedData);\r\n        setMainVehicleList(processedData);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n  const loadsims = async () => {\r\n    try {\r\n      SetSimList([]);\r\n\r\n      const user_data = { user_id: currentUser };\r\n      const sim_list = await api.post(\"sim_stock_list\", user_data);\r\n\r\n      if (sim_list.data && Array.isArray(sim_list.data.data)) {\r\n        SetSimList(sim_list?.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n  const loaddevices = async () => {\r\n    try {\r\n      SetDeviceList([]);\r\n\r\n      const user_data = { user_id: currentUser };\r\n      const device_list = await api.post(\"device_stock_list\", user_data);\r\n\r\n      if (device_list.data && Array.isArray(device_list.data.data)) {\r\n        SetDeviceList(device_list?.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n  const loadPlans = async () => {\r\n    SetPlanList([]);\r\n\r\n    const data = { user_id: currentUser };\r\n\r\n    const plan_list = await api\r\n      .post(\"user_plan_list\", data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetPlanList(plan_list?.data?.data);\r\n  };\r\n\r\n  const onSearch = (e) => {\r\n    const searchValue = e.currentTarget.value;\r\n    const searchArray = searchValue ? vehicleList : mainvehicleList; // Use a different source if needed\r\n    const filteredUserList = utils.wildCardSearch(searchArray, searchValue);\r\n    setVehicleList(filteredUserList);\r\n  };\r\n\r\n  const parentFunction = () => {\r\n    setIsComponentVisible(false);\r\n    setIsConfigVisible(false);\r\n  };\r\n\r\n  const changeMutliVehicles = async (value) => {\r\n    setMulitiVehicles(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {isComponentVisible && (\r\n          <Config parentToChild={editdata} parentFunction={parentFunction} />\r\n        )}\r\n        {isConfigVisible && (\r\n          <Configs\r\n            parentToChild={mulitiVehicles}\r\n            parentFunction={parentFunction}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <Card title=\"Vehicle List\">\r\n        <Flex\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          mobileFlex={false}\r\n        ></Flex>\r\n\r\n        <Row>\r\n          <Col sm={3} md={6} lg={6}>\r\n            <Input\r\n              style={{\r\n                width: \"70%\",\r\n              }}\r\n              placeholder=\"Search\"\r\n              prefix={<SearchOutlined />}\r\n              onChange={(e) => onSearch(e)}\r\n            />\r\n          </Col>\r\n\r\n          <Col sm={3} md={6} lg={6}>\r\n            <Select\r\n              mode=\"tags\"\r\n              style={{\r\n                width: \"95%\",\r\n              }}\r\n              placeholder=\"Select Vehicle\"\r\n              onChange={changeMutliVehicles}\r\n              allowClear\r\n              showSearch\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {Array.isArray(vehicleList) ? (\r\n                vehicleList.map((vehicle) => (\r\n                  <Option key={vehicle.id} value={vehicle.id}>\r\n                    {vehicle.vehicle_name}\r\n                  </Option>\r\n                ))\r\n              ) : (\r\n                <Option value=\"Loading\" disabled>\r\n                  Loading...\r\n                </Option>\r\n              )}\r\n            </Select>\r\n          </Col>\r\n\r\n          <Col sm={2} md={4} lg={4}>\r\n            <Button type=\"primary\" ghost onClick={clickConfig}>\r\n              Config\r\n            </Button>\r\n          </Col>\r\n\r\n          <Col sm={2} md={4} lg={4}></Col>\r\n          <Col sm={2} md={4} lg={4}>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusOutlined />}\r\n              onClick={showDrawer}\r\n              ghost\r\n            >\r\n              Add Vehicle\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n        <div className=\"table-responsive\">\r\n          <Table\r\n            bordered\r\n            columns={tableColumns}\r\n            dataSource={vehicleList}\r\n            rowKey=\"id\"\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      <Drawer\r\n        placement=\"right\"\r\n        closable={false}\r\n        onClose={onClose}\r\n        width={850}\r\n        open={open}\r\n        title=\"Add Vehicle\"\r\n      >\r\n        <Spin spinning={loading} delay={500}>\r\n          <Form form={form} name=\"device_form\" onFinish={onFinish}>\r\n            <h5>Users Details:</h5>\r\n            <Row gutter={[10, 10]}>\r\n              {currentRole == 1 && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item name=\"admin_id\">\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={AdminChange}\r\n                      placeholder=\"Select Admin\"\r\n                    >\r\n                      {Array.isArray(adminList) ? (\r\n                        adminList.map((admin) => (\r\n                          <Select.Option\r\n                            key={admin?.id}\r\n                            role_id=\"2\"\r\n                            value={admin?.id}\r\n                          >\r\n                            {admin?.name}\r\n                          </Select.Option>\r\n                        ))\r\n                      ) : (\r\n                        <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {(currentRole == 1 || currentRole == 2) && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item name=\"distributor_id\">\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={DistributorChange}\r\n                      placeholder=\"Select Distributor\"\r\n                    >\r\n                      {Array.isArray(distributorList) ? (\r\n                        distributorList.map((distributor) => (\r\n                          <Option\r\n                            key={distributor?.id}\r\n                            role_id=\"3\"\r\n                            value={distributor?.id}\r\n                          >\r\n                            {distributor?.name}\r\n                          </Option>\r\n                        ))\r\n                      ) : (\r\n                        <Option role_id=\"3\" value=\"\"></Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {(currentRole == 1 || currentRole == 2 || currentRole == 3) && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item name=\"dealer_id\">\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={DealerChange}\r\n                      placeholder=\"Select Dealer\"\r\n                    >\r\n                      {Array.isArray(dealerList) ? (\r\n                        dealerList.map((dealer) => (\r\n                          <Option\r\n                            key={dealer?.id}\r\n                            role_id=\"4\"\r\n                            value={dealer?.id}\r\n                          >\r\n                            {dealer?.name}\r\n                          </Option>\r\n                        ))\r\n                      ) : (\r\n                        <Option role_id=\"4\" value=\"\"></Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {(currentRole == 1 ||\r\n                currentRole == 2 ||\r\n                currentRole == 3 ||\r\n                currentRole == 4) && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item name=\"subdealer_id\">\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={SubDealerChange}\r\n                      placeholder=\"Select SubDealer\"\r\n                    >\r\n                      {Array.isArray(subdealerList) &&\r\n                      subdealerList.length > 0 ? (\r\n                        subdealerList.map((subdealer) => (\r\n                          <Option\r\n                            key={subdealer?.id}\r\n                            role_id=\"5\"\r\n                            value={subdealer?.id}\r\n                          >\r\n                            {subdealer?.name}\r\n                          </Option>\r\n                        ))\r\n                      ) : (\r\n                        <Option></Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {(currentRole == 1 ||\r\n                currentRole == 2 ||\r\n                currentRole == 3 ||\r\n                currentRole == 4 ||\r\n                currentRole == 5) && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item\r\n                    name=\"client_id\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please Select Client Name\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={CustomerChange}\r\n                      placeholder=\"Select Client\"\r\n                    >\r\n                      {Array.isArray(customerList) ? (\r\n                        customerList.map((customer) => (\r\n                          <Option\r\n                            key={customer?.id}\r\n                            role_id=\"6\"\r\n                            value={customer?.id}\r\n                          >\r\n                            {customer?.name}\r\n                          </Option>\r\n                        ))\r\n                      ) : (\r\n                        <Option role_id=\"6\" value=\"\"></Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n            <h5>Licence Details:</h5>\r\n            <Row gutter={6}>\r\n              <Col sm={5} md={10} lg={10} xxl={10}>\r\n                <Form.Item\r\n                  name=\"plan_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select Plan\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    placeholder=\"Select Plan\"\r\n                    onChange={PlanChange}\r\n                  >\r\n                    {Array.isArray(planList) ? (\r\n                      planList.map((plan) => (\r\n                        <Select.Option key={plan?.id} value={plan?.id}>\r\n                          {plan?.package_name}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option value=\"\"></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={5} md={10} lg={10} xxl={10}>\r\n                <Form.Item\r\n                  name=\"license_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select License\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    placeholder=\"Select License\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {Array.isArray(licenseList) ? (\r\n                      licenseList.map((license) => (\r\n                        <Select.Option key={license?.id} value={license?.id}>\r\n                          {license?.license_no}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <h5>Device Details :</h5>\r\n            <Row gutter={6}>\r\n              <Col sm={3} md={6} lg={6} xxl={6}>\r\n                <Form.Item\r\n                  name=\"device_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select Device IMEI\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    onChange={DeviceChange}\r\n                    placeholder=\"Select Device IMEI\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {Array.isArray(deviceList) ? (\r\n                      deviceList.map((device) => (\r\n                        <Select.Option key={device?.id} value={device?.id}>\r\n                          {device?.device_imei_no}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={3} md={6} lg={6} xxl={6}>\r\n                <Form.Item>\r\n                  <Input type=\"text\" value={deviceData}></Input>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={4} md={8} lg={8} xxl={8}>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"device_make_id\"\r\n                  hidden\r\n                  value={makeIdData}\r\n                ></input>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"device_model_id\"\r\n                  hidden\r\n                  value={modelIdData}\r\n                ></input>\r\n                <Form.Item>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    value={makeData + \"-\" + modelData}\r\n                  ></Input>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <h5>SIM Details :</h5>\r\n            <Row gutter={6}>\r\n              <Col sm={6} md={10} lg={10} xxl={10}>\r\n                <Form.Item\r\n                  name=\"sim_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select Sim Mobile No\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    placeholder=\"Select Sim\"\r\n                    optionFilterProp=\"children\"\r\n                    onChange={SimChange}\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {Array.isArray(simList) ? (\r\n                      simList.map((sim) => (\r\n                        <Select.Option key={sim?.id} value={sim?.id}>\r\n                          {sim?.sim_mob_no1}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={6} md={10} lg={10} xxl={10}>\r\n                <Form.Item>\r\n                  <Input type=\"text\" value={simData}></Input>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <h5>Vehicle Details :</h5>\r\n            <Row gutter={6}>\r\n              <Col sm={4} md={8} lg={8} xxl={8}>\r\n                <Form.Item\r\n                  name=\"vehicle_type_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select Vehicle Type\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    placeholder=\"Select Vehicle Type\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {Array.isArray(vehicleTypeList) ? (\r\n                      vehicleTypeList.map((vehicletype) => (\r\n                        <Select.Option\r\n                          key={vehicletype?.id}\r\n                          value={vehicletype?.id}\r\n                        >\r\n                          {vehicletype?.vehicle_type}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={4} md={8} lg={8} xxl={8}>\r\n                <Form.Item\r\n                  name=\"vehicle_name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Enter Vehicle Name\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"vehicle_name\"\r\n                    placeholder=\"Vehicle Name\"\r\n                  ></Input>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={4} md={8} lg={8} xxl={8}>\r\n                <Form.Item name=\"installation_date\">\r\n                  <DatePicker\r\n                    required\r\n                    allowClear={false}\r\n                    format={dateFormat}\r\n                    placeholder=\"Installation Date\"\r\n                  ></DatePicker>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={3} md={6} lg={6} xxl={6}>\r\n                <Form.Item name=\"service_person_name\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"service_person_name\"\r\n                    placeholder=\"Service Person Name\"\r\n                  ></Input>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={3} md={6} lg={6} xxl={6}>\r\n                <Form.Item name=\"install_person_name\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"install_person_name\"\r\n                    placeholder=\"Install Person Name\"\r\n                  ></Input>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={4} md={8} lg={8} xxl={8}>\r\n                <Form.Item name=\"description\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    placeholder=\"Description\"\r\n                  ></Input>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Save\r\n                </Button>\r\n              </Form.Item>\r\n            </Row>\r\n          </Form>\r\n        </Spin>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Vehicle;\r\n"],"names":["Flex","styled","div","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","Utils","name","initials","match","shift","pop","toUpperCase","navTree","path","route","p","hasOwnProperty","this","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","key","toLowerCase","list","value","data","filter","item","input","searchText","screens","breakpoints","push","parentToChild","props","Form","useForm","form","useState","isModalOpen","setIsModalOpen","handleOk","parentFunction","openNotification","type","message","description","notification","gutter","className","title","visible","onOk","onCancel","footer","size","onFinish","values","api","post","resetFields","response","status","sm","md","lg","Item","hidden","initialValue","vehicle_id","device_imei","label","parking_alert_time","placeholder","idle_alert_time","speed_limit","expected_mileage","idle_rpm","max_rpm","temp_low","temp_high","fuel_fill_limit","fuel_dip_limit","htmlType","Option","Select","loading","setLoading","isComponentVisible","setIsComponentVisible","isConfigVisible","setIsConfigVisible","mulitiVehicles","setMulitiVehicles","editdata","setEditData","open","setOpen","adminList","SetAdminList","distributorList","SetDistributorList","dealerList","SetDealerList","subdealerList","SetSubdealerList","customerList","SetCustomerList","planList","SetPlanList","licenseList","SetLicenseList","vehicleTypeList","SetVehicleTypeList","simList","SetSimList","deviceList","SetDeviceList","vehicleList","setVehicleList","mainvehicleList","setMainVehicleList","simData","SetSimData","deviceData","SetDeviceData","makeIdData","SetMakeIdData","modelIdData","SetModelIdData","makeData","SetMakeData","modelData","SetModelData","localStorage","getItem","currentUser","SetCurrentUser","currentRole","SetCurrentRole","onClose","userValue","setUserValue","useEffect","user_data","user_id","then","res","catch","err","vehicle_data","user_list","subdealer_list","getUserList","loadVehicles","loadPlans","loadsims","loaddevices","tableColumns","dataIndex","fixed","render","text","record","overlay","getMenu","placement","DownOutlined","icon","SettingOutlined","onClick","handleSetting","id","responseData","success","configurationData","alert","console","error","Array","isArray","processedData","map","vehicle_type","vehicle_name","sim_mob_no","license_no","installation_date","expire_date","client_name","sim_list","device_list","plan_list","mobileFlex","style","width","prefix","SearchOutlined","onChange","e","searchValue","currentTarget","searchArray","filteredUserList","utils","wildCardSearch","onSearch","mode","allowClear","showSearch","filterOption","option","children","vehicle","disabled","ghost","PlusOutlined","bordered","columns","dataSource","rowKey","closable","spinning","delay","Date","toISOString","xxl","optionFilterProp","setFieldValue","user_get_data","distributor_list","admin","role_id","dealer_list","distributor","dealer","customer_list","subdealer","rules","required","get","vehicle_type_list","customer","plan_id","license_list","plan","package_name","license","device_data","device_make_id","device_model_id","device_make","device_model","deviceUid","uid","device","device_imei_no","sim_data","sim_imei_no","sim","sim_mob_no1","vehicletype","format"],"sourceRoot":""}