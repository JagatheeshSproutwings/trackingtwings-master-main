{"version":3,"file":"static/js/28.17291321.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavItem.js","components/layout-components/NavProfile.js","components/layout-components/HeaderNav/Header.js","components/layout-components/HeaderNav/HeaderWrapper.js","components/layout-components/HeaderNav/Nav.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav/NavEdge.js","components/layout-components/HeaderNav/index.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","layouts/AppLayout.js","utils/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst IntlMessage = ({ id, fallback }) => {\r\n\r\n\tconst { t } = useTranslation()\r\n\r\n\tconst translate = t(id, fallback)\r\n\r\n\treturn <>{translate}</>\r\n}\r\n\r\nexport default IntlMessage;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {\r\n  DashboardOutlined,\r\n  AppstoreOutlined,\r\n  MailOutlined,\r\n  ProfileOutlined,\r\n  FileDoneOutlined,\r\n  CarOutlined,\r\n  InfoCircleOutlined,\r\n  DotChartOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\n// const dashBoardNavTree = [\r\n//   {\r\n//     key: \"dashboard\",\r\n//     path: `${APP_PREFIX_PATH}/dashboards/`,\r\n//     title: \"sidenav.dashboard\",\r\n//     icon: DashboardOutlined,\r\n//     breadcrumb: false,\r\n\r\n//     submenu: [\r\n//       {\r\n//         key: \"admin_dashboard\",\r\n//         path: `${APP_PREFIX_PATH}/dashboards/admin`,\r\n//         title: \"Dashboard\",\r\n//         icon: DashboardOutlined,\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: \"dashboard.customer\",\r\n//         path: `${APP_PREFIX_PATH}/dashboards/customer`,\r\n//         title: \"Customer\",\r\n//         icon: DashboardOutlined,\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: \"dashboard.single\",\r\n//         path: `${APP_PREFIX_PATH}/single_dashboard`,\r\n//         title: \"Single Dashboard\",\r\n//         icon: DashboardOutlined,\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\n// const vehcileManagementNavTree = [\r\n//   {\r\n//     key: \"vehicleManagement\",\r\n//     path: `${APP_PREFIX_PATH}/vehicle_management`,\r\n//     title: \"Vehicle Management\",\r\n//     icon: AppstoreOutlined,\r\n//     breadcrumb: false,\r\n\r\n//     submenu: [\r\n//       {\r\n//         key: \"vehicle_creation\",\r\n//         path: `${APP_PREFIX_PATH}/vehicle_management/vehicle`,\r\n//         title: \"Vehicle Creation\",\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: \"vehicle_documents\",\r\n//         path: `${APP_PREFIX_PATH}/vehicle_management/documents`,\r\n//         title: \"Documents\",\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: \"vehicle_settings\",\r\n//         path: `${APP_PREFIX_PATH}/vehicle_management/settings`,\r\n//         title: \"Settings\",\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\n// const fuelManagementNavTree = [\r\n//   {\r\n//     key: \"fuel_management\",\r\n//     path: `${APP_PREFIX_PATH}/fuel_management`,\r\n//     title: \"Fuel Management\",\r\n//     icon: DotChartOutlined,\r\n//     breadcrumb: false,\r\n\r\n//     submenu: [\r\n//       {\r\n//         key: \"configuration\",\r\n//         path: `${APP_PREFIX_PATH}/fuel_management/configuration`,\r\n//         title: \"Fuel Configuration\",\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\n// const userManagementNavTree = [\r\n//   {\r\n//     key: \"usermanagement\",\r\n//     path: `${APP_PREFIX_PATH}/user_managements`,\r\n//     title: \"User Management\",\r\n//     icon: ProfileOutlined,\r\n//     breadcrumb: false,\r\n\r\n//     submenu: [\r\n//       {\r\n//         key: \"user_management.roles\",\r\n//         path: `${APP_PREFIX_PATH}/user_management/roles`,\r\n//         title: \"Roles\",\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: \"user_management.permissions\",\r\n//         path: `${APP_PREFIX_PATH}/user_management/permissions`,\r\n//         title: \"Permissions\",\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: \"permissionAssign\",\r\n//         path: `${APP_PREFIX_PATH}/user_management/permissionAssign`,\r\n//         title: \"Role Permission Assign\",\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: \"user\",\r\n//         path: `${APP_PREFIX_PATH}/user_management/user`,\r\n//         title: \"User\",\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: \"customer\",\r\n//         path: `${APP_PREFIX_PATH}/user_management/customer`,\r\n//         title: \"Customer\",\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\nconst dashBoardNavTree = [\r\n  {\r\n    key: \"dashboard\",\r\n    path: `${APP_PREFIX_PATH}/dashboards/`,\r\n    title: \"sidenav.dashboard\",\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n];\r\nconst userManagementNavTree = [\r\n  {\r\n    key: \"usermanagement\",\r\n    path: `${APP_PREFIX_PATH}/user_management/user`,\r\n    title: \"User Management\",\r\n    icon: ProfileOutlined,\r\n    breadcrumb: false,\r\n    isGroupTitle: false,\r\n    submenu: [],\r\n  },\r\n];\r\nconst stockManagementNavTree = [\r\n  {\r\n    key: \"stockmanagement\",\r\n    path: `${APP_PREFIX_PATH}/stock_management`,\r\n    title: \"Stock Management\",\r\n    icon: ProfileOutlined,\r\n    breadcrumb: false,\r\n\r\n    submenu: [\r\n      {\r\n        key: \"stock_management.sim\",\r\n        path: `${APP_PREFIX_PATH}/stock_management/sim`,\r\n        title: \"Sim\",\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"stock_management.device\",\r\n        path: `${APP_PREFIX_PATH}/stock_management/device`,\r\n        title: \"Device\",\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n];\r\nconst pointNavTree = [\r\n  {\r\n    key: \"points\",\r\n    path: `${APP_PREFIX_PATH}/points`,\r\n    title: \"Points\",\r\n    icon: SettingOutlined,\r\n    breadcrumb: false,\r\n    isGroupTitle: false,\r\n    submenu: [],\r\n  },\r\n];\r\nconst deviceNavTree = [\r\n  {\r\n    key: \"devices\",\r\n    path: `${APP_PREFIX_PATH}/device_management`,\r\n    title: \"Device\",\r\n    icon: CarOutlined,\r\n    breadcrumb: false,\r\n    isGroupTitle: false,\r\n    submenu: [],\r\n  },\r\n];\r\n// const settingNavTree = [\r\n//   {\r\n//     key: \"settings\",\r\n//     path: `${APP_PREFIX_PATH}/settings`,\r\n//     title: \"Settings\",\r\n//     icon: SettingOutlined,\r\n//     breadcrumb: false,\r\n//     isGroupTitle: false,\r\n//     submenu: [],\r\n//   },\r\n// ];\r\nconst reportNavTree = [\r\n  {\r\n    key: \"reports\",\r\n    path: `${APP_PREFIX_PATH}/report_management`,\r\n    title: \"Reports\",\r\n    icon: FileDoneOutlined,\r\n    breadcrumb: false,\r\n    isGroupTitle: false,\r\n    submenu: [],\r\n  },\r\n];\r\n\r\n// const reportNavTree = [\r\n//   {\r\n//     key: \"reports\",\r\n//     path: `${APP_PREFIX_PATH}/reports`,\r\n//     title: \"Reports\",\r\n//     icon: FileDoneOutlined,\r\n//     breadcrumb: false,\r\n//     isGroupTitle: true,\r\n//     submenu: [\r\n//       {\r\n//         key: \"generic_report\",\r\n//         path: `${APP_PREFIX_PATH}/reports/generic_report`,\r\n//         title: \"Generic Report\",\r\n//         icon: FileDoneOutlined,\r\n//         breadcrumb: false,\r\n//         submenu: [\r\n//           {\r\n//             key: \"idle_report\",\r\n//             path: `${APP_PREFIX_PATH}/reports/idle_report`,\r\n//             title: \"Idle Report\",\r\n//             icon: \"\",\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"parking_report\",\r\n//             path: `${APP_PREFIX_PATH}/reports/parking_report`,\r\n//             title: \"Parking Report\",\r\n//             icon: \"\",\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"distance_report\",\r\n//             path: `${APP_PREFIX_PATH}/reports/distance_report`,\r\n//             title: \"Distance Report\",\r\n//             icon: \"\",\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"trip_report\",\r\n//             path: `${APP_PREFIX_PATH}/reports/trip_report`,\r\n//             title: \"Trip Report\",\r\n//             icon: \"\",\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"playback_history\",\r\n//             path: `${APP_PREFIX_PATH}/reports/playback_history`,\r\n//             title: \"Playback History\",\r\n//             icon: \"\",\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"geofence_report\",\r\n//             path: `${APP_PREFIX_PATH}/reports/geofence_report`,\r\n//             title: \"Geofence Report\",\r\n//             icon: \"\",\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         key: \"executive_report\",\r\n//         path: `${APP_PREFIX_PATH}/reports/executive_report`,\r\n//         title: \"Executive Report\",\r\n//         icon: FileDoneOutlined,\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: \"smart_report\",\r\n//         path: `${APP_PREFIX_PATH}/reports/smart_report`,\r\n//         title: \"Smart Report\",\r\n//         icon: InfoCircleOutlined,\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: \"alert_report\",\r\n//         path: `${APP_PREFIX_PATH}/reports/alert_report`,\r\n//         title: \"Alert Report\",\r\n//         icon: MailOutlined,\r\n//         breadcrumb: false,\r\n//         submenu: [\r\n//           {\r\n//             key: \"report_notification_alert\",\r\n//             path: `${APP_PREFIX_PATH}/reports/notification_alert`,\r\n//             title: \"Notification Report\",\r\n//             icon: \"\",\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"alert_configuration\",\r\n//             path: `${APP_PREFIX_PATH}/reports/alert_configuration`,\r\n//             title: \"Alert Configuration\",\r\n//             icon: \"\",\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree,\r\n  ...userManagementNavTree,\r\n  ...deviceNavTree,\r\n  ...reportNavTree,\r\n];\r\n\r\nexport default navigationConfig;\r\n","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, Grid } from 'antd';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport Icon from '../util-components/Icon';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\n \r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (localeKey, isLocaleOn = true) =>\r\n\tisLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n\tlet keyList = [];\r\n\tlet keyString = \"\";\r\n\tif (key) {\r\n\t\tconst arr = key.split(\"-\");\r\n\t\tfor (let index = 0; index < arr.length; index++) {\r\n\t\t\tconst elm = arr[index];\r\n\t\t\tindex === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n\t\t\tkeyList.push(keyString);\r\n\t\t}\r\n\t}\r\n\treturn keyList;\r\n};\r\n\r\nconst MenuItem = ({title, icon, path}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tdispatch(onMobileNavToggle(false))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{icon && <Icon type={icon} /> }\r\n\t\t\t<span>{setLocale(title)}</span>\r\n\t\t\t{path && <Link onClick={closeMobileNav} to={path} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst getSideNavMenuItem = (navItem) => navItem.map(nav => {\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} {...(nav.isGroupTitle ? {} : {path: nav.path, icon: nav.icon})} />,\r\n\t\t...(nav.isGroupTitle ? {type: 'group'} : {}),\r\n\t\t...(nav.submenu.length > 0 ? {children: getSideNavMenuItem(nav.submenu)} : {})\r\n\t}\r\n})\r\n\r\nconst getTopNavMenuItem = (navItem) => navItem.map(nav => {\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} icon={nav.icon} {...(nav.isGroupTitle ? {} : {path: nav.path})} />,\r\n\t\t...(nav.submenu.length > 0 ? {children: getTopNavMenuItem(nav.submenu)} : {})\r\n\t}\r\n})\r\n\r\nconst SideNavContent = (props) => {\r\n\r\n\tconst { routeInfo, hideGroupTitle, sideNavTheme = SIDE_NAV_LIGHT } = props;\r\n\r\n\tconst menuItems = useMemo(() => getSideNavMenuItem(navigationConfig), []);\r\n\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tmode=\"inline\"\r\n\t\t\ttheme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n\t\t\tstyle={{ height: \"100%\", borderInlineEnd: 0 }}\r\n\t\t\tdefaultSelectedKeys={[routeInfo?.key]}\r\n\t\t\tdefaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n\t\t\tclassName={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst TopNavContent = () => {\r\n\r\n\tconst topNavColor = useSelector(state => state.theme.topNavColor);\r\n\r\n\tconst menuItems = useMemo(() => getTopNavMenuItem(navigationConfig), [])\r\n\r\n\treturn (\r\n\t\t<Menu \r\n\t\t\tmode=\"horizontal\" \r\n\t\t\tstyle={{ backgroundColor: topNavColor }}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n\treturn props.type === NAV_TYPE_SIDE ? (\r\n\t\t<SideNavContent {...props} />\r\n\t) : (\r\n\t\t<TopNavContent {...props} />\r\n\t);\r\n};\r\n\r\nexport default MenuContent;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport MenuContent from './MenuContent';\r\nimport { css } from '@emotion/react';\r\nimport { TEMPLATE, GRAY_SCALE, DARK_MODE } from \"constants/ThemeConstant\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, routeInfo, hideGroupTitle, currentTheme }) => {\r\n  const sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle }\r\n  return (\r\n    <Sider \r\n      css={css`\r\n        height: calc(100vh - ${TEMPLATE.HEADER_HEIGHT}px); \r\n        position: fixed !important;\r\n        top: ${TEMPLATE.HEADER_HEIGHT}px;\r\n        box-shadow: 0 1px 4px -1px rgba(0,0,0,.15);\r\n        z-index: 999;\r\n        direction: ltr;\r\n        ${currentTheme === 'light' && sideNavTheme !== SIDE_NAV_DARK ? `background-color: ${GRAY_SCALE.WHITE} !important;`  : `background-color: ${TEMPLATE.SIDE_NAV_DARK_BG_COLOR} !important;`}\r\n        ${currentTheme === 'dark' && sideNavTheme !== SIDE_NAV_DARK ? `background-color: ${DARK_MODE.BG_COLOR} !important`  : ``}\r\n        ${currentTheme === 'dark' && sideNavTheme === SIDE_NAV_DARK ? `background-color: ${TEMPLATE.SIDE_NAV_DARK_BG_COLOR} !important`  : ``}\r\n      `}\r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE}\r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, currentTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\nimport styled from '@emotion/styled';\r\nimport { TEMPLATE, WHITE, GRAY } from 'constants/ThemeConstant';\r\n\r\nconst TopNvContent = styled('div')`\r\n\theight: ${TEMPLATE.HEADER_HEIGHT}px;\r\n\tbackground-color: ${props => props.backgroundColor ? props.backgroundColor : '#001529'};\r\n\tposition: fixed;\r\n\ttop: ${TEMPLATE.HEADER_HEIGHT}px;\r\n\twidth: 100%;\r\n\tz-index: @zindex-modal;\r\n\tbox-shadow: 0 0.75rem 1.5rem rgba(18,38,63,.03);\r\n\r\n\t.top-nav-wrapper {\r\n\t\tmax-width: ${TEMPLATE.CONTENT_MAX_WIDTH}px;\r\n\t\tmargin-left: auto;\r\n\t\tmargin-right: auto;\r\n\r\n\t\t.ant-menu-horizontal {\r\n\t\t\tline-height: ${TEMPLATE.HEADER_HEIGHT}px;\r\n\t\t\tborder-bottom: 0;\r\n\t\t}\r\n\t}\r\n\r\n\t${props => props.mode === 'light' ? `\r\n\t\t.ant-menu {\r\n\t\t\tcolor: ${WHITE};\r\n\r\n\t\t\t.ant-menu-item:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected), \r\n\t\t\t.ant-menu-submenu-title:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected),\r\n\t\t\t.ant-menu-submenu-selected >.ant-menu-submenu-title {\r\n\t\t\t\tcolor: rgba(255, 255, 255, 0.75)\r\n\t\t\t}\r\n\t\t}\r\n    ` : '' }\r\n\r\n\t${props => props.mode === 'dark' ? `\r\n\t\t.ant-menu {\r\n\t\t\tcolor: ${GRAY};\r\n\r\n\t\t\t.ant-menu-item:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected), \r\n\t\t\t.ant-menu-submenu-title:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected),\r\n\t\t\t.ant-menu-submenu-selected >.ant-menu-submenu-title {\r\n\t\t\t\tcolor: rgba(0, 0, 0, 0.75)\r\n\t\t\t}\r\n\t\t}\r\n    ` : '' }\r\n`\r\n\r\nexport const TopNav = ({topNavColor }) => {\r\n\tconst props = { topNavColor }\r\n\treturn (\r\n\t\t<TopNvContent mode={utils.getColorContrast(topNavColor)} backgroundColor={topNavColor}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</TopNvContent>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { useSelector } from 'react-redux';\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\nimport styled from '@emotion/styled';\r\nimport { TEMPLATE } from 'constants/ThemeConstant';\r\n\r\nconst LogoWrapper = styled.div(() => ({\r\n\theight: TEMPLATE.HEADER_HEIGHT,\r\n\tdisplay: 'flex',\r\n\talignItems: 'center',\r\n\tpadding: '0 1rem',\r\n\tbackgroundColor: 'transparent',\r\n\ttransition: 'all .2s ease',\r\n}));\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const Logo = ({ mobileLogo, logoType }) => {\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed);\r\n\tconst navType = useSelector(state => state.theme.navType);\r\n\r\n\tconst getLogoWidthGutter = () => {\r\n\t\tconst isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n\t\tif(isMobile && !mobileLogo) {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t\tif(isNavTop) {\r\n\t\t\treturn 'auto'\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst getLogo = () => {\r\n\t\tif(logoType === 'light') {\r\n\t\t\tif(navCollapsed) {\r\n\t\t\treturn '/img/logo-sm-white.png'\r\n\t\t\t}\r\n\t\t\treturn '/img/logo-white.png'\r\n\t\t}\r\n\t\r\n\t\tif (navCollapsed) {\r\n\t\t\treturn '/img/logo-sm.png'\r\n\t\t}\r\n\t\treturn '/img/logo.png'\r\n\t}\r\n\r\n\treturn (\r\n\t\t<LogoWrapper className={isMobile && !mobileLogo ? 'd-none' : 'logo'} style={{width: `${getLogoWidthGutter()}`}}>\r\n\t\t\t<img src={getLogo()} alt={`${APP_NAME} logo`}/>\r\n\t\t</LogoWrapper>\r\n\t)\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n\trouteInfo,\r\n\thideGroupTitle\r\n}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme);\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav);\r\n\r\n\tconst menuContentprops = { routeInfo, hideGroupTitle };\r\n\r\n\tconst onClose = () => {\r\n\t\tdispatch(onMobileNavToggle(false));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onClose}\r\n\t\t\topen={mobileNav}\r\n\t\t\tbodyStyle={{ padding: 5 }}\r\n\t\t\twidth={300}\r\n\t\t>\r\n\t\t\t<Flex flexDirection=\"column\" className=\"h-100\">\r\n\t\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t<Logo logoType={currentTheme === 'dark' ? 'light' : 'dark'} mobileLogo={true} />\r\n\t\t\t\t\t<div className=\"px-3\" onClick={() => onClose()}>\r\n\t\t\t\t\t\t<ArrowLeftOutlined />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div className=\"h-100\">\r\n\t\t\t\t\t<Scrollbars autoHide>\r\n\t\t\t\t\t\t<MenuContent type={NAV_TYPE_SIDE} {...menuContentprops} />\r\n\t\t\t\t\t</Scrollbars>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t</Drawer>\r\n\t);\r\n};\r\n\r\nexport default MobileNav;\r\n","import styled from '@emotion/styled';\r\nimport { \r\n    GRAY_SCALE,\r\n} from 'constants/ThemeConstant'\r\nimport { baseTheme, rgba } from 'configs/ThemeConfig'\r\nimport { MEDIA_QUERIES } from 'constants/ThemeConstant'\r\n\r\nconst isDark = (mode) => {\r\n    return mode === 'dark'\r\n}\r\n\r\nconst NavItem = styled('div')`\r\n    display: flex;\r\n    align-items: center;\r\n    line-height: 1.5;\r\n    cursor: pointer;\r\n    padding: 0 1rem;\r\n    color: ${props => isDark(props.mode) ?  GRAY_SCALE.GRAY : rgba(GRAY_SCALE.WHITE, 0.85) };\r\n\r\n    @media ${MEDIA_QUERIES.MOBILE} {\r\n\t\tpadding: 0 0.75rem;\r\n\t}\r\n\r\n    .ant-badge {\r\n        color: ${props => isDark(props.mode) ?  GRAY_SCALE.GRAY : rgba(GRAY_SCALE.WHITE, 0.85) };\r\n    }\r\n\r\n    .nav-icon {\r\n        font-size: 1.25rem;\r\n    }\r\n\r\n    &:hover,\r\n    &.ant-dropdown-open,\r\n    &.ant-popover-open {\r\n        > * {\r\n            color: ${props => isDark(props.mode) ? baseTheme.colorPrimary : GRAY_SCALE.WHITE};\r\n        }\r\n\r\n        .profile-text {\r\n            color: ${props => isDark(props.mode) ? GRAY_SCALE.GRAY : GRAY_SCALE.WHITE};\r\n        }\r\n    }\r\n`\r\n\r\nexport default NavItem","import React from 'react';\r\nimport { Dropdown, Avatar } from 'antd';\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { \r\n\tUserOutlined,\r\n\tEditOutlined, \r\n\tSettingOutlined, \r\n\tShopOutlined, \r\n\tQuestionCircleOutlined, \r\n\tLogoutOutlined \r\n} from '@ant-design/icons';\r\nimport NavItem from './NavItem';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { signOut } from 'store/slices/authSlice';\r\nimport styled from '@emotion/styled';\r\nimport { FONT_WEIGHT, MEDIA_QUERIES, SPACER, FONT_SIZES } from 'constants/ThemeConstant'\r\n\r\n\r\nconst Icon = styled.div(() => ({\r\n\tfontSize: FONT_SIZES.LG\r\n}))\r\nconst Profile = styled.div(() => ({\r\n\tdisplay: 'flex',\r\n\talignItems: 'center'\r\n}))\r\n\r\nconst UserInfo = styled('div')`\r\n\tpadding-left: ${SPACER[2]};\r\n\r\n\t@media ${MEDIA_QUERIES.MOBILE} {\r\n\t\tdisplay: none\r\n\t}\r\n`\r\n\r\nconst Name = styled.div(() => ({\r\n\tfontWeight: FONT_WEIGHT.SEMIBOLD\r\n}))\r\n\r\nconst Title = styled.span(() => ({\r\n\topacity: 0.8\r\n}))\r\n\r\n// const MenuItem = (props) => (\r\n// \t<Flex as=\"a\" href={props.path} alignItems=\"center\" gap={SPACER[2]}>\r\n// \t\t<Icon>{props.icon}</Icon>\r\n// \t\t<span>{props.label}</span>\r\n// \t</Flex>\r\n// )\r\n\r\nconst MenuItemSignOut = (props) => {\r\n    //const token = useSelector(state => state.auth);\r\n\r\n\tconst dispatch = useDispatch();\r\n\t\r\n\tconst handleSignOut = () => {\r\n\t\tlocalStorage.clear()\r\n\t\tdispatch(signOut())\r\n\t\t\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div onClick={handleSignOut}>\r\n\t\t\t<Flex alignItems=\"center\" gap={SPACER[2]} >\r\n\t\t\t\t<Icon>\r\n\t\t\t\t\t<LogoutOutlined />\r\n\t\t\t\t</Icon>\r\n\t\t\t\t<span>{props.label}</span>\r\n\t\t\t</Flex>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst items = [\r\n\t{\r\n\t\tkey: 'Sign Out',\r\n\t\tlabel: <MenuItemSignOut label=\"Sign Out\" />,\r\n\t}\r\n]\r\n\r\nexport const NavProfile = ({mode}) => {\r\n\tconst token = useSelector(state => state.auth);\r\n\t\r\n\treturn (\r\n\t\t\r\n\t\t<Dropdown placement=\"bottomRight\" menu={{items}} trigger={[\"click\"]}>\r\n\t\t\t<NavItem mode={mode}>\r\n\t\t\t\t<Profile>\r\n\t\t\t\t\t<Avatar style={{\r\n        backgroundColor: '#87d068',\r\n      }} size={{\r\n      xs: 24,\r\n      sm: 25,\r\n      md: 27,\r\n      lg: 30,\r\n      xl: 35,\r\n      xxl: 40,\r\n    }} icon={<UserOutlined />}  />\r\n\t\t\t\t\t<UserInfo className=\"profile-text\">\r\n\t\t\t\t\t\t<Name>{token?.user_info?.name}</Name>\r\n\t\t\t\t\t\t<Title>{token?.user_info?.email}</Title>\r\n\t\t\t\t\t</UserInfo>\r\n\t\t\t\t</Profile>\r\n\t\t\t</NavItem>\r\n\t\t</Dropdown>\r\n\t);\r\n}\r\n\r\nexport default NavProfile\r\n","import styled from '@emotion/styled';\r\nimport { TEMPLATE } from 'constants/ThemeConstant';\r\n\r\nconst Header = styled.div(({headerNavColor, isDarkTheme}) => ({\r\n\tposition: 'fixed',\r\n\twidth: '100%',\r\n\tleft: 0,\r\n\tzIndex: 1000,\r\n\tdisplay: 'flex',\r\n\tflex: '0 0 auto',\r\n\theight: TEMPLATE.HEADER_HEIGHT,\r\n\tlineHeight: `${TEMPLATE.HEADER_HEIGHT}px`,\r\n\tbackgroundColor: headerNavColor,\r\n\tboxShadow: isDarkTheme ? '0 1px 8px -1px rgb(0 0 0 / 75%)' : '0 1px 4px -1px rgb(0 0 0 / 15%)'\r\n}))\r\n\r\n\r\nexport default Header","import styled from '@emotion/styled';\r\n\r\nconst HeaderWrapper = styled.div(({isNavTop}) => ({\r\n\twidth: '100%',\r\n\tdisplay: 'flex',\r\n\t...isNavTop ? {maxWidth: isNavTop, margin: 'auto'} : {}\r\n}))\r\n\r\n\r\nexport default HeaderWrapper","import styled from '@emotion/styled';\r\n\r\nconst Nav = styled.div(({navWidth}) => ({\r\n\tdisplay: 'flex',\r\n\tjustifyContent: 'space-between',\r\n\tposition: 'relative',\r\n\ttransition: 'all .2s ease',\r\n\twidth: `calc(100% - ${navWidth})`\r\n}))\r\n\r\nexport default Nav","/** @jsxImportSource @emotion/react */\r\nimport { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { BODY_BACKGROUND, GRAY_SCALE, DARK_MODE } from 'constants/ThemeConstant'\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { css } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst SearchResultIcon = styled.div(() => ({\r\n\tfontSize: '1.5rem',\r\n\tmarginRight: '1rem'\r\n}));\r\n\r\nconst SearchResultTitle = styled.div(({mode}) => ({\r\n\tcolor: mode === 'light' ? DARK_MODE.HEADING_COLOR : GRAY_SCALE.GRAY_DARK,\r\n\tfontWeight: '500'\r\n}));\r\n\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = (mode) => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<Flex alignItems=\"center\" padding=\"7px 12px\">\r\n\t\t\t\t\t<SearchResultIcon>\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</SearchResultIcon>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<SearchResultTitle mode={mode}>\r\n\t\t\t\t\t\t\t<IntlMessage id={item.title} />\r\n\t\t\t\t\t\t</SearchResultTitle>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(mode))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tcss={css`\r\n\t\t\t\t${!isMobile ? `\r\n\t\t\t\t\tmin-width: 300px;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\r\n\t\t\t\t\t.ant-input-affix-wrapper {\r\n\t\t\t\t\t\tbackground-color: ${mode === 'light' ? '#1b2531' : BODY_BACKGROUND};\r\n\t\t\t\r\n\t\t\t\t\t\t.ant-input {\r\n\t\t\t\t\t\t\tbackground-color: transparent;\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t.ant-input-prefix {\r\n\t\t\t\t\t\t\tcolor: ${GRAY_SCALE.GRAY_LIGHT};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t` : ''}\r\n\t\t\t`}\r\n\t\t\tpopupClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport styled from '@emotion/styled';\r\nimport SearchInput from './SearchInput';\r\nimport { TEMPLATE, FONT_SIZES } from 'constants/ThemeConstant';\r\n\r\nconst SeachWrapper = styled.div(({active, mode, headerBg}) => ({\r\n\theight: TEMPLATE.HEADER_HEIGHT,\r\n    padding: '0 1.5rem',\r\n    position: 'absolute',\r\n    width: '100%',\r\n    backgroundColor: headerBg,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    fontSize: FONT_SIZES.LG,\r\n    top: active ? 0 : -TEMPLATE.HEADER_HEIGHT,\r\n    transition: 'all 0.3s ease'\r\n}))\r\n\r\nconst NavItem = styled('div')`\r\n\theight: ${TEMPLATE.HEADER_HEIGHT}px;\r\n\tpadding: 0 1.5rem;\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\tbackground-color: ${ props => props.headerBg };\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tfont-size: ${FONT_SIZES.LG};\r\n\ttop: ${props => props.active ? 0 : -TEMPLATE.HEADER_HEIGHT};\r\n\ttransition: all 0.3s ease;\r\n\r\n\t${props => props.mode === 'light' ? `\r\n\t\t.ant-select-selection-search-input {\r\n\t\t\tcolor: @white;\r\n\t\t}\r\n\r\n\t\t.ant-select-selection-placeholder {\r\n\t\t\tcolor: rgba(@white, 0.85);\r\n\t\t}\r\n\t` : ''}\r\n`\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor, currentTheme, mode } = props\r\n\r\n\tconst headerBgBase = currentTheme === 'dark' ? TEMPLATE.HEADER_BG_DEFAULT_COLOR_DARK : TEMPLATE.HEADER_BG_DEFAULT_COLOR_LIGHT;\r\n\t\r\n\treturn (\r\n\t\t<SeachWrapper active={active} mode={mode} headerBg={headerNavColor || headerBgBase}>\r\n\t\t\t<SearchInput close={close} active={active} mode={mode}/>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</SeachWrapper>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import styled from '@emotion/styled';\r\n\r\nconst NavEdge = styled.div(({left, right}) => {\r\n\r\n\tif (left) {\r\n\t\treturn {\r\n\t\t\tdisplay: 'flex'\r\n\t\t}\r\n\t}\r\n\r\n\tif (right) {\r\n\t\treturn {\r\n\t\t\tmarginLeft: 'auto',\r\n\t\t\tpadding: '0 1rem',\r\n\t\t\tdisplay: 'flex'\r\n\t\t}\r\n\t}\r\n\r\n\treturn {}\r\n})\r\n\r\nexport default NavEdge","/** @jsxImportSource @emotion/react */\r\nimport { useState, useEffect, useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {Link,useNavigate } from \"react-router-dom\";\r\nimport { TEMPLATE } from \"constants/ThemeConstant\";\r\nimport {\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n  SearchOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Logo from \"../Logo\";\r\nimport NavProfile from \"../NavProfile\";\r\nimport Header from \"./Header\";\r\nimport HeaderWrapper from \"./HeaderWrapper\";\r\nimport Nav from \"./Nav\";\r\nimport NavNotification from \"../NavNotification\";\r\nimport NavSearch from \"../NavSearch\";\r\nimport SearchInput from \"../NavSearch/SearchInput\";\r\nimport NavEdge from \"./NavEdge\";\r\nimport NavItem from \"../NavItem\";\r\nimport { Button, List, Popover, Space } from \"antd\";\r\nimport { toggleCollapsedNav, onMobileNavToggle } from \"store/slices/themeSlice\";\r\nimport {\r\n  NAV_TYPE_TOP,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  SIDE_NAV_WIDTH,\r\n} from \"constants/ThemeConstant\";\r\nimport utils from \"utils\";\r\n\r\nexport const HeaderNav = (props) => {\r\n  const navigate = useNavigate();\r\n  const { isMobile } = props;\r\n\r\n  const [searchActive, setSearchActive] = useState(false);\r\n  const token = useSelector((state) => state.auth);\r\n  \r\n  const role_id = token?.user_info?.role_id;\r\n  const dispatch = useDispatch();\r\n\r\n  const navCollapsed = useSelector((state) => state.theme.navCollapsed);\r\n  const mobileNav = useSelector((state) => state.theme.mobileNav);\r\n  const navType = useSelector((state) => state.theme.navType);\r\n  const headerNavColor = useSelector((state) => state.theme.headerNavColor);\r\n  const currentTheme = useSelector((state) => state.theme.currentTheme);\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false);\r\n  };\r\n\r\n  const onToggle = () => {\r\n    if (!isMobile) {\r\n      dispatch(toggleCollapsedNav(!navCollapsed));\r\n    } else {\r\n      dispatch(onMobileNavToggle(!mobileNav));\r\n    }\r\n  };\r\n  const topMenuList = (\r\n    <div style={{ maxWidth: 300 }}>\r\n      <div>\r\n        <List size=\"small\" itemLayout=\"horizontal\">\r\n          <List.Item><Link to=\"/app/stock_management/device\">Device</Link></List.Item>\r\n          <List.Item><Link to=\"/app/stock_management/sim\">SIM</Link></List.Item>\r\n        </List>\r\n      </div>\r\n    </div>\r\n  );\r\n  const topLicenceMenuList = (\r\n    <div style={{ maxWidth: 300 }}>\r\n      <div>\r\n        <List size=\"small\" itemLayout=\"horizontal\">\r\n          <List.Item><Link to=\"/app/points\">Point</Link></List.Item>\r\n        </List>\r\n      </div>\r\n    </div>\r\n  );\r\n  const isNavTop = navType === NAV_TYPE_TOP;\r\n  const isDarkTheme = currentTheme === \"dark\";\r\n\r\n  const navMode = useMemo(() => {\r\n    if (!headerNavColor) {\r\n      return utils.getColorContrast(isDarkTheme ? \"#000000\" : \"#ffffff\");\r\n    }\r\n    return utils.getColorContrast(headerNavColor);\r\n  }, [isDarkTheme, headerNavColor]);\r\n\r\n  const navBgColor = isDarkTheme\r\n    ? TEMPLATE.HEADER_BG_DEFAULT_COLOR_DARK\r\n    : TEMPLATE.HEADER_BG_DEFAULT_COLOR_LIGHT;\r\n\r\n  const getNavWidth = () => {\r\n    if (isNavTop || isMobile) {\r\n      return \"0px\";\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      onSearchClose();\r\n    }\r\n    \r\n  });\r\n\r\n  return (\r\n    <Header\r\n      isDarkTheme={isDarkTheme}\r\n      headerNavColor={headerNavColor || navBgColor}\r\n    >\r\n      <HeaderWrapper isNavTop={isNavTop}>\r\n        <Logo logoType={navMode} />\r\n        <Nav navWidth={getNavWidth()}>\r\n          <NavEdge left>\r\n            {isNavTop && !isMobile ? null : (\r\n              <NavItem onClick={onToggle} mode={navMode}>\r\n                <div className=\"d-flex align-items-center\">\r\n                  {navCollapsed || isMobile ? (\r\n                    <MenuUnfoldOutlined className=\"nav-icon\" />\r\n                  ) : (\r\n                    <MenuFoldOutlined className=\"nav-icon\" />\r\n                  )}\r\n                </div>\r\n              </NavItem>\r\n            )}\r\n            <div className=\"ant-menu-item ant-menu-item-only-child\">\r\n              <SearchInput size=\"small\" mode={navMode} isMobile={isMobile} />\r\n            </div>\r\n          </NavEdge>\r\n\r\n          <NavEdge right>\r\n            {role_id != 6 && (\r\n              <>\r\n                <Space wrap>\r\n                  <Popover content={topMenuList}>\r\n                    <Button size=\"small\" type=\"primary\">\r\n                      Stock Management\r\n                    </Button>\r\n                  </Popover>\r\n                  <Popover content={topLicenceMenuList}>\r\n                    <Button type=\"primary\" size=\"small\">\r\n                      Licence Management\r\n                    </Button>\r\n                  </Popover>\r\n                </Space>\r\n              </>\r\n            )}\r\n            {/* <NavNotification mode={navMode} /> */}\r\n            <NavProfile mode={navMode} />\r\n          </NavEdge>\r\n        </Nav>\r\n      </HeaderWrapper>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default HeaderNav;\r\n","import React, { Component } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = props => {\r\n\tconst location = useLocation();\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst breadcrumbItems = pathSnippets.map((_, index) => {\r\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\treturn {\r\n\t\t\ttitle: <Link to={url}>{breadcrumbData[url]}</Link>\r\n\t\t}\r\n\t});\r\n  \r\n\treturn (\r\n\t\t<Breadcrumb items={breadcrumbItems} />\r\n\t);\r\n};\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","/** @jsxImportSource @emotion/react */\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport { css } from '@emotion/react';\r\nimport { MEDIA_QUERIES } from 'constants/ThemeConstant';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div\r\n\t\t\t\tcss={css`\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t\tmargin-bottom: 1rem;\r\n\r\n\t\t\t\t\t@media ${MEDIA_QUERIES.LAPTOP_ABOVE} {\r\n\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t}\r\n\t\t\t\t`}\r\n\t\t\t>\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","/** @jsxImportSource @emotion/react */\r\nimport React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { css } from '@emotion/react';\r\nimport { TEMPLATE, MEDIA_QUERIES, DARK_MODE, BORDER } from 'constants/ThemeConstant'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Footer() {\r\n\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\r\n\treturn (\r\n\t\t<footer css={css`\r\n\t\t\theight: ${TEMPLATE.FOOTER_HEIGHT}px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tmargin: 0 ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\r\n\t\t\talign-items: center;\r\n\t\t\tborder-top: 1px solid ${currentTheme === 'dark' ? DARK_MODE.BORDER_BASE_COLOR : BORDER.BASE_COLOR };\r\n\t\t\tjustify-content: space-between;\r\n\t\t\r\n\t\t\t@media ${MEDIA_QUERIES.MOBILE} {\r\n\t\t\t\tjustify-content: center;\r\n       \t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`}>\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t\t<div>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Term & Conditions</a>\r\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Privacy & Policy</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport { Layout, Grid,} from 'antd';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { TEMPLATE, MEDIA_QUERIES } from 'constants/ThemeConstant';\r\nimport styled from '@emotion/styled';\r\nimport utils from 'utils';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst AppContent = styled('div')`\r\n    padding: ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\r\n    margin-top: ${TEMPLATE.HEADER_HEIGHT}px;\r\n    min-height: calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px);\r\n    position: relative;\r\n\r\n    ${props => props.isNavTop ? `\r\n        max-width: ${TEMPLATE.CONTENT_MAX_WIDTH}px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        width: 100%;\r\n\r\n        @media ${MEDIA_QUERIES.DESKTOP} { \r\n            margin-top: ${TEMPLATE.HEADER_HEIGHT + TEMPLATE.TOP_NAV_HEIGHT}px;\r\n            min-height: calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px - ${TEMPLATE.TOP_NAV_HEIGHT}px);\r\n        }\r\n    ` : '' }\r\n\r\n    @media ${MEDIA_QUERIES.MOBILE} { \r\n        padding: ${TEMPLATE.LAYOUT_CONTENT_GUTTER_SM}px;\r\n    }\r\n`\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, direction, children }) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n    const screens = utils.getBreakPoint(useBreakpoint());\r\n    const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n    const isNavSide = navType === TEMPLATE.NAV_TYPE_SIDE\r\n    const isNavTop = navType === TEMPLATE.NAV_TYPE_TOP\r\n\r\n    const getLayoutGutter = () => {\r\n        if(isNavTop || isMobile) {\r\n            return 0\r\n        }\r\n        return navCollapsed ? TEMPLATE.SIDE_NAV_COLLAPSED_WIDTH : TEMPLATE.SIDE_NAV_WIDTH\r\n    }\r\n\r\n    const getLayoutDirectionGutter = () => {\r\n        if(direction === TEMPLATE.DIR_LTR) {\r\n            return {paddingLeft: getLayoutGutter()}\r\n        }  \r\n        if(direction === TEMPLATE.DIR_RTL) {\r\n            return {paddingRight: getLayoutGutter()}\r\n        }\r\n        return {paddingLeft: getLayoutGutter()}\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <HeaderNav isMobile={isMobile}/>\r\n            {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo} /> : null}\r\n            <Layout>\r\n                {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo} /> : null }\r\n                <Layout style={getLayoutDirectionGutter()}>\r\n                    <AppContent isNavTop={isNavTop}>\r\n                        <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n                        <Content className=\"h-100\">\r\n                            <Suspense fallback={<Loading cover=\"content\"/>}>\r\n                                {children}\r\n                            </Suspense>\r\n                        </Content>\r\n                    </AppContent>\r\n                    <Footer />\r\n                </Layout>\r\n            </Layout>\r\n            {isMobile && <MobileNav routeInfo={currentRouteInfo} />}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n    const { navCollapsed, navType, locale } =  theme;\r\n    return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;"],"names":["Flex","styled","div","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","id","fallback","translate","t","useTranslation","Icon","this","props","type","className","React","Component","dashBoardNavTree","key","path","APP_PREFIX_PATH","title","icon","DashboardOutlined","breadcrumb","submenu","userManagementNavTree","ProfileOutlined","isGroupTitle","deviceNavTree","SettingOutlined","CarOutlined","reportNavTree","FileDoneOutlined","useBreakpoint","Grid","setLocale","localeKey","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","MenuItem","dispatch","useDispatch","isMobile","utils","getBreakPoint","includes","onClick","onMobileNavToggle","to","getSideNavMenuItem","navItem","map","nav","label","children","getTopNavMenuItem","SideNavContent","routeInfo","hideGroupTitle","sideNavTheme","SIDE_NAV_LIGHT","menuItems","useMemo","navigationConfig","mode","theme","style","height","borderInlineEnd","defaultSelectedKeys","defaultOpenKeys","items","TopNavContent","topNavColor","useSelector","state","backgroundColor","NAV_TYPE_SIDE","Sider","Layout","connect","navCollapsed","currentTheme","css","TEMPLATE","HEADER_HEIGHT","SIDE_NAV_DARK","GRAY_SCALE","WHITE","SIDE_NAV_DARK_BG_COLOR","DARK_MODE","BG_COLOR","width","SIDE_NAV_WIDTH","collapsed","autoHide","TopNvContent","CONTENT_MAX_WIDTH","GRAY","getColorContrast","NAV_TYPE_TOP","LogoWrapper","transition","mobileLogo","logoType","navType","isNavTop","SIDE_NAV_COLLAPSED_WIDTH","getLogoWidthGutter","src","alt","APP_NAME","mobileNav","menuContentprops","onClose","placement","closable","open","bodyStyle","ArrowLeftOutlined","isDark","rgba","MEDIA_QUERIES","MOBILE","baseTheme","colorPrimary","fontSize","FONT_SIZES","LG","Profile","UserInfo","SPACER","Name","fontWeight","FONT_WEIGHT","SEMIBOLD","Title","span","opacity","MenuItemSignOut","localStorage","clear","signOut","LogoutOutlined","token","auth","menu","trigger","size","xs","sm","md","lg","xl","xxl","UserOutlined","user_info","name","email","headerNavColor","isDarkTheme","position","left","zIndex","flex","lineHeight","boxShadow","maxWidth","navWidth","SearchResultIcon","marginRight","SearchResultTitle","color","HEADING_COLOR","GRAY_DARK","optionList","getOptionList","navigationTree","optionTree","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","active","close","useState","value","setValue","options","setOptions","inputRef","useRef","current","focus","ref","BODY_BACKGROUND","GRAY_LIGHT","popupClassName","onSelect","onSearch","searchText","item","searchResult","filterOption","inputValue","option","toUpperCase","indexOf","placeholder","prefix","SearchOutlined","SeachWrapper","headerBg","top","headerBgBase","HEADER_BG_DEFAULT_COLOR_DARK","HEADER_BG_DEFAULT_COLOR_LIGHT","CloseOutlined","right","marginLeft","useNavigate","setSearchActive","role_id","topMenuList","itemLayout","Item","topLicenceMenuList","navMode","navBgColor","useEffect","toggleCollapsedNav","MenuUnfoldOutlined","MenuFoldOutlined","wrap","content","breadcrumbData","forEach","i","assignBreadcrumb","obj","BreadcrumbRoute","pathSnippets","useLocation","pathname","filter","breadcrumbItems","_","url","slice","join","AppBreadcrumb","LAPTOP_ABOVE","Footer","FOOTER_HEIGHT","LAYOUT_CONTENT_GUTTER","BORDER_BASE_COLOR","BORDER","BASE_COLOR","Date","getFullYear","href","e","preventDefault","Content","AppContent","CONTENT_HEIGHT_OFFSET","DESKTOP","TOP_NAV_HEIGHT","LAYOUT_CONTENT_GUTTER_SM","AppLayout","direction","location","currentRouteInfo","getRouteInfo","screens","isNavSide","getLayoutGutter","DIR_LTR","paddingLeft","DIR_RTL","paddingRight","Suspense","Loading","cover","locale","Utils","initials","match","shift","pop","navTree","route","p","hasOwnProperty","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","percent","R","G","B","RR","GG","BB","trim","str","replace","inParts","r","g","b","a","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","list","data","input","breakpoints"],"sourceRoot":""}