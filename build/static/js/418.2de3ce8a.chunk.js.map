{"version":3,"file":"static/js/418.2de3ce8a.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","views/app-views/reports/trip_report/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button, Card, Select, DatePicker } from \"antd\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { FileExcelOutlined, SearchOutlined } from \"@ant-design/icons\";\r\nimport api from \"configs/apiConfig\";\r\nimport { Excel } from \"antd-table-saveas-excel\";\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport const IdleReport = () => {\r\n  const [tripList, setTripList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedDateRange, setSelectedDateRange] = useState(null);\r\n  const [selectedVehicleId, setSelectedVehicleId] = useState(\"All\");\r\n  const [vehicleOptions, setVehicleOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchVehicleOptions() {\r\n      try {\r\n        const response = await api.post(\"vehicle_list\");\r\n        if (response.data.success) {\r\n          setVehicleOptions(response.data.data);\r\n        } else {\r\n          console.error(\"API request was not successful\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching vehicle options:\", error);\r\n      }\r\n    }\r\n\r\n    fetchVehicleOptions();\r\n  }, []);\r\n\r\n  const handleDateRangeChange = (dateRange) => {\r\n    setSelectedDateRange(dateRange);\r\n  };\r\n\r\n  const handleVehicleIdChange = (vehicleId) => {\r\n    setSelectedVehicleId(vehicleId);\r\n  };\r\n\r\n  const handleSearchClick = async () => {\r\n    // Log the actual selected values\r\n    console.log(\"Selected Date Range:\", selectedDateRange);\r\n    if (selectedDateRange) {\r\n      const [startDate, endDate] = selectedDateRange;\r\n      console.log(\"Start Date:\", startDate.format(\"YYYY-MM-DD\"));\r\n      console.log(\"End Date:\", endDate.format(\"YYYY-MM-DD\"));\r\n    }\r\n    console.log(\"Selected Vehicle ID:\", selectedVehicleId);\r\n\r\n    const data = {\r\n      start_day: selectedDateRange\r\n        ? selectedDateRange[0].format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : null,\r\n      end_day: selectedDateRange\r\n        ? selectedDateRange[1].format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : null,\r\n      device_imei: selectedVehicleId === \"0\" ? null : selectedVehicleId,\r\n    };\r\n\r\n    setTripList([]); // Clear previous data\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const trip_data = await api.post(\"get_keyonoff_report\", data);\r\n      console.log(trip_data.data);\r\n\r\n      if (trip_data.data && Array.isArray(trip_data.data.data)) {\r\n        const processedData = trip_data.data.data.map((item) => ({\r\n          s_no: item.id,\r\n          vehicle_name: item.vehicle_name,\r\n          start_time: item.start_datetime,\r\n          start_location: item.start_latitude + \":\" + item.start_longitude,\r\n          end_time: item.end_datetime,\r\n          end_location: item.end_latitude + \":\" + item.end_longitude,\r\n          max_speed: item.max_speed,\r\n          avg_speed: item.avg_speed,\r\n          distance: item.distance,\r\n          duration: item.duration,\r\n        }));\r\n\r\n        console.log(processedData);\r\n\r\n        setTripList(processedData);\r\n\r\n        console.log(\"tripList:\", tripList);\r\n      } else {\r\n        setTripList([]); // Clear the list when no data is found\r\n        console.log(\r\n          \"Response data is not in the expected format:\",\r\n          trip_data.data\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    setIsLoading(false);\r\n\r\n    // Perform additional actions based on the selected values\r\n  };\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"S.No\",\r\n      dataIndex: \"s_no\",\r\n    },\r\n    {\r\n      title: \"Vehicle Name\",\r\n      dataIndex: \"vehicle_name\",\r\n    },\r\n    {\r\n      title: \"Start Time\",\r\n      dataIndex: \"start_time\",\r\n    },\r\n    {\r\n      title: \"Start Location\",\r\n      dataIndex: \"start_location\",\r\n    },\r\n    {\r\n      title: \"End Time\",\r\n      dataIndex: \"end_time\",\r\n    },\r\n    {\r\n      title: \"End Time\",\r\n      dataIndex: \"end_location\",\r\n    },\r\n    {\r\n      title: \"Maximum Speed\",\r\n      dataIndex: \"max_speed\",\r\n    },\r\n    {\r\n      title: \"Average Speed\",\r\n      dataIndex: \"avg_speed\",\r\n    },\r\n    {\r\n      title: \"Distance (KM)\",\r\n      dataIndex: \"distance\",\r\n    },\r\n    {\r\n      title: \"Duration\",\r\n      dataIndex: \"duration\",\r\n    },\r\n    {\r\n      title: \"Map View\",\r\n      dataIndex: \"map_view\",\r\n    },\r\n  ];\r\n\r\n  const handleClick = () => {\r\n    const excel = new Excel();\r\n    excel\r\n      .addSheet(\"test\")\r\n      .addColumns(tableColumns)\r\n      .addDataSource(tripList, {\r\n        str2Percent: true,\r\n      })\r\n      .saveAs(\"Excel.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card title=\"Trip Report\">\r\n        <Flex\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          mobileFlex={false}\r\n        >\r\n          <Flex className=\"mb-1\" mobileFlex={false}>\r\n            <div className=\"mr-md-3 mr-3\">\r\n              <RangePicker\r\n                showTime\r\n                name=\"range_picker\"\r\n                format={\"YYYY-MM-DD hh:mm:ss\"}\r\n                onChange={handleDateRangeChange}\r\n              />\r\n            </div>\r\n            <div className=\"mr-md-3 mb-3\">\r\n              <Select\r\n                defaultValue=\"All\"\r\n                className=\"w-100\"\r\n                style={{ minWidth: 180 }}\r\n                name=\"vehicle_id\"\r\n                placeholder=\"Vehicle\"\r\n                onChange={handleVehicleIdChange}\r\n                value={selectedVehicleId}\r\n              >\r\n                <Option value=\"All\">All</Option>\r\n                {Array.isArray(vehicleOptions) ? (\r\n                  vehicleOptions.map((vehicle) => (\r\n                    <Option\r\n                      key={vehicle.device_imei}\r\n                      value={vehicle.device_imei}\r\n                    >\r\n                      {vehicle.vehicle_name}\r\n                    </Option>\r\n                  ))\r\n                ) : (\r\n                  <Option value=\"Loading\">Loading...</Option>\r\n                )}\r\n              </Select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <Button\r\n                type=\"primary\"\r\n                success\r\n                icon={<SearchOutlined />}\r\n                onClick={handleSearchClick}\r\n              >\r\n                Search\r\n              </Button>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<FileExcelOutlined />}\r\n                onClick={handleClick}\r\n              >\r\n                Export\r\n              </Button>\r\n            </div>\r\n          </Flex>\r\n        </Flex>\r\n        <div className=\"table-responsive\">\r\n          {isLoading ? (\r\n            <div>Loading...</div> // Display loading indicator\r\n          ) : tripList.length > 0 ? (\r\n            <Table bordered columns={tableColumns} dataSource={tripList} />\r\n          ) : (\r\n            <p>No Data Found</p>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IdleReport;\r\n"],"names":["Flex","styled","div","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","Option","Select","RangePicker","DatePicker","IdleReport","useState","tripList","setTripList","isLoading","setIsLoading","selectedDateRange","setSelectedDateRange","selectedVehicleId","setSelectedVehicleId","vehicleOptions","setVehicleOptions","useEffect","api","post","response","data","success","console","error","fetchVehicleOptions","tableColumns","title","dataIndex","mobileFlex","className","showTime","name","format","onChange","dateRange","defaultValue","style","minWidth","placeholder","vehicleId","value","Array","isArray","map","vehicle","device_imei","vehicle_name","type","icon","onClick","log","startDate","endDate","start_day","end_day","trip_data","processedData","item","s_no","id","start_time","start_datetime","start_location","start_latitude","start_longitude","end_time","end_datetime","end_location","end_latitude","end_longitude","max_speed","avg_speed","distance","duration","Excel","addSheet","addColumns","addDataSource","str2Percent","saveAs","length","bordered","columns","dataSource"],"sourceRoot":""}