{"version":3,"file":"static/js/510.c2204751.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","views/app-views/report_management/idle_report.js","views/app-views/report_management/parking_report.js","views/app-views/report_management/playback_report.js","views/app-views/report_management/keyon_keyoff_report.js","views/app-views/report_management/index.js","../node_modules/antd/es/col/index.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React,{useState,useEffect} from 'react'\r\nimport { Card,Table, Button, Select, Input, Form, Space, DatePicker } from \"antd\";\r\nimport api from \"configs/apiConfig\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { FileExcelOutlined, SearchOutlined } from \"@ant-design/icons\";\r\n\r\nimport { Excel } from \"antd-table-saveas-excel\";\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\nfunction Idlereport({}) {\r\n  const [idleList, setIdleList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedDateRange, setSelectedDateRange] = useState(null);\r\n  const [selectedVehicleId, setSelectedVehicleId] = useState(\"All\");\r\n  const [vehicleOptions, setVehicleOptions] = useState([]);\r\n  const tableColumns = [\r\n    {\r\n      title: \"S.No\",\r\n      dataIndex: \"s_no\",\r\n    },\r\n    {\r\n      title: \"Vehicle Name\",\r\n      dataIndex: \"vehicle_name\",\r\n    },\r\n    {\r\n      title: \"Start Date\",\r\n      dataIndex: \"start_date\",\r\n    },\r\n    {\r\n      title: \"End Date\",\r\n      dataIndex: \"end_date\",\r\n    },\r\n    {\r\n      title: \"Location\",\r\n      dataIndex: \"location\",\r\n    },\r\n    {\r\n      title: \"Duration\",\r\n      dataIndex: \"duration\",\r\n    },\r\n    {\r\n      title: \"Map View\",\r\n      dataIndex: \"map_view\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    async function fetchVehicleOptions() {\r\n      try {\r\n        const response = await api.get(\"vehicle_list\");\r\n        if (response.data.success) {\r\n          setVehicleOptions(response.data.data);\r\n        } else {\r\n          console.error(\"API request was not successful\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching vehicle options:\", error);\r\n      }\r\n    }\r\n    fetchVehicleOptions();\r\n  }, []);\r\n\r\n  const handleDateRangeChange = (dateRange) => {\r\n    setSelectedDateRange(dateRange);\r\n  };\r\n\r\n  const handleVehicleIdChange = (vehicleId) => {\r\n    setSelectedVehicleId(vehicleId);\r\n  };\r\n\r\n  const handleSearchClick = async () => {\r\n    // Log the actual selected values\r\n    console.log(\"Selected Date Range:\", selectedDateRange);\r\n    if (selectedDateRange) {\r\n      const [startDate, endDate] = selectedDateRange;\r\n      console.log(\"Start Date:\", startDate.format(\"YYYY-MM-DD\"));  \r\n      console.log(\"End Date:\", endDate.format(\"YYYY-MM-DD\"));\r\n    }\r\n    console.log(\"Selected Vehicle ID:\", selectedVehicleId);\r\n\r\n    const data = {\r\n      start_day: selectedDateRange\r\n        ? selectedDateRange[0].format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : null,\r\n      end_day: selectedDateRange\r\n        ? selectedDateRange[1].format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : null,\r\n      device_imei: selectedVehicleId === \"0\" ? null : selectedVehicleId,\r\n    };\r\n\r\n    setIdleList([]); // Clear previous data\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const idle_data = await api.post(\"get_idle_report\", data);\r\n      console.log(idle_data.data);\r\n\r\n      if (idle_data.data && Array.isArray(idle_data.data.data)) {\r\n        const processedData = idle_data.data.data.map((item) => ({\r\n          s_no: item.id,\r\n          vehicle_name: item.vehicle_name,\r\n          start_date: item.start_datetime,\r\n          end_date: item.end_datetime,\r\n          location: item.start_latitude + \":\" + item.start_longitude,\r\n          duration: item.idle_duration,\r\n        }));\r\n\r\n        console.log(processedData);\r\n\r\n        setIdleList(processedData);\r\n\r\n        console.log(\"idleList:\", idleList);\r\n      } else {\r\n        setIdleList([]); // Clear the list when no data is found\r\n        console.log(\r\n          \"Response data is not in the expected format:\",\r\n          idle_data.data\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    setIsLoading(false);\r\n\r\n    // Perform additional actions based on the selected values\r\n  };\r\n  const handleClick = () => {\r\n    const excel = new Excel();\r\n    excel\r\n      .addSheet(\"test\")\r\n      .addColumns(tableColumns)\r\n      .addDataSource(idleList, {\r\n        str2Percent: true,\r\n      })\r\n      .saveAs(\"Excel.xlsx\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Card title=\"Idle Report\">\r\n      <Flex\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          mobileFlex={false}\r\n        >\r\n          <Flex className=\"mb-1\" mobileFlex={false}>\r\n            <div className=\"mr-md-3 mr-3\">\r\n              <RangePicker\r\n                showTime\r\n                name=\"range_picker\"\r\n                format={\"YYYY-MM-DD hh:mm:ss\"}\r\n                onChange={handleDateRangeChange}\r\n              />\r\n            </div>\r\n            <div className=\"mr-md-3 mb-3\">\r\n              <Select\r\n                defaultValue=\"All\"\r\n                className=\"w-100\"\r\n                style={{ minWidth: 180 }}\r\n                name=\"vehicle_id\"\r\n                placeholder=\"Vehicle\"\r\n                onChange={handleVehicleIdChange}\r\n                value={selectedVehicleId}\r\n              >\r\n                <Option value=\"All\">All</Option>\r\n                {Array.isArray(vehicleOptions) ? (\r\n                  vehicleOptions.map((vehicle) => (\r\n                    <Option\r\n                      key={vehicle.device_imei}\r\n                      value={vehicle.device_imei}\r\n                    >\r\n                      {vehicle.vehicle_name}\r\n                    </Option>\r\n                  ))\r\n                ) : (\r\n                  <Option value=\"Loading\">Loading...</Option>\r\n                )}\r\n              </Select>\r\n            </div>\r\n            \r\n            <div className=\"mb-3 mr-3\">\r\n              <Button\r\n                type=\"primary\"\r\n                success\r\n                icon={<SearchOutlined />}\r\n                onClick={handleSearchClick}\r\n              >\r\n                Search\r\n              </Button>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<FileExcelOutlined />}\r\n                onClick={handleClick}\r\n              >\r\n                Export\r\n              </Button>\r\n            </div>\r\n          </Flex>\r\n        </Flex>\r\n        <Table bordered rowKey=\"id\" columns={tableColumns} dataSource={idleList}>\r\n\r\n        </Table>\r\n      </Card>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Idlereport","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button, Card, Select, DatePicker } from \"antd\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { FileExcelOutlined, SearchOutlined } from \"@ant-design/icons\";\r\nimport api from \"configs/apiConfig\";\r\nimport { Excel } from \"antd-table-saveas-excel\";\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport const ParkingReport = () => {\r\n  const [parkingList, setParkingList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedDateRange, setSelectedDateRange] = useState(null);\r\n  const [selectedVehicleId, setSelectedVehicleId] = useState(\"All\");\r\n  const [vehicleOptions, setVehicleOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchVehicleOptions() {\r\n      try {\r\n        const response = await api.get(\"vehicle_list\");\r\n        if (response.data.success) {\r\n          setVehicleOptions(response.data.data);\r\n        } else {\r\n          console.error(\"API request was not successful\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching vehicle options:\", error);\r\n      }\r\n    }\r\n\r\n    fetchVehicleOptions();\r\n  }, []);\r\n\r\n  const handleDateRangeChange = (dateRange) => {\r\n    setSelectedDateRange(dateRange);\r\n  };\r\n\r\n  const handleVehicleIdChange = (vehicleId) => {\r\n    setSelectedVehicleId(vehicleId);\r\n  };\r\n\r\n  const handleSearchClick = async () => {\r\n    // Log the actual selected values\r\n    console.log(\"Selected Date Range:\", selectedDateRange);\r\n    if (selectedDateRange) {\r\n      const [startDate, endDate] = selectedDateRange;\r\n      console.log(\"Start Date:\", startDate.format(\"YYYY-MM-DD\"));\r\n      console.log(\"End Date:\", endDate.format(\"YYYY-MM-DD\"));\r\n    }\r\n    console.log(\"Selected Vehicle ID:\", selectedVehicleId);\r\n\r\n    const data = {\r\n      start_day: selectedDateRange\r\n        ? selectedDateRange[0].format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : null,\r\n      end_day: selectedDateRange\r\n        ? selectedDateRange[1].format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : null,\r\n      device_imei: selectedVehicleId === \"0\" ? null : selectedVehicleId,\r\n    };\r\n\r\n    setParkingList([]); // Clear previous data\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const parking_data = await api.post(\"get_parking_report\", data);\r\n      console.log(parking_data.data);\r\n\r\n      if (parking_data.data && Array.isArray(parking_data.data.data)) {\r\n        const processedData = parking_data.data.data.map((item) => ({\r\n          s_no: item.id,\r\n          vehicle_name: item.vehicle_name,\r\n          start_date: item.start_datetime,\r\n          end_date: item.end_datetime,\r\n          location: item.start_latitude + \":\" + item.start_longitude,\r\n          duration: item.parking_duration,\r\n        }));\r\n\r\n        console.log(processedData);\r\n\r\n        setParkingList(processedData);\r\n\r\n        console.log(\"parkingList:\", parkingList);\r\n      } else {\r\n        setParkingList([]); // Clear the list when no data is found\r\n        console.log(\r\n          \"Response data is not in the expected format:\",\r\n          parking_data.data\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"S.No\",\r\n      dataIndex: \"s_no\",\r\n    },\r\n    {\r\n      title: \"Vehicle Name\",\r\n      dataIndex: \"vehicle_name\",\r\n    },\r\n    {\r\n      title: \"Start Date\",\r\n      dataIndex: \"start_date\",\r\n    },\r\n    {\r\n      title: \"End Date\",\r\n      dataIndex: \"end_date\",\r\n    },\r\n    {\r\n      title: \"Location\",\r\n      dataIndex: \"location\",\r\n    },\r\n    {\r\n      title: \"Duration\",\r\n      dataIndex: \"duration\",\r\n    },\r\n    {\r\n      title: \"Map View\",\r\n      dataIndex: \"map_view\",\r\n    },\r\n  ];\r\n\r\n  const handleClick = () => {\r\n    const excel = new Excel();\r\n    excel\r\n      .addSheet(\"test\")\r\n      .addColumns(tableColumns)\r\n      .addDataSource(parkingList, {\r\n        str2Percent: true,\r\n      })\r\n      .saveAs(\"Excel.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card title=\"Parking Report\">\r\n        <Flex\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          mobileFlex={false}\r\n        >\r\n          <Flex className=\"mb-1\" mobileFlex={false}>\r\n            <div className=\"mr-md-3 mr-3\">\r\n              <RangePicker\r\n                showTime\r\n                name=\"range_picker\"\r\n                format={\"YYYY-MM-DD hh:mm:ss\"}\r\n                onChange={handleDateRangeChange}\r\n              />\r\n            </div>\r\n            <div className=\"mr-md-3 mb-3\">\r\n              <Select\r\n                defaultValue=\"All\"\r\n                className=\"w-100\"\r\n                style={{ minWidth: 180 }}\r\n                name=\"device_imei\"\r\n                placeholder=\"Vehicle\"\r\n                onChange={handleVehicleIdChange}\r\n                value={selectedVehicleId}\r\n              >\r\n                <Option value=\"All\">All</Option>\r\n                {Array.isArray(vehicleOptions) ? (\r\n                  vehicleOptions.map((vehicle) => (\r\n                    <Option\r\n                      key={vehicle.device_imei}\r\n                      value={vehicle.device_imei}\r\n                    >\r\n                      {vehicle.vehicle_name}\r\n                    </Option>\r\n                  ))\r\n                ) : (\r\n                  <Option value=\"Loading\">Loading...</Option>\r\n                )}\r\n              </Select>\r\n            </div>\r\n            <div className=\"mb-3 mr-3\">\r\n              <Button\r\n                type=\"primary\"\r\n                success\r\n                icon={<SearchOutlined />}\r\n                onClick={handleSearchClick}\r\n              >\r\n                Search\r\n              </Button>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <Button\r\n                type=\"primary\"\r\n                icon={<FileExcelOutlined />}\r\n                onClick={handleClick}\r\n              >\r\n                Export\r\n              </Button>\r\n            </div>\r\n          </Flex>\r\n        </Flex>\r\n        <div className=\"table-responsive\">\r\n          {isLoading ? (\r\n            <div>Loading...</div> // Display loading indicator\r\n          ) : parkingList.length > 0 ? (\r\n            <Table bordered columns={tableColumns} dataSource={parkingList} />\r\n          ) : (\r\n            <p>No Data Found</p>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ParkingReport;\r\n","import React, {useState} from 'react'\r\nimport {Table,Button,Card,Drawer,Select, Input,Form,DatePicker } from 'antd'\r\nimport Flex from 'components/shared-components/Flex'\r\n\r\nimport { PlusOutlined,FileExcelOutlined,SearchOutlined } from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport {MapContainer,TileLayer,Marker,Popup,LayersControl} from 'react-leaflet'\r\nconst { Option } = Select\r\nconst { RangePicker } = DatePicker;\r\nconst position = [11.0467, 76.9254]\r\nconst { BaseLayer } = LayersControl;\r\nexport const PlaybackHistory = () => {\r\n  const tableColumns = [\r\n    {\r\n      title: 'S.No',\r\n      dataIndex:'s_no'\r\n    },\r\n    {\r\n        title: 'Vehicle Name',\r\n        dataIndex:'vehicle_name'\r\n    },\r\n    {\r\n        title: 'Start Date',\r\n        dataIndex: 'start_date',\r\n    },\r\n{\r\n        title: 'End Date',\r\n        dataIndex: 'end_date',\r\n    },\r\n\r\n    {\r\n        title: 'Location',\r\n        dataIndex: 'location',\r\n    },\r\n    {\r\n        title: 'Map View',\r\n        dataIndex: 'map_view',\r\n    },\r\n]\r\n  const onFinish = values => {\r\n    console.log('Success:', values);\r\n  };\r\n  const DateChange = (values) =>{\r\n    alert(\"Selected Values \"+values);\r\n}\r\nconst Playback = (values) => {\r\nalert(values);\r\nconsole.log(values);\r\n}\r\n  return (\r\n    \r\n    <>\r\n    <Card title=\"Playback History\">\r\n\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mobileFlex={false}>\r\n        <Flex className=\"mb-1\" mobileFlex={false}>\r\n        <div className='mr-md-6 mr-3'>\r\n            <Select showSearch defaultValue=\"Today\" \r\n\t\t\t\t\t\t\tclassName=\"w-100\" \r\n\t\t\t\t\t\t\tstyle={{ minWidth: 180 }} onChange={DateChange} name=\"date_selection\">\r\n            <option value=\"1\">Today</option>\r\n            <option value=\"2\">Last 7 Days</option>\r\n            <option value=\"3\">Last Month</option>\r\n            <option value=\"4\">Custom</option>\r\n            </Select>\r\n          </div>\r\n\t\t\t\t\t<div className='mr-md-3 mr-3' >\r\n            <RangePicker showTime name=\"date_range\" onChange={DateChange}/>\r\n          </div>\r\n\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t<Select mode=\"multiple\" name=\"vehicle_id\" onChange={DateChange}\r\n\t\t\t\t\t\t\tdefaultValue=\"All\" \r\n\t\t\t\t\t\t\tclassName=\"w-100\" \r\n\t\t\t\t\t\t\tstyle={{ minWidth: 180 }} \r\n\t\t\t\t\t\t\tplaceholder=\"Vehicle\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Option value=\"1\">TN01AB1234</Option>\r\n\t\t\t\t\t\t\t<Option value=\"2\">TN02AB9874</Option>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n          <div className=\"mb-3\">\r\n          <Button type=\"primary\" success icon={<SearchOutlined/>} onClick={Playback}>Search</Button>\r\n          </div>\r\n          \r\n\t\t\t\t</Flex>\r\n      </Flex>\r\n      <div className=\"table-responsive\">\r\n        <Card>\r\n          <MapContainer center={position} zoom={13} scrollWheelZoom={true}>\r\n            <LayersControl>\r\n                <BaseLayer checked name=\"OpenStreetMap\">\r\n                    <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                    />\r\n                </BaseLayer>\r\n                <BaseLayer name=\"Google-Street View\">\r\n                    <TileLayer\r\n                        attribution=\"Google Maps\"\r\n                        url=\"https://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                        />\r\n                </BaseLayer>\r\n                <BaseLayer checked name=\"Google-Satelite\">\r\n                <TileLayer\r\n                        url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                        maxZoom= {20}\r\n                        subdomains={['mt1','mt2','mt3']}\r\n                    />\r\n                </BaseLayer>\r\n            </LayersControl>\r\n          </MapContainer>\r\n        </Card>\r\n      </div>\r\n    </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaybackHistory","import React from 'react'\r\n\r\nconst KeyonKeyOffReport = () => {\r\n  return (\r\n    <div>KeyonKeyOffReport</div>\r\n  )\r\n}\r\n\r\nexport default KeyonKeyOffReport","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Drawer,\r\n  Select,\r\n  Input,\r\n  Form,\r\n  Space,\r\n  Checkbox,\r\n  DatePicker,\r\n  notification,\r\n} from \"antd\";\r\nimport IdleReport from \"./idle_report\";\r\nimport ParkingReport from \"./parking_report\";\r\nimport PlaybackReport from \"./playback_report\";\r\nimport KeyonKeyOffReport from \"./keyon_keyoff_report\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport api from \"configs/apiConfig\";\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\nconst NotificationType = \"success\" | \"info\" | \"warning\" | \"error\";\r\nconst Report = () => {\r\n  const [form] = Form.useForm();\r\n  // Use State Values\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [user_role, SetUserRole] = useState(\"\");\r\n  const [currentReport, SetReport] = useState(\"\");\r\n  const [currentUser, SetCurrentUser] = useState(\r\n    localStorage.getItem(\"id\") || \"\"\r\n  );\r\n  const [currentRole, SetCurrentRole] = useState(\r\n    localStorage.getItem(\"role\") || \"\"\r\n  );\r\n  const [currentCustomer, SetCurrentCustomer] = useState(\"\");\r\n  const [userList, SetUserList] = useState([]);\r\n  const [adminList, SetAdminList] = useState([]);\r\n  const [distributorList, SetDistributorList] = useState([]);\r\n  const [dealerList, SetDealerList] = useState([]);\r\n  const [subdealerList, SetSubdealerList] = useState([]);\r\n  const [customerList, SetCustomerList] = useState([]);\r\n  const [selectAdmin, setAdminSelect] = useState(\"\");\r\n  const [selectDistributor, setDistributorSelect] = useState(\"\");\r\n  const [selectDealer, setDelaerSelect] = useState(\"\");\r\n  const [selectSubDealer, setSubDealerSelect] = useState(\"\");\r\n  const [selectCustomer, setCustomerSelect] = useState(\"\");\r\n  const token = useSelector((state) => state.auth);\r\n\r\n  const handleShowStatus = (value) => {\r\n    SetCurrentCustomer(value);\r\n  };\r\n  const getUserList = async () => {\r\n    console.log(\"User List Data Begins..\");\r\n    console.log(currentUser);\r\n    console.log(currentRole);\r\n    const user_data = { user_id: currentUser };\r\n    const vehicle_data = await api\r\n      .post(\"role_based_user_list\", user_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return [];\r\n      });\r\n\r\n    // Super Admin\r\n    if (currentRole == 1) {\r\n      console.log(\"Super Admin\");\r\n      SetAdminList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 2) {\r\n      console.log(\"Admin Login\");\r\n      console.log(vehicle_data?.data?.data?.user_list);\r\n      SetDistributorList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 3) {\r\n      console.log(\"Distributor\");\r\n      console.log(vehicle_data?.data?.data);\r\n      SetDealerList(vehicle_data?.data?.data?.user_list);\r\n      console.log(dealerList);\r\n    }\r\n    if (currentRole == 4) {\r\n      console.log(\"Dealer\");\r\n      SetCustomerList(vehicle_data?.data?.data?.user_list);\r\n      SetSubdealerList(vehicle_data?.data?.data?.subdealer_list);\r\n    }\r\n    if (currentRole == 5) {\r\n      console.log(\"Subdealer\");\r\n      SetCustomerList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    // SetCustomerId(user_data.data.message);\r\n  };\r\n\r\n  const handleReport = (report) => {\r\n    if (currentCustomer != \"\") {\r\n      SetReport(report);\r\n    }\r\n  };\r\n\r\n  const user = () => {\r\n    return localStorage.getItem(\"id\");\r\n  };\r\n  const role = () => {\r\n    return localStorage.getItem(\"role\");\r\n  };\r\n  const admin = () => {\r\n    return localStorage.getItem(\"admin_id\");\r\n  };\r\n  const distributor = () => {\r\n    return localStorage.getItem(\"distributor_id\");\r\n  };\r\n  const dealer = () => {\r\n    return localStorage.getItem(\"dealer_id\");\r\n  };\r\n  const subdealer = () => {\r\n    return localStorage.getItem(\"subdealer_id\");\r\n  };\r\n  const handleUser = async (value, option) => {\r\n    if (value != \"\") {\r\n      const role_id = option.role_id;\r\n      const user_get_data = { user_id: value };\r\n      const user_details = await api\r\n        .post(\"role_based_user_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return [];\r\n        });\r\n      if (role_id == 2) {\r\n        SetDistributorList(user_details?.data?.data?.user_list);\r\n      }\r\n      if (role_id == 3) {\r\n        SetDealerList(user_details?.data?.data?.user_list);\r\n      }\r\n      if (role_id == 4) {\r\n        SetSubdealerList(user_details?.data?.data?.user_list);\r\n      }\r\n      if (role_id == 5) {\r\n        SetCustomerList(user_details?.data?.data?.user_list);\r\n      }\r\n      console.log(user_details?.data?.data?.user_list);\r\n    }\r\n  };\r\n  const handleAdmin = (value, option) => {\r\n    if (value != \"\") {\r\n      const role_id = option.role_id;\r\n      const user_get_data = { user_id: value };\r\n\r\n      const user_details = api\r\n        .post(\"role_based_user_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return [];\r\n        });\r\n      SetDistributorList(user_details?.data?.data?.user_list);\r\n\r\n      SetDealerList([]);\r\n    }\r\n  };\r\n  const handleDistributor = (value, option) => {\r\n    if (value != \"\") {\r\n      const role_id = option.role_id;\r\n      const user_get_data = { user_id: value };\r\n      const user_details = api\r\n        .post(\"role_based_user_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return [];\r\n        });\r\n      SetDealerList(user_details?.data?.data?.user_list);\r\n      SetSubdealerList([]);\r\n    }\r\n  };\r\n  const handleDealer = (value, option) => {\r\n    if (value != \"\") {\r\n      const role_id = option.role_id;\r\n      const user_get_data = { user_id: value };\r\n      const user_details = api\r\n        .post(\"role_based_user_list\", user_get_data)\r\n        .then((res) => {\r\n          return res;\r\n        })\r\n        .catch((err) => {\r\n          return [];\r\n        });\r\n      SetCustomerList(user_details?.data?.data?.user_list);\r\n      SetSubdealerList(user_details?.data?.data?.subdealer_list);\r\n    }\r\n  };\r\n\r\n  // OnChange Of Admin\r\n  const AdminChange = async (value, option) => {\r\n    form.setFieldValue(\"\");\r\n    SetDistributorList([]);\r\n    SetDealerList([]);\r\n    SetSubdealerList([]);\r\n    SetCurrentCustomer([]);\r\n    const user_get_data = { user_id: value };\r\n    const distributor_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    console.log(distributor_list?.data?.data?.user_list);\r\n    SetDistributorList(distributor_list?.data?.data?.user_list);\r\n  };\r\n  // On change Distributor\r\n  const DistributorChange = async (value, option) => {\r\n    form.setFieldValue(\"\");\r\n    SetDealerList(\"\");\r\n    SetSubdealerList(\"\");\r\n    SetCurrentCustomer(\"\");\r\n\r\n    const user_get_data = { user_id: value };\r\n    const dealer_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    console.log(dealer_list?.data?.data?.user_list);\r\n    SetDealerList(dealer_list?.data?.data?.user_list);\r\n  };\r\n  // on change Dealer\r\n  const DealerChange = async (value, option) => {\r\n\r\n    SetSubdealerList([]);\r\n    SetCurrentCustomer(\"\");\r\n    SetCustomerList([]);\r\n    form.setFieldValue(\"\");\r\n    const user_get_data = { user_id: value };\r\n    const subdealer_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    console.log(subdealer_list?.data);\r\n\r\n    SetCustomerList(subdealer_list?.data?.data?.user_list);\r\n    SetSubdealerList(subdealer_list?.data?.data?.subdealer_list);\r\n    console.log(\r\n      Array.isArray(subdealer_list?.data?.data?.subdealer_list)\r\n        ? (subdealer_list?.data?.data?.subdealer_list).length\r\n        : 0\r\n    );\r\n  };\r\n  // on change SubDealer\r\n  const SubDealerChange = async (value, option) => {\r\n    SetCurrentCustomer(\"\");\r\n    SetCustomerList([]);\r\n    form.setFieldValue(\"\");\r\n    const user_get_data = { user_id: value };\r\n    const customer_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    console.log(customer_list?.data);\r\n\r\n    SetCustomerList(customer_list?.data?.data?.user_list);\r\n  };\r\n  const CustomerChange = async (value, option) => {\r\n    \r\n    SetCurrentCustomer(value);\r\n    // form.setFieldValue('');\r\n    // const user_get_data = {user_id:value};\r\n    // const customer_list = await api.post(\"role_based_user_list\",user_get_data).then((res) => {return res}).catch((err) => {return err});\r\n    // console.log(customer_list?.data?.data?.user_list);\r\n    // SetCustomerList(customer_list?.data?.data?.user_list);\r\n  };\r\n  useEffect(() => {\r\n    if (role() == 6 && user() != \"\") {\r\n      SetCurrentCustomer(user());\r\n    }\r\n    SetCurrentUser(user());\r\n    SetCurrentRole(role());\r\n    getUserList();\r\n  }, []);\r\n  const newLocal = (\r\n    <Card>\r\n      <Form layout=\"vertical\" size=\"small\">\r\n        {currentRole == 1 && (\r\n          <Form.Item\r\n            label=\"Admin\"\r\n            name=\"admin_id\"\r\n            size=\"small\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Select onChange={AdminChange}>\r\n              {Array.isArray(adminList) ? (\r\n                adminList.map((admin) => (\r\n                  <Select.Option key={admin?.id} role_id=\"2\" value={admin?.id}>\r\n                    {admin?.name}\r\n                  </Select.Option>\r\n                ))\r\n              ) : (\r\n                <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n              )}\r\n            </Select>\r\n          </Form.Item>\r\n        )}\r\n        {(currentRole == 1 || currentRole == 2) && (\r\n          <Form.Item\r\n            label=\"Distributor\"\r\n            name=\"distributor_id\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Select onChange={DistributorChange}>\r\n              {Array.isArray(distributorList) ? (\r\n                distributorList.map((distributor) => (\r\n                  <Option\r\n                    key={distributor?.id}\r\n                    role_id=\"3\"\r\n                    value={distributor?.id}\r\n                  >\r\n                    {distributor?.name}\r\n                  </Option>\r\n                ))\r\n              ) : (\r\n                <Option role_id=\"3\" value={selectDistributor}></Option>\r\n              )}\r\n            </Select>\r\n          </Form.Item>\r\n        )}\r\n\r\n        {(currentRole == 1 || currentRole == 2 || currentRole == 3) && (\r\n          <Form.Item\r\n            label=\"Dealer\"\r\n            name=\"dealer_id\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Select onChange={DealerChange}>\r\n              {Array.isArray(dealerList) ? (\r\n                dealerList.map((dealer) => (\r\n                  <Option key={dealer?.id} role_id=\"4\" value={dealer?.id}>\r\n                    {dealer?.name}\r\n                  </Option>\r\n                ))\r\n              ) : (\r\n                <Option role_id=\"4\" value=\"\"></Option>\r\n              )}\r\n            </Select>\r\n          </Form.Item>\r\n        )}\r\n        {(currentRole == 1 ||\r\n          currentRole == 2 ||\r\n          currentRole == 3 ||\r\n          currentRole == 4) && (\r\n          <Form.Item\r\n            label=\"Subdealer\"\r\n            name=\"subdealer_id\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Select onChange={SubDealerChange}>\r\n              {Array.isArray(subdealerList) && subdealerList.length > 0 ? (\r\n                subdealerList.map((subdealer) => (\r\n                  <Option key={subdealer?.id} role_id=\"5\" value={subdealer?.id}>\r\n                    {subdealer?.name}\r\n                  </Option>\r\n                ))\r\n              ) : (\r\n                <Option></Option>\r\n              )}\r\n            </Select>\r\n          </Form.Item>\r\n        )}\r\n        {(currentRole == 1 ||\r\n          currentRole == 2 ||\r\n          currentRole == 3 ||\r\n          currentRole == 4 ||\r\n          currentRole == 5) && (\r\n          <Form.Item\r\n            label=\"Customer\"\r\n            name=\"customer_id\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Select onChange={CustomerChange}>\r\n              {Array.isArray(customerList) ? (\r\n                customerList.map((customer) => (\r\n                  <Option key={customer?.id} role_id=\"6\" value={customer?.id}>\r\n                    {customer?.name}\r\n                  </Option>\r\n                ))\r\n              ) : (\r\n                <Option role_id=\"6\" value=\"\"></Option>\r\n              )}\r\n            </Select>\r\n          </Form.Item>\r\n        )}\r\n\r\n        <Form.Item\r\n          label=\"Reports\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n          name=\"report_id\"\r\n        >\r\n          <Select onChange={handleReport}>\r\n            <Select.Option value=\"1\">Idle Report</Select.Option>\r\n            <Select.Option value=\"2\">Parking Report</Select.Option>\r\n            <Select.Option value=\"3\">Playback Report</Select.Option>\r\n            <Select.Option value=\"4\">Keyon KeyOff Report</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={6}>\r\n        <Col xs={24} sm={24} xl={4} md={4} lg={4} xxl={4}>\r\n          {newLocal}\r\n        </Col>\r\n        <Col xs={24} sm={24} xl={20} md={20} lg={20} xxl={20}>\r\n          {(() => {\r\n            switch (currentReport) {\r\n              case \"1\":\r\n                return <IdleReport />;\r\n              case \"2\":\r\n                return <ParkingReport />;\r\n              case \"3\":\r\n                return <PlaybackReport />;\r\n              case \"4\":\r\n                return <KeyonKeyOffReport />;\r\n              default:\r\n                return \"\";\r\n            }\r\n          })()}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Report;\r\n","import { Col } from '../grid';\nexport default Col;","import { Row } from '../grid';\nexport default Row;"],"names":["Flex","styled","div","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","Option","Select","RangePicker","DatePicker","useState","idleList","setIdleList","setIsLoading","selectedDateRange","setSelectedDateRange","selectedVehicleId","setSelectedVehicleId","vehicleOptions","setVehicleOptions","tableColumns","title","dataIndex","useEffect","api","get","response","data","success","console","error","fetchVehicleOptions","handleSearchClick","log","startDate","endDate","format","start_day","end_day","device_imei","post","idle_data","Array","isArray","processedData","map","item","s_no","id","vehicle_name","start_date","start_datetime","end_date","end_datetime","location","start_latitude","start_longitude","duration","idle_duration","mobileFlex","className","showTime","name","onChange","dateRange","defaultValue","style","minWidth","placeholder","vehicleId","value","vehicle","type","icon","SearchOutlined","onClick","FileExcelOutlined","Excel","addSheet","addColumns","addDataSource","str2Percent","saveAs","bordered","rowKey","columns","dataSource","parkingList","setParkingList","isLoading","parking_data","parking_duration","length","position","BaseLayer","LayersControl","DateChange","values","alert","showSearch","mode","MapContainer","center","zoom","scrollWheelZoom","checked","TileLayer","url","attribution","maxZoom","subdomains","Form","useForm","form","currentReport","SetReport","localStorage","getItem","currentUser","SetCurrentUser","currentRole","SetCurrentRole","currentCustomer","SetCurrentCustomer","adminList","SetAdminList","distributorList","SetDistributorList","dealerList","SetDealerList","subdealerList","SetSubdealerList","customerList","SetCustomerList","selectDistributor","getUserList","useSelector","state","auth","user_data","user_id","then","res","catch","err","vehicle_data","user_list","subdealer_list","user","role","AdminChange","option","setFieldValue","user_get_data","distributor_list","DistributorChange","dealer_list","DealerChange","SubDealerChange","customer_list","CustomerChange","newLocal","layout","size","Item","label","rules","required","admin","role_id","distributor","dealer","subdealer","customer","report","gutter","xs","sm","xl","md","lg","xxl","Col","Row"],"sourceRoot":""}