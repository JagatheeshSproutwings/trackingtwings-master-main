{"version":3,"file":"static/js/554.26939d21.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","utils/index.js","views/app-views/stock_management/demo/index.js","views/app-views/stock_management/device/create.js","views/app-views/stock_management/device/edit.js","views/app-views/stock_management/device/index.js","../node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js","../node_modules/antd/es/col/index.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Card, Select, Form, Button, notification } from \"antd\";\r\nimport api from \"configs/apiConfig\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nconst { Option } = Select;\r\n\r\nconst Assign = ({ parentToChild, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  const [isComponentVisible, setIsComponentVisible] = useState(true);\r\n\r\n  const [adminList, SetAdminList] = useState([]);\r\n  const [distributorList, SetDistributorList] = useState([]);\r\n  const [dealerList, SetDealerList] = useState([]);\r\n  const [subdealerList, SetSubdealerList] = useState([]);\r\n\r\n  const toggleComponentVisibility = () => {\r\n    setIsComponentVisible(!isComponentVisible);\r\n  };\r\n\r\n  const [currentUser, SetCurrentUser] = useState(\r\n    localStorage.getItem(\"id\") || \"\"\r\n  );\r\n  const [currentRole, SetCurrentRole] = useState(\r\n    localStorage.getItem(\"role\") || \"\"\r\n  );\r\n  const openNotification = (type, message, description) => {\r\n    notification[type]({\r\n      message,\r\n      description,\r\n    });\r\n  };\r\n\r\n  const getUserList = async () => {\r\n    const user_data = { user_id: currentUser };\r\n    const vehicle_data = await api\r\n      .post(\"role_based_user_list\", user_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return [];\r\n      });\r\n\r\n    // Super Admin\r\n    if (currentRole == 1) {\r\n      console.log(\"Super Admin\");\r\n      SetAdminList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 2) {\r\n      console.log(\"Admin\");\r\n      SetDistributorList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 3) {\r\n      console.log(\"Distributor\");\r\n      SetDealerList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 4) {\r\n      console.log(\"Dealer\");\r\n      SetSubdealerList(vehicle_data?.data?.data?.subdealer_list);\r\n    }\r\n  };\r\n  const user = () => {\r\n    return localStorage.getItem(\"id\");\r\n  };\r\n  const role = () => {\r\n    return localStorage.getItem(\"role\");\r\n  };\r\n\r\n  // on change Admin\r\n  const AdminChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetDistributorList([]);\r\n    SetDealerList([]);\r\n    SetSubdealerList([]);\r\n    const user_get_data = { user_id: value };\r\n    const distributor_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetDistributorList(distributor_list?.data?.data?.user_list);\r\n  };\r\n  // On change Distributor\r\n  const DistributorChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetDealerList(\"\");\r\n    SetSubdealerList(\"\");\r\n    const user_get_data = { user_id: value };\r\n    const dealer_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetDealerList(dealer_list?.data?.data?.user_list);\r\n  };\r\n  // on change Dealer\r\n  const DealerChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetSubdealerList([]);\r\n\r\n    const user_get_data = { user_id: value };\r\n    const subdealer_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetSubdealerList(subdealer_list?.data?.data?.subdealer_list);\r\n  };\r\n\r\n  useEffect(() => {\r\n    SetCurrentUser(user());\r\n    SetCurrentRole(role());\r\n    getUserList();\r\n  }, []);\r\n\r\n  const onFinish = async (values) => {\r\n    if (parentToChild[1] == \"Sim\") {\r\n      values[\"id\"] = parentToChild[0];\r\n      await api.post(\"sim_transfer\", values);\r\n      form.resetFields();\r\n      props.parentFunction();\r\n      openNotification(\"success\", \"Device\", \"Sim Transfered Successfully!\");\r\n\r\n      toggleComponentVisibility();\r\n    } else if (parentToChild[1] == \"Device\") {\r\n      values[\"id\"] = parentToChild[0];\r\n      await api.post(\"device_transfer\", values);\r\n      form.resetFields();\r\n      props.parentFunction();\r\n      openNotification(\"success\", \"Device\", \"Device Transfered Successfully!\");\r\n\r\n      toggleComponentVisibility();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row gutter={6}>\r\n      {isComponentVisible && (\r\n        <Col>\r\n          <Card title=\"Assign Form\">\r\n            <Flex>\r\n              <div className=\"container\">\r\n                <Form layout=\"vertical\" size=\"small\" onFinish={onFinish}>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {currentRole == 1 && (\r\n                      <Form.Item label=\"Admin\" name=\"admin_id\">\r\n                        <Select\r\n                          onChange={AdminChange}\r\n                          allowClear\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                        >\r\n                          {Array.isArray(adminList) ? (\r\n                            adminList.map((admin) => (\r\n                              <Select.Option\r\n                                key={admin?.id}\r\n                                role_id=\"2\"\r\n                                value={admin?.id}\r\n                              >\r\n                                {admin?.name}\r\n                              </Select.Option>\r\n                            ))\r\n                          ) : (\r\n                            <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {(currentRole == 1 || currentRole == 2) && (\r\n                      <Form.Item label=\"Distributor\" name=\"distributor_id\">\r\n                        <Select\r\n                          onChange={DistributorChange}\r\n                          allowClear\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                        >\r\n                          {Array.isArray(distributorList) ? (\r\n                            distributorList.map((distributor) => (\r\n                              <Option\r\n                                key={distributor?.id}\r\n                                role_id=\"3\"\r\n                                value={distributor?.id}\r\n                              >\r\n                                {distributor?.name}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option role_id=\"3\" value=\"\"></Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {(currentRole == 1 ||\r\n                      currentRole == 2 ||\r\n                      currentRole == 3) && (\r\n                      <Form.Item label=\"Dealer\" name=\"dealer_id\">\r\n                        <Select\r\n                          onChange={DealerChange}\r\n                          allowClear\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                        >\r\n                          {Array.isArray(dealerList) ? (\r\n                            dealerList.map((dealer) => (\r\n                              <Option\r\n                                key={dealer?.id}\r\n                                role_id=\"4\"\r\n                                value={dealer?.id}\r\n                              >\r\n                                {dealer?.name}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option role_id=\"4\" value=\"\"></Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    {(currentRole == 1 ||\r\n                      currentRole == 2 ||\r\n                      currentRole == 3 ||\r\n                      currentRole == 4) && (\r\n                      <Form.Item label=\"Subdealer\" name=\"subdealer_id\">\r\n                        <Select\r\n                          allowClear\r\n                          showSearch\r\n                          optionFilterProp=\"children\"\r\n                        >\r\n                          {Array.isArray(subdealerList) &&\r\n                          subdealerList.length > 0 ? (\r\n                            subdealerList.map((subdealer) => (\r\n                              <Option\r\n                                key={subdealer?.id}\r\n                                role_id=\"5\"\r\n                                value={subdealer?.id}\r\n                              >\r\n                                {subdealer?.name}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option></Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    )}\r\n                  </Col>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    Assign\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </Flex>\r\n          </Card>\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Assign;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Select,\r\n  Input,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  notification,\r\n} from \"antd\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport api from \"configs/apiConfig\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Create = (props) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [selectedSupplierId, setselectedSupplierId] = useState();\r\n  const [supplierOptions, setSupplierOptions] = useState([]);\r\n  const [selectedMakeId, setselectedMakeId] = useState();\r\n  const [makeOptions, setMakeOptions] = useState([]);\r\n  const [selectedModelId, setselectedModelId] = useState();\r\n  const [modelOptions, setModelOptions] = useState([]);\r\n\r\n  const handleSupplierIdChange = (roleID) => {\r\n    setselectedSupplierId(roleID);\r\n  };\r\n  const handleMakeIdChange = (roleID) => {\r\n    setselectedMakeId(roleID);\r\n  };\r\n\r\n  const handleModelIdChange = (roleID) => {\r\n    setselectedModelId(roleID);\r\n  };\r\n\r\n  const openNotification = (type, message, description) => {\r\n    notification[type]({\r\n      message,\r\n      description,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSupplierOptions(setSupplierOptions);\r\n    fetchMakeOptions(setMakeOptions);\r\n    fetchModelOptions(setModelOptions);\r\n  }, []);\r\n\r\n  const onFinish = async (values) => {\r\n    const data = {\r\n      supplier_id: values.supplier_id,\r\n      device_make_id: values.device_make_id,\r\n      device_model_id: values.device_model_id,\r\n      device_imei_no: values.device_imei_no,\r\n      uid: values.uid,\r\n      ccid: values.ccid,\r\n    };\r\n\r\n    try {\r\n      await api.post(\"device/store\", data);\r\n      form.resetFields();\r\n      props.parentFunction();\r\n      openNotification(\"success\", \"Device\", \"Device Inserted Successfully!\");\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 403) {\r\n        const errorData = error.response.data;\r\n        if (errorData.message && typeof errorData.message === \"object\") {\r\n          const validationErrors = errorData.message;\r\n          if (validationErrors.hasOwnProperty(\"device_imei_no\")) {\r\n            openNotification(\r\n              \"info\",\r\n              \"Device IMEI No\",\r\n              \"Device IMEI No is Already Exists\"\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Define the functions outside the component\r\n  async function fetchSupplierOptions(setSupplierOptions) {\r\n    try {\r\n      const response = await api.get(\"supplier\");\r\n      if (response.data.success) {\r\n        setSupplierOptions(response.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching roles:\", error);\r\n    }\r\n  }\r\n\r\n  async function fetchMakeOptions(setMakeOptions) {\r\n    try {\r\n      const response = await api.get(\"device_make\");\r\n      if (response.data.success) {\r\n        setMakeOptions(response.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching roles:\", error);\r\n    }\r\n  }\r\n\r\n  async function fetchModelOptions(setModelOptions) {\r\n    try {\r\n      const response = await api.get(\"device_model\");\r\n      if (response.data.success) {\r\n        setModelOptions(response.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching roles:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row gutter={6}>\r\n      <Col>\r\n        <Card title=\"New Device\">\r\n          <Flex>\r\n            <div className=\"container\">\r\n              <Form\r\n                form={form}\r\n                size=\"small\"\r\n                name=\"registrationForm\"\r\n                onFinish={onFinish}\r\n                layout=\"vertical\"\r\n              >\r\n                <Row gutter={[8, 8]}>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Supplier\"\r\n                      name=\"supplier_id\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please Select a Supplier\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        showSearch\r\n                        allowClear\r\n                        optionFilterProp=\"children\"\r\n                        placeholder=\"Select Supplier\"\r\n                        onChange={handleSupplierIdChange}\r\n                        value={selectedSupplierId}\r\n                        filterOption={(input, option) =>\r\n                          option.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      >\r\n                        {Array.isArray(supplierOptions) ? (\r\n                          supplierOptions.map((supplier) => (\r\n                            <Option key={supplier.id} value={supplier.id}>\r\n                              {supplier.supplier_name}\r\n                            </Option>\r\n                          ))\r\n                        ) : (\r\n                          <Option value=\"Loading\" disabled>\r\n                            Loading...\r\n                          </Option>\r\n                        )}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Device Make\"\r\n                      name=\"device_make_id\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please Select a Device Make\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        showSearch\r\n                        allowClear\r\n                        placeholder=\"Select Device Make\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={handleMakeIdChange}\r\n                        value={selectedMakeId}\r\n                        filterOption={(input, option) =>\r\n                          option.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      >\r\n                        {Array.isArray(makeOptions) ? (\r\n                          makeOptions.map((make) => (\r\n                            <Option key={make.id} value={make.id}>\r\n                              {make.device_make}\r\n                            </Option>\r\n                          ))\r\n                        ) : (\r\n                          <Option value=\"Loading\" disabled>\r\n                            Loading...\r\n                          </Option>\r\n                        )}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Device Model\"\r\n                      name=\"device_model_id\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please Select a Device Model\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        showSearch\r\n                        allowClear\r\n                        placeholder=\"Select Device Model\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={handleModelIdChange}\r\n                        value={selectedModelId}\r\n                        filterOption={(input, option) =>\r\n                          option.children\r\n                            .toLowerCase()\r\n                            .indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                      >\r\n                        {Array.isArray(modelOptions) ? (\r\n                          modelOptions.map((model) => (\r\n                            <Option key={model.id} value={model.id}>\r\n                              {model.device_model}\r\n                            </Option>\r\n                          ))\r\n                        ) : (\r\n                          <Option value=\"Loading\" disabled>\r\n                            Loading...\r\n                          </Option>\r\n                        )}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item\r\n                      size=\"small\"\r\n                      label=\"Device IMEI No\"\r\n                      name=\"device_imei_no\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please enter a Device IMEI No\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item size=\"small\" label=\"Device UID\" name=\"uid\">\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col sm={12} md={12} lg={12}>\r\n                    <Form.Item size=\"small\" label=\"Device CCID\" name=\"ccid\">\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row align={\"middle\"}>\r\n                  <Col span={12}>\r\n                    <Form.Item>\r\n                      <Space wrap>\r\n                        <Button type=\"primary\" shape=\"round\" htmlType=\"submit\">\r\n                          Save\r\n                        </Button>\r\n                        <Button type=\"primary\" shape=\"round\">\r\n                          Back\r\n                        </Button>\r\n                      </Space>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n          </Flex>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default Create;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Select,\r\n  Input,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  notification,\r\n} from \"antd\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport api from \"configs/apiConfig\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Edit = ({ parentToChild, ...props }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const [selectedSupplierId, setselectedSupplierId] = useState();\r\n  const [supplierOptions, setSupplierOptions] = useState([]);\r\n  const [selectedMakeId, setselectedMakeId] = useState();\r\n  const [makeOptions, setMakeOptions] = useState([]);\r\n  const [selectedModelId, setselectedModelId] = useState();\r\n  const [modelOptions, setModelOptions] = useState([]);\r\n  const [isComponentVisible, setIsComponentVisible] = useState(true);\r\n\r\n  const toggleComponentVisibility = () => {\r\n    setIsComponentVisible(!isComponentVisible);\r\n  };\r\n  const handleSupplierIdChange = (roleID) => {\r\n    setselectedSupplierId(roleID);\r\n  };\r\n  const handleMakeIdChange = (roleID) => {\r\n    setselectedMakeId(roleID);\r\n  };\r\n  const handleModelIdChange = (roleID) => {\r\n    setselectedModelId(roleID);\r\n  };\r\n\r\n  const openNotification = (type, message, description) => {\r\n    notification[type]({\r\n      message,\r\n      description,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSupplierOptions(setSupplierOptions);\r\n    fetchMakeOptions(setMakeOptions);\r\n    fetchModelOptions(setModelOptions);\r\n  }, []);\r\n\r\n  const onFinish = async (values) => {\r\n    const data = {\r\n      id: parentToChild[0],\r\n      supplier_id: values.supplier_id,\r\n      device_make_id: values.device_make_id,\r\n      device_model_id: values.device_model_id,\r\n      device_imei_no: values.device_imei_no,\r\n      uid: values.uid,\r\n      ccid: values.ccid,\r\n    };\r\n\r\n    try {\r\n      await api.post(\"device/update\", data);\r\n      form.resetFields();\r\n      props.parentFunction();\r\n      openNotification(\"success\", \"Device\", \"Device Updated Successfully!\");\r\n      toggleComponentVisibility();\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 403) {\r\n        const errorData = error.response.data;\r\n        if (errorData.message && typeof errorData.message === \"object\") {\r\n          const validationErrors = errorData.message;\r\n          if (validationErrors.hasOwnProperty(\"device_imei_no\")) {\r\n            openNotification(\r\n              \"info\",\r\n              \"Device IMEI No\",\r\n              \"Device IMEI No is Already Exists\"\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Define the functions outside the component\r\n  async function fetchSupplierOptions(setSupplierOptions) {\r\n    try {\r\n      const response = await api.get(\"supplier\");\r\n      if (response.data.success) {\r\n        setSupplierOptions(response.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching roles:\", error);\r\n    }\r\n  }\r\n\r\n  async function fetchMakeOptions(setMakeOptions) {\r\n    try {\r\n      const response = await api.get(\"device_make\");\r\n      if (response.data.success) {\r\n        setMakeOptions(response.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching roles:\", error);\r\n    }\r\n  }\r\n\r\n  async function fetchModelOptions(setModelOptions) {\r\n    try {\r\n      const response = await api.get(\"device_model\");\r\n      if (response.data.success) {\r\n        setModelOptions(response.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching roles:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row gutter={6}>\r\n      {isComponentVisible && (\r\n        <Col>\r\n          <Card title=\"Edit Device\">\r\n            <Flex>\r\n              <div className=\"container\">\r\n                <Form\r\n                  size=\"small\"\r\n                  name=\"registrationForm\"\r\n                  onFinish={onFinish}\r\n                  layout=\"vertical\"\r\n                >\r\n                  <Row gutter={[8, 8]}>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Form.Item\r\n                        initialValue={parentToChild[1]}\r\n                        size=\"small\"\r\n                        label=\"Supplier\"\r\n                        name=\"supplier_id\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please Select a Supplier\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          placeholder=\"Select Supplier\"\r\n                          optionFilterProp=\"children\"\r\n                          onChange={handleSupplierIdChange}\r\n                          value={selectedSupplierId}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {Array.isArray(supplierOptions) ? (\r\n                            supplierOptions.map((supplier) => (\r\n                              <Option key={supplier.id} value={supplier.id}>\r\n                                {supplier.supplier_name}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option value=\"Loading\" disabled>\r\n                              Loading...\r\n                            </Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Form.Item\r\n                        initialValue={parentToChild[3]}\r\n                        size=\"small\"\r\n                        label=\"Device Make\"\r\n                        name=\"device_make_id\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please Select a Device Make\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          placeholder=\"Select Device Make\"\r\n                          optionFilterProp=\"children\"\r\n                          onChange={handleMakeIdChange}\r\n                          value={selectedMakeId}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {Array.isArray(makeOptions) ? (\r\n                            makeOptions.map((make) => (\r\n                              <Option key={make.id} value={make.id}>\r\n                                {make.device_make}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option value=\"Loading\" disabled>\r\n                              Loading...\r\n                            </Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Form.Item\r\n                        initialValue={parentToChild[5]}\r\n                        size=\"small\"\r\n                        label=\"Device Model\"\r\n                        name=\"device_model_id\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please Select a Device Model\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          placeholder=\"Select Device Model\"\r\n                          optionFilterProp=\"children\"\r\n                          onChange={handleModelIdChange}\r\n                          value={selectedModelId}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {Array.isArray(modelOptions) ? (\r\n                            modelOptions.map((model) => (\r\n                              <Option key={model.id} value={model.id}>\r\n                                {model.device_model}\r\n                              </Option>\r\n                            ))\r\n                          ) : (\r\n                            <Option value=\"Loading\" disabled>\r\n                              Loading...\r\n                            </Option>\r\n                          )}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Form.Item\r\n                        initialValue={parentToChild[7]}\r\n                        size=\"small\"\r\n                        label=\"Device IMEI No\"\r\n                        name=\"device_imei_no\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Please enter a Device IMEI No\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Form.Item\r\n                        initialValue={parentToChild[8]}\r\n                        size=\"small\"\r\n                        label=\"Device UID\"\r\n                        name=\"uid\"\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                      <Form.Item\r\n                        initialValue={parentToChild[9]}\r\n                        size=\"small\"\r\n                        label=\"Device CCID\"\r\n                        name=\"ccid\"\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row align={\"middle\"}>\r\n                    <Col span={12}>\r\n                      <Form.Item>\r\n                        <Space wrap>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            shape=\"round\"\r\n                            htmlType=\"submit\"\r\n                          >\r\n                            Update\r\n                          </Button>\r\n                          <Button type=\"primary\" shape=\"round\">\r\n                            Back\r\n                          </Button>\r\n                        </Space>\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </div>\r\n            </Flex>\r\n          </Card>\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button, Card, Row, Col, Input } from \"antd\";\r\nimport { PlusOutlined, SearchOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport api from \"configs/apiConfig\";\r\nimport Create from \"./create\";\r\nimport Edit from \"./edit\";\r\nimport Assign from \"../demo/index\";\r\nimport utils from \"utils\";\r\n\r\nexport const Device = () => {\r\n  const [deviceList, setDeviceList] = useState([]);\r\n  const [maindeviceList, setMainDeviceList] = useState([]);\r\n\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [isCreateVisible, setIsCreateVisible] = useState(false);\r\n  const [isEditVisible, setIsEditVisible] = useState(false);\r\n  const [isAssignVisible, setIsAssignVisible] = useState(false);\r\n\r\n  const [editdata, setEditData] = useState(\"\");\r\n  const [assigndata, setAssignData] = useState(\"\");\r\n\r\n  const handleCreateCard = () => {\r\n    setIsCreateVisible(true);\r\n    setIsEditVisible(false);\r\n    setIsAssignVisible(false);\r\n  };\r\n  const handleEditCard = () => {\r\n    setIsCreateVisible(false);\r\n    setIsEditVisible(true);\r\n  };\r\n  const handleAssignCard = () => {\r\n    setIsCreateVisible(false);\r\n    setIsEditVisible(false);\r\n    setIsAssignVisible(true);\r\n  };\r\n\r\n  const parentFunction = () => {\r\n    console.log(deviceList);\r\n    loadDevices();\r\n  };\r\n\r\n  const loadDevices = async () => {\r\n    try {\r\n      const response = await api.post(\"device_list\");\r\n\r\n      if (response.data && Array.isArray(response.data.data)) {\r\n        const processedData = response.data.data.map((item) => ({\r\n          id: item.id,\r\n          supplier_id: item.supplier_id,\r\n          supplier_name: item.supplier_name,\r\n          device_imei_no: item.device_imei_no,\r\n          ccid: item.ccid,\r\n          uid: item.uid,\r\n          device_make_id: item.device_make_id,\r\n          device_model_id: item.device_model_id,\r\n          device_make: item.device_make,\r\n          device_model: item.device_model,\r\n        }));\r\n        setDeviceList(processedData);\r\n        setMainDeviceList(processedData);\r\n      } else {\r\n        setDeviceList(\"\");\r\n        setMainDeviceList(\"\");\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      setDeviceList(\"\");\r\n      setMainDeviceList(\"\");\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  function handleEditClick(record) {\r\n    setEditData([\r\n      record.id,\r\n      record.supplier_id,\r\n      record.supplier_name,\r\n      record.device_make_id,\r\n      record.device_make,\r\n      record.device_model_id,\r\n      record.device_model,\r\n      record.device_imei_no,\r\n      record.ccid,\r\n      record.uid,\r\n    ]);\r\n\r\n    // Set isEditVisible to true\r\n    setIsEditVisible(true);\r\n    setIsCreateVisible(false);\r\n    setIsAssignVisible(false);\r\n  }\r\n\r\n  function handleAssignClick(record) {\r\n    handleAssignCard();\r\n\r\n    const id = record.id;\r\n    const type = \"Device\";\r\n    const device_imei_no = record.device_imei_no;\r\n\r\n    const data = [id, type, device_imei_no];\r\n\r\n    setAssignData(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadDevices();\r\n  }, []);\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"Supplier Name\",\r\n      dataIndex: \"supplier_name\",\r\n    },\r\n    {\r\n      title: \"Device No\",\r\n      dataIndex: \"device_imei_no\",\r\n    },\r\n    {\r\n      title: \"Device Make\",\r\n      dataIndex: \"device_make\",\r\n    },\r\n    {\r\n      title: \"Device Model\",\r\n      dataIndex: \"device_model\",\r\n    },\r\n    {\r\n      title: \"Edit\",\r\n      dataIndex: \"edit\",\r\n      fixed: \"right\",\r\n      render: (_, record) => (\r\n        <span\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => handleEditClick(record)}\r\n        >\r\n          <EditOutlined />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Assign\",\r\n      dataIndex: \"edit\",\r\n      fixed: \"right\",\r\n      render: (_, record) => (\r\n        <span\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => handleAssignClick(record)} // Replace handleEditClick with your custom action function\r\n        >\r\n          <EditOutlined /> {/* Replace EditOutlined with your custom icon */}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const onSearch = (e) => {\r\n    const searchValue = e.currentTarget.value;\r\n    const searchArray = searchValue ? deviceList : maindeviceList; // Use a different source if needed\r\n    const filteredUserList = utils.wildCardSearch(searchArray, searchValue);\r\n    setDeviceList(filteredUserList);\r\n    setSelectedRowKeys([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={6}>\r\n        <Col sm={24} md={14} lg={14}>\r\n          <Card title=\"Device\">\r\n            <Flex\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              mobileFlex={false}\r\n            >\r\n              <Flex className=\"mb-1\" mobileFlex={false}>\r\n                <div className=\"mr-md-3 mb-3\">\r\n                  <Input\r\n                    placeholder=\"Search\"\r\n                    prefix={<SearchOutlined />}\r\n                    onChange={(e) => onSearch(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\"></div>\r\n              </Flex>\r\n              <div className=\"mb-3\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  icon={<PlusOutlined />}\r\n                  ghost\r\n                  onClick={handleCreateCard}\r\n                >\r\n                  Add Device\r\n                </Button>\r\n              </div>\r\n            </Flex>\r\n            <div className=\"table-responsive\">\r\n              <Table\r\n                bordered\r\n                columns={tableColumns}\r\n                dataSource={deviceList}\r\n                rowKey=\"id\"\r\n              />\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={24} md={10} lg={10}>\r\n          {isCreateVisible && <Create parentFunction={parentFunction} />}\r\n          {isAssignVisible && (\r\n            <Assign\r\n              key={assigndata[0]}\r\n              parentToChild={assigndata}\r\n              parentFunction={parentFunction}\r\n            />\r\n          )}\r\n          {isEditVisible && (\r\n            <Edit\r\n              key={editdata[0]}\r\n              parentToChild={editdata}\r\n              parentFunction={parentFunction}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default Device;\r\n","// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\nexport default EditOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\nEditOutlined.displayName = 'EditOutlined';\nexport default /*#__PURE__*/React.forwardRef(EditOutlined);","import { Col } from '../grid';\nexport default Col;","import { Row } from '../grid';\nexport default Row;"],"names":["Flex","styled","div","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","Utils","name","initials","match","shift","pop","toUpperCase","navTree","path","route","p","hasOwnProperty","this","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","key","toLowerCase","list","value","data","filter","item","input","searchText","screens","breakpoints","push","Option","Select","parentToChild","props","Form","useForm","form","useState","isComponentVisible","setIsComponentVisible","adminList","SetAdminList","distributorList","SetDistributorList","dealerList","SetDealerList","subdealerList","SetSubdealerList","toggleComponentVisibility","localStorage","getItem","currentUser","SetCurrentUser","currentRole","SetCurrentRole","openNotification","type","message","description","notification","getUserList","user_data","user_id","api","post","then","res","catch","err","vehicle_data","console","log","user_list","subdealer_list","AdminChange","setFieldValue","user_get_data","distributor_list","DistributorChange","dealer_list","DealerChange","useEffect","onFinish","values","resetFields","parentFunction","gutter","title","className","layout","size","sm","md","lg","Item","label","onChange","allowClear","showSearch","optionFilterProp","Array","isArray","map","admin","role_id","id","distributor","dealer","subdealer","htmlType","selectedSupplierId","setselectedSupplierId","supplierOptions","setSupplierOptions","selectedMakeId","setselectedMakeId","makeOptions","setMakeOptions","selectedModelId","setselectedModelId","modelOptions","setModelOptions","fetchSupplierOptions","fetchMakeOptions","fetchModelOptions","supplier_id","device_make_id","device_model_id","device_imei_no","uid","ccid","response","status","errorData","get","success","error","rules","required","placeholder","roleID","filterOption","option","children","supplier","supplier_name","disabled","make","device_make","model","device_model","align","span","wrap","shape","initialValue","Device","deviceList","setDeviceList","maindeviceList","setMainDeviceList","setSelectedRowKeys","isCreateVisible","setIsCreateVisible","isEditVisible","setIsEditVisible","isAssignVisible","setIsAssignVisible","editdata","setEditData","assigndata","setAssignData","loadDevices","processedData","handleAssignClick","record","tableColumns","dataIndex","fixed","render","_","style","cursor","onClick","handleEditClick","EditOutlined","mobileFlex","prefix","SearchOutlined","e","searchValue","currentTarget","searchArray","filteredUserList","utils","wildCardSearch","onSearch","icon","PlusOutlined","ghost","bordered","columns","dataSource","rowKey","ref","React","AntdIcon","_objectSpread","EditOutlinedSvg","displayName","Col","Row"],"sourceRoot":""}