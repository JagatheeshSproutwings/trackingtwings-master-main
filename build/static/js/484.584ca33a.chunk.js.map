{"version":3,"file":"static/js/484.584ca33a.chunk.js","mappings":"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","sources":["views/app-views/device_management/index.js","../node_modules/antd/es/col/index.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Form,\r\n  Drawer,\r\n  Select,\r\n  Input,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport api from \"configs/apiConfig\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Device = () => {\r\n  const [form] = Form.useForm();\r\n  const [open, setOpen] = useState(false);\r\n  const dateFormat = \"YYYY-MM-DD\";\r\n  const showDrawer = () => {\r\n    setOpen(true);\r\n  };\r\n  const onClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n  const [adminList, SetAdminList] = useState([]);\r\n  const [distributorList, SetDistributorList] = useState([]);\r\n  const [dealerList, SetDealerList] = useState([]);\r\n  const [subdealerList, SetSubdealerList] = useState([]);\r\n  const [customerList, SetCustomerList] = useState([]);\r\n\r\n  const [planList, SetPlanList] = useState([]);\r\n  //For Dealer and SubDealer Direct\r\n  const [userValue, setUserValue] = useState(localStorage.getItem(\"id\") || \"\");\r\n\r\n  const [licenseList, SetLicenseList] = useState([]);\r\n\r\n  const [vehicleTypeList, SetVehicleTypeList] = useState([]);\r\n\r\n  const [simList, SetSimList] = useState([]);\r\n  const [simData, SetSimData] = useState(\"\");\r\n  const [vehicleList, setVehicleList] = useState([]);\r\n\r\n  const [deviceList, SetDeviceList] = useState([]);\r\n  const [deviceData, SetDeviceData] = useState(\"\");\r\n  const [makeIdData, SetMakeIdData] = useState(\"\");\r\n  const [modelIdData, SetModelIdData] = useState(\"\");\r\n  const [makeData, SetMakeData] = useState(\"\");\r\n  const [modelData, SetModelData] = useState(\"\");\r\n\r\n  const [currentUser, SetCurrentUser] = useState(\r\n    localStorage.getItem(\"id\") || \"\"\r\n  );\r\n  const [currentRole, SetCurrentRole] = useState(\r\n    localStorage.getItem(\"role\") || \"\"\r\n  );\r\n\r\n  const getUserList = async () => {\r\n    const user_data = { user_id: currentUser };\r\n    const vehicle_data = await api\r\n      .post(\"role_based_user_list\", user_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return [];\r\n      });\r\n\r\n    // Super Admin\r\n    if (currentRole == 1) {\r\n      console.log(\"Super Admin\");\r\n      SetAdminList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 2) {\r\n      console.log(\"Admin\");\r\n      SetDistributorList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 3) {\r\n      console.log(\"Distributor\");\r\n      SetDealerList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n    if (currentRole == 4) {\r\n      console.log(\"Dealer\");\r\n      SetCustomerList(vehicle_data?.data?.data?.user_list);\r\n      SetSubdealerList(vehicle_data?.data?.data?.subdealer_list);\r\n    }\r\n    if (currentRole == 5) {\r\n      console.log(\"Subdealer\");\r\n      SetCustomerList(vehicle_data?.data?.data?.user_list);\r\n    }\r\n  };\r\n  const user = () => {\r\n    return localStorage.getItem(\"id\");\r\n  };\r\n  const role = () => {\r\n    return localStorage.getItem(\"role\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    SetCurrentUser(user());\r\n    SetCurrentRole(role());\r\n    getUserList();\r\n  }, []);\r\n\r\n  // on change Admin\r\n  const AdminChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetDistributorList([]);\r\n    SetDealerList([]);\r\n    SetSubdealerList([]);\r\n    SetCustomerList([]);\r\n    const user_get_data = { user_id: value };\r\n    const distributor_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetDistributorList(distributor_list?.data?.data?.user_list);\r\n  };\r\n  // On change Distributor\r\n  const DistributorChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetDealerList(\"\");\r\n    SetSubdealerList(\"\");\r\n    SetCustomerList([]);\r\n    const user_get_data = { user_id: value };\r\n    const dealer_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetDealerList(dealer_list?.data?.data?.user_list);\r\n  };\r\n  // on change Dealer\r\n  const DealerChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetSubdealerList([]);\r\n    SetCustomerList([]);\r\n    const user_get_data = { user_id: value };\r\n    const subdealer_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetCustomerList(subdealer_list?.data?.data?.user_list);\r\n    SetSubdealerList(subdealer_list?.data?.data?.subdealer_list);\r\n\r\n    SetPlanList([]);\r\n    setUserValue(value);\r\n    const plan_list = await api\r\n      .post(\"user_plan_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetPlanList(plan_list?.data.data);\r\n\r\n    SetSimList([]);\r\n    const sim_list = await api\r\n      .post(\"sim_stock_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetSimList(sim_list?.data.data);\r\n\r\n    SetDeviceList([]);\r\n    const device_list = await api\r\n      .post(\"device_stock_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetDeviceList(device_list?.data.data);\r\n  };\r\n  // on change SubDealer\r\n  const SubDealerChange = async (value) => {\r\n    form.setFieldValue(\"\");\r\n    SetCustomerList([]);\r\n    const user_get_data = { user_id: value };\r\n    const customer_list = await api\r\n      .post(\"role_based_user_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetCustomerList(customer_list?.data?.data?.user_list);\r\n\r\n    SetPlanList([]);\r\n\r\n    setUserValue(value);\r\n\r\n    const plan_list = await api\r\n      .post(\"user_plan_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetPlanList(plan_list?.data.data);\r\n\r\n    SetSimList([]);\r\n    const sim_list = await api\r\n      .post(\"sim_stock_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetSimList(sim_list?.data.data);\r\n\r\n    SetDeviceList([]);\r\n    const device_list = await api\r\n      .post(\"device_stock_list\", user_get_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetDeviceList(device_list?.data.data);\r\n  };\r\n\r\n  const CustomerChange = async () => {\r\n    SetVehicleTypeList([]);\r\n    const vehicle_type_list = await api\r\n      .get(\"vehicle_type\")\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetVehicleTypeList(vehicle_type_list?.data?.data);\r\n  };\r\n\r\n  const PlanChange = async (value) => {\r\n    SetLicenseList([]);\r\n    const data = { user_id: userValue, plan_id: value };\r\n    const license_list = await api\r\n      .post(\"user_license_list\", data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetLicenseList(license_list?.data.data);\r\n  };\r\n\r\n  const DeviceChange = async (value) => {\r\n    SetDeviceData(\"\");\r\n    SetMakeIdData(\"\");\r\n    SetModelIdData(\"\");\r\n    SetMakeData(\"\");\r\n    SetModelData(\"\");\r\n\r\n    try {\r\n      const device_data = await api.get(`device/${value}`);\r\n      const deviceUid = device_data?.data?.data?.uid;\r\n      const device_make_id = device_data?.data?.data?.device_make_id;\r\n      const device_model_id = device_data?.data?.data?.device_model_id;\r\n      const device_make = device_data?.data?.data?.device_make;\r\n      const device_model = device_data?.data?.data?.device_model;\r\n\r\n      if (deviceUid) {\r\n        SetDeviceData(deviceUid);\r\n        SetMakeIdData(device_make_id);\r\n        SetModelIdData(device_model_id);\r\n        SetMakeData(device_make);\r\n        SetModelData(device_model);\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching device data:\", error);\r\n    }\r\n  };\r\n\r\n  const SimChange = async (value) => {\r\n    SetSimData(\"\");\r\n    try {\r\n      const sim_data = await api.get(`sim/${value}`);\r\n      const sim_imei_no = sim_data?.data?.data?.sim_imei_no;\r\n      if (sim_imei_no) {\r\n        SetSimData(sim_imei_no);\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching device data:\", error);\r\n    }\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    try {\r\n      values[\"user_id\"] = currentUser;\r\n      const installation_date = new Date(values[\"installation_date\"]);\r\n      values[\"installation_date\"] = installation_date\r\n        .toISOString()\r\n        .split(\"T\")[0];\r\n      await api.post(\"vehicle\", values);\r\n      alert(\"Vehicle Saved Successfully\");\r\n      form.resetFields();\r\n      SetSimData(\"\");\r\n      SetDeviceData(\"\");\r\n      SetMakeData(\"\");\r\n      SetModelData(\"\");\r\n      onClose();\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 403) {\r\n        const errorData = error.response.data;\r\n      }\r\n    }\r\n  };\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"Type\",\r\n      dataIndex: \"vehicle_type\",\r\n    },\r\n    {\r\n      title: \"Vehicle No\",\r\n      dataIndex: \"vehicle_name\",\r\n    },\r\n    {\r\n      title: \"Sim No\",\r\n      dataIndex: \"sim_mob_no\",\r\n    },\r\n    {\r\n      title: \"Device IMEI\",\r\n      dataIndex: \"device_imei\",\r\n    },\r\n    {\r\n      title: \"License No\",\r\n      dataIndex: \"license_no\",\r\n    },\r\n    {\r\n      title: \"Installation Date\",\r\n      dataIndex: \"installation_date\",\r\n    },\r\n    {\r\n      title: \"Expire Date\",\r\n      dataIndex: \"expire_date\",\r\n    },\r\n    {\r\n      title: \"Client Name\",\r\n      dataIndex: \"client_name\",\r\n    },\r\n  ];\r\n\r\n  async function loadVehicles(setVehicleList) {\r\n    try {\r\n      const user_data = { user_id: currentUser };\r\n      const response = await api.post(\"vehicle_list\", user_data);\r\n\r\n      if (response.data && Array.isArray(response.data.data)) {\r\n        const processedData = response.data.data.map((item) => ({\r\n          id: item.id,\r\n          vehicle_type: item.vehicle_type,\r\n          vehicle_name: item.vehicle_name,\r\n          sim_mob_no: item.sim_mob_no,\r\n          device_imei: item.device_imei,\r\n          license_no: item.license_no,\r\n          installation_date: item.installation_date,\r\n          expire_date: item.expire_date,\r\n          client_name: item.client_name,\r\n        }));\r\n        setVehicleList(processedData);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  }\r\n  async function loadsims(SetSimList) {\r\n    try {\r\n      SetSimList([]);\r\n\r\n      const user_data = { user_id: currentUser };\r\n      const sim_list = await api.post(\"sim_stock_list\", user_data);\r\n\r\n      if (sim_list.data && Array.isArray(sim_list.data.data)) {\r\n        SetSimList(sim_list?.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  }\r\n  async function loaddevices(SetDeviceList) {\r\n    try {\r\n      SetDeviceList([]);\r\n\r\n      const user_data = { user_id: currentUser };\r\n      const device_list = await api.post(\"device_stock_list\", user_data);\r\n\r\n      if (device_list.data && Array.isArray(device_list.data.data)) {\r\n        SetDeviceList(device_list?.data.data);\r\n      } else {\r\n        console.error(\"API request was not successful\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadVehicles(setVehicleList);\r\n    loadPlans(SetPlanList);\r\n    loadsims(SetSimList);\r\n    loaddevices(SetDeviceList);\r\n  }, []);\r\n\r\n  async function loadPlans(SetPlanList) {\r\n    SetPlanList([]);\r\n\r\n    const data = { user_id: currentUser };\r\n\r\n    const plan_list = await api\r\n      .post(\"user_plan_list\", data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return err;\r\n      });\r\n    SetPlanList(plan_list?.data.data);\r\n  }\r\n\r\n  const rowSelection = {\r\n    onChange: (key, rows) => {\r\n      setSelectedRowKeys(key);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card title=\"Vehicle List\">\r\n        <Row>\r\n          <Col span={4}>\r\n            <Button type=\"primary\" onClick={showDrawer} icon={<PlusOutlined />}>\r\n              Add Vehicle\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <div className=\"table-responsive\">\r\n            <Table\r\n              bordered\r\n              columns={tableColumns}\r\n              dataSource={vehicleList}\r\n              rowKey=\"id\"\r\n              rowSelection={{\r\n                selectedRowKeys: selectedRowKeys,\r\n                type: \"checkbox\",\r\n                preserveSelectedRowKeys: false,\r\n                ...rowSelection,\r\n              }}\r\n            />\r\n          </div>\r\n        </Row>\r\n        <Drawer\r\n          placement=\"right\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          width={850}\r\n          open={open}\r\n          title=\"Add Vehicle\"\r\n        >\r\n          <Form form={form} name=\"device_form\" onFinish={onFinish}>\r\n            <h5>Users Details:</h5>\r\n            <Row gutter={[10, 10]}>\r\n              {currentRole == 1 && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item name=\"admin_id\">\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={AdminChange}\r\n                      placeholder=\"Select Admin\"\r\n                    >\r\n                      {Array.isArray(adminList) ? (\r\n                        adminList.map((admin) => (\r\n                          <Select.Option\r\n                            key={admin?.id}\r\n                            role_id=\"2\"\r\n                            value={admin?.id}\r\n                          >\r\n                            {admin?.name}\r\n                          </Select.Option>\r\n                        ))\r\n                      ) : (\r\n                        <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {(currentRole == 1 || currentRole == 2) && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item name=\"distributor_id\">\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={DistributorChange}\r\n                      placeholder=\"Select Distributor\"\r\n                    >\r\n                      {Array.isArray(distributorList) ? (\r\n                        distributorList.map((distributor) => (\r\n                          <Option\r\n                            key={distributor?.id}\r\n                            role_id=\"3\"\r\n                            value={distributor?.id}\r\n                          >\r\n                            {distributor?.name}\r\n                          </Option>\r\n                        ))\r\n                      ) : (\r\n                        <Option role_id=\"3\" value=\"\"></Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {(currentRole == 1 || currentRole == 2 || currentRole == 3) && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item name=\"dealer_id\">\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={DealerChange}\r\n                      placeholder=\"Select Dealer\"\r\n                    >\r\n                      {Array.isArray(dealerList) ? (\r\n                        dealerList.map((dealer) => (\r\n                          <Option\r\n                            key={dealer?.id}\r\n                            role_id=\"4\"\r\n                            value={dealer?.id}\r\n                          >\r\n                            {dealer?.name}\r\n                          </Option>\r\n                        ))\r\n                      ) : (\r\n                        <Option role_id=\"4\" value=\"\"></Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {(currentRole == 1 ||\r\n                currentRole == 2 ||\r\n                currentRole == 3 ||\r\n                currentRole == 4) && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item name=\"subdealer_id\">\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={SubDealerChange}\r\n                      placeholder=\"Select SubDealer\"\r\n                    >\r\n                      {Array.isArray(subdealerList) &&\r\n                      subdealerList.length > 0 ? (\r\n                        subdealerList.map((subdealer) => (\r\n                          <Option\r\n                            key={subdealer?.id}\r\n                            role_id=\"5\"\r\n                            value={subdealer?.id}\r\n                          >\r\n                            {subdealer?.name}\r\n                          </Option>\r\n                        ))\r\n                      ) : (\r\n                        <Option></Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {(currentRole == 1 ||\r\n                currentRole == 2 ||\r\n                currentRole == 3 ||\r\n                currentRole == 4 ||\r\n                currentRole == 5) && (\r\n                <Col sm={2} md={4} lg={4} xxl={4}>\r\n                  <Form.Item\r\n                    name=\"client_id\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please Select Client Name\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Select\r\n                      showSearch\r\n                      allowClear\r\n                      optionFilterProp=\"children\"\r\n                      onChange={CustomerChange}\r\n                      placeholder=\"Select Client\"\r\n                    >\r\n                      {Array.isArray(customerList) ? (\r\n                        customerList.map((customer) => (\r\n                          <Option\r\n                            key={customer?.id}\r\n                            role_id=\"6\"\r\n                            value={customer?.id}\r\n                          >\r\n                            {customer?.name}\r\n                          </Option>\r\n                        ))\r\n                      ) : (\r\n                        <Option role_id=\"6\" value=\"\"></Option>\r\n                      )}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n            <h5>Licence Details:</h5>\r\n            <Row gutter={6}>\r\n              <Col sm={5} md={10} lg={10} xxl={10}>\r\n                <Form.Item\r\n                  name=\"plan_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select Plan\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    placeholder=\"Select Plan\"\r\n                    onChange={PlanChange}\r\n                  >\r\n                    {Array.isArray(planList) ? (\r\n                      planList.map((plan) => (\r\n                        <Select.Option key={plan?.id} value={plan?.id}>\r\n                          {plan?.package_name}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option value=\"\"></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={5} md={10} lg={10} xxl={10}>\r\n                <Form.Item\r\n                  name=\"license_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select License\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    placeholder=\"Select License\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {Array.isArray(licenseList) ? (\r\n                      licenseList.map((license) => (\r\n                        <Select.Option key={license?.id} value={license?.id}>\r\n                          {license?.license_no}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <h5>Device Details :</h5>\r\n            <Row gutter={6}>\r\n              <Col sm={3} md={6} lg={6} xxl={6}>\r\n                <Form.Item\r\n                  name=\"device_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select Device IMEI\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    onChange={DeviceChange}\r\n                    placeholder=\"Select Device IMEI\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {Array.isArray(deviceList) ? (\r\n                      deviceList.map((device) => (\r\n                        <Select.Option key={device?.id} value={device?.id}>\r\n                          {device?.device_imei_no}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={3} md={6} lg={6} xxl={6}>\r\n                <Form.Item>\r\n                  <Input type=\"text\" value={deviceData}></Input>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={4} md={8} lg={8} xxl={8}>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"device_make_id\"\r\n                  hidden\r\n                  value={makeIdData}\r\n                ></input>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"device_model_id\"\r\n                  hidden\r\n                  value={modelIdData}\r\n                ></input>\r\n                <Form.Item>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    value={makeData + \"-\" + modelData}\r\n                  ></Input>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <h5>SIM Details :</h5>\r\n            <Row gutter={6}>\r\n              <Col sm={5} md={10} lg={10} xxl={10}>\r\n                <Form.Item\r\n                  name=\"sim_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select Sim Mobile No\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    placeholder=\"Select Sim\"\r\n                    optionFilterProp=\"children\"\r\n                    onChange={SimChange}\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {Array.isArray(simList) ? (\r\n                      simList.map((sim) => (\r\n                        <Select.Option key={sim?.id} value={sim?.id}>\r\n                          {sim?.sim_mob_no1}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option role_id=\"2\" value=\"\"></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Form.Item>\r\n                <Input type=\"text\" value={simData}></Input>\r\n              </Form.Item>\r\n            </Row>\r\n            <h5>Vehicle Details :</h5>\r\n            <Row gutter={6}>\r\n              <Col sm={5} md={10} lg={10} xxl={10}>\r\n                <Form.Item\r\n                  name=\"vehicle_type_id\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Select Vehicle Type\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    showSearch\r\n                    allowClear\r\n                    placeholder=\"Select Vehicle Type\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {Array.isArray(vehicleTypeList) ? (\r\n                      vehicleTypeList.map((vehicletype) => (\r\n                        <Select.Option\r\n                          key={vehicletype?.id}\r\n                          value={vehicletype?.id}\r\n                        >\r\n                          {vehicletype?.vehicle_type}\r\n                        </Select.Option>\r\n                      ))\r\n                    ) : (\r\n                      <Select.Option></Select.Option>\r\n                    )}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={4} md={8} lg={8} xxl={8}>\r\n                <Form.Item\r\n                  name=\"vehicle_name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Enter Vehicle Name\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"vehicle_name\"\r\n                    placeholder=\"Vehicle Name\"\r\n                  ></Input>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col sm={4} md={8} lg={8} xxl={8}>\r\n                <Form.Item name=\"installation_date\">\r\n                  <DatePicker\r\n                    required\r\n                    allowClear={false}\r\n                    format={dateFormat}\r\n                    placeholder=\"Installation Date\"\r\n                  ></DatePicker>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Save\r\n                </Button>\r\n              </Form.Item>\r\n            </Row>\r\n          </Form>\r\n        </Drawer>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Device;\r\n","import { Col } from '../grid';\nexport default Col;","import { Row } from '../grid';\nexport default Row;"],"names":["Option","Select","Form","useForm","form","useState","open","setOpen","onClose","selectedRowKeys","setSelectedRowKeys","adminList","SetAdminList","distributorList","SetDistributorList","dealerList","SetDealerList","subdealerList","SetSubdealerList","customerList","SetCustomerList","planList","SetPlanList","localStorage","getItem","userValue","setUserValue","licenseList","SetLicenseList","vehicleTypeList","SetVehicleTypeList","simList","SetSimList","simData","SetSimData","vehicleList","setVehicleList","deviceList","SetDeviceList","deviceData","SetDeviceData","makeIdData","SetMakeIdData","modelIdData","SetModelIdData","makeData","SetMakeData","modelData","SetModelData","currentUser","SetCurrentUser","currentRole","SetCurrentRole","getUserList","user_data","user_id","api","post","then","res","catch","err","vehicle_data","console","log","data","user_list","subdealer_list","useEffect","AdminChange","value","setFieldValue","user_get_data","distributor_list","DistributorChange","dealer_list","DealerChange","plan_list","sim_list","device_list","SubDealerChange","customer_list","CustomerChange","get","vehicle_type_list","PlanChange","plan_id","license_list","DeviceChange","device_data","deviceUid","uid","device_make_id","device_model_id","device_make","device_model","error","SimChange","sim_data","sim_imei_no","onFinish","values","installation_date","Date","toISOString","split","alert","resetFields","response","status","Array","isArray","processedData","map","item","id","vehicle_type","vehicle_name","sim_mob_no","device_imei","license_no","expire_date","client_name","loadVehicles","loadPlans","loadsims","loaddevices","rowSelection","onChange","key","rows","title","span","type","onClick","icon","className","bordered","columns","dataIndex","dataSource","rowKey","preserveSelectedRowKeys","placement","closable","width","name","gutter","sm","md","lg","xxl","Item","showSearch","allowClear","optionFilterProp","placeholder","admin","role_id","distributor","dealer","length","subdealer","rules","required","message","customer","plan","package_name","filterOption","input","option","children","toLowerCase","indexOf","license","device","device_imei_no","hidden","sim","sim_mob_no1","vehicletype","format","htmlType","Col","Row"],"sourceRoot":""}