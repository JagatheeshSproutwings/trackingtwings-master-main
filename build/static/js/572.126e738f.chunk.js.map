{"version":3,"file":"static/js/572.126e738f.chunk.js","mappings":"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","sources":["components/map-components/expiryVehicles.js","components/map-components/trackingMarker.js","components/map-components/dashboard_vehicles.js","components/map-components/smoothMovement.js","views/app-views/dashboard/admin.js"],"sourcesContent":["import React from 'react'\r\nimport {Table,Row} from 'antd'\r\nconst expiryVehicles = () => {\r\n  return (\r\n    <div>\r\n        <Table></Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default expiryVehicles","import { useEffect, useState } from \"react\";\r\nimport { MapContainer,TileLayer,Marker,Popup,LayersControl,Polyline } from 'react-leaflet';\r\nimport { LeafletTrackingMarker } from \"react-leaflet-tracking-marker\";\r\nimport L from \"leaflet\";\r\n\r\n\r\nconst defaultIcon = L.icon({\r\n    iconUrl: \"/img/ICONS/GREEN/car.png\",\r\n    iconSize: [40, 40],\r\n    iconAnchor: [18, 18],\r\n    popupAnchor: [0, -10],\r\n    shadowAnchor: [10, 10],\r\n  });\r\n\r\nexport default function AirplaneMarker({ data }) {\r\n  const { lat, lng } = data;\r\n  const [prevPos, setPrevPos] = useState([lat, lng]);\r\n\r\n  useEffect(() => {\r\n    if (prevPos[1] !== lng && prevPos[0] !== lat) setPrevPos([lat, lng]);\r\n  }, [lat, lng, prevPos]);\r\n\r\n  return (\r\n    <LeafletTrackingMarker\r\n      icon={defaultIcon}\r\n      position={[lat, lng]}\r\n      previousPosition={prevPos}\r\n      duration={1000}\r\n    >\r\n      <Popup>{\"Hello, there! 🐱‍🏍 \"}</Popup>\r\n    </LeafletTrackingMarker>\r\n  );\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport { Table,Row,Col,List,Avatar,Badge,Skeleton } from 'antd'\r\nimport { CarFilled,WifiOutlined } from '@ant-design/icons';\r\nimport { BLUE_BASE, GOLD_BASE, GRAY_DARK, GREEN_BASE,RED_BASE } from 'constants/ThemeConstant';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEllipsisVertical,faLocationCrosshairs,faPlug } from '@fortawesome/free-solid-svg-icons'\r\nimport api from 'configs/apiConfig'\r\n\r\nfunction Dashboard_vehicles() {\r\nconst [multipleVehicles,setMultiVehicles] = useState([]);\r\nconst [vehicle_status,setvehicleStatus] = useState(\"\");\r\nconst [showHeader, setShowHeader] = useState(false);\r\nconst [loading, setLoading] = useState(false);\r\n\r\nconst tableProps = {\r\n    loading,\r\n    showHeader,\r\n  };\r\n  useEffect(()=>{\r\n    const interval = setInterval(() => {\r\n      vehicle_list();\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n    \r\n  },[])\r\n  const  vehicle_list = async (value) =>{\r\n    const multiple_vehicles_data = await api.get(\"multi_dashboard\").then((res) => { return res;}).catch((err) => {console.log(err)});\r\n    console.log(multiple_vehicles_data?.data?.data);\r\n\r\n    if(multiple_vehicles_data?.data?.data && vehicle_status!='')\r\n    {\r\n      const filteredItems = multiple_vehicles_data?.data?.data.filter(item => item.vehicle_current_status === 3);\r\n      console.log(filteredItems);\r\n        const processedData = filteredItems.map((item) => ({\r\n          id:item?.id,\r\n          title: item?.vehicle_name||\"TEST\",\r\n          description:item?.device_updatedtime|| \"0000-00-00 00:00:00\",\r\n          color:GOLD_BASE,\r\n          speed:item?.speed||0,\r\n          gps_count:20,\r\n          gsm_count:15,\r\n        }));\r\n      setMultiVehicles(processedData);\r\n    }\r\n    // else{\r\n    //   const filteredItems = multiple_vehicles_data?.data?.data;\r\n    //   console.log(filteredItems);\r\n    //     const processedData = filteredItems.map((item) => ({\r\n    //       id:item?.id,\r\n    //       title: item?.vehicle_name||\"TEST\",\r\n    //       description:item?.device_updatedtime|| \"0000-00-00 00:00:00\",\r\n    //       color:GOLD_BASE,\r\n    //       speed:item?.speed||0,\r\n    //       gps_count:20,\r\n    //       gsm_count:15,\r\n    //     }));\r\n    //   setMultiVehicles(processedData);\r\n    // }\r\n  } \r\n  return (\r\n    <>\r\n    <List style={{padding:0,margin:1,fontSize:'10px',border:'1px'}}\r\n    itemLayout=\"horizontal\"\r\n    size='small'\r\n    dataSource={multipleVehicles}\r\n    renderItem={item => (\r\n      <List.Item  value={item?.id} actions={[ <a key=\"list-loadmore-more\"><FontAwesomeIcon icon={faEllipsisVertical} style={{fontSize: '15px',padding:'0',color:GREEN_BASE}}/></a>]}>\r\n        <List.Item.Meta\r\n          avatar={ <Avatar size=\"small\"  style={{backgroundColor:'transparent'}} icon={<CarFilled style={{ fontSize: '20px',padding:'0',color: item.color } }/>}/>}\r\n          title={<span style={{fontSize:'12px'}}>{item.title}</span>}\r\n          description={<span style={{fontSize:'10px'}}>{item.description}</span>}\r\n        />\r\n        <Row style={{padding:0}}>\r\n          <Col className='ml-13'>\r\n            <h6>{item.speed} KMPH</h6>\r\n          </Col >\r\n          <Col className='ml-2'>\r\n            <WifiOutlined style={{fontSize: '15px',color:RED_BASE}} />\r\n          </Col>\r\n          <Col className='ml-2'>\r\n            <FontAwesomeIcon icon={faLocationCrosshairs} style={{fontSize: '15px',color:GREEN_BASE}}/>\r\n          </Col>\r\n          <Col className='ml-2'>\r\n          <FontAwesomeIcon icon={faPlug} style={{fontSize: '15px',color: RED_BASE}} />\r\n          </Col>\r\n        </Row>\r\n      </List.Item>\r\n    )}\r\n  />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard_vehicles","import React, { useEffect, useState,useRef  } from 'react';\r\nimport { MapContainer,TileLayer,Marker,Popup,LayersControl,Polyline } from 'react-leaflet';\r\nimport DriftMarker from 'react-leaflet-drift-marker';\r\nimport { LeafletTrackingMarker } from \"react-leaflet-tracking-marker\";\r\nimport { Table,Row,Col,List,Avatar,Badge,Skeleton } from 'antd'\r\nimport L from \"leaflet\";\r\nimport 'assets/styles/login.css'\r\nconst MapWithMovingMarker = () => {\r\n  const [latLngData, setLatLngData] = useState([\r\n    [51.505, -0.09,30],\r\n    [52.0, -0.1,35],\r\n    [51.7, -0.2,40],\r\n  ]);\r\n  const [prevPos, setPrevPos] = useState([]);\r\n  const defaultIcon = L.icon({\r\n    iconUrl: \"/img/ICONS/GREEN/car.png\",\r\n    iconSize: [40, 40],\r\n    iconAnchor: [18, 18],\r\n    popupAnchor: [0, -10],\r\n    shadowAnchor: [10, 10],\r\n    rotationAngle:50\r\n  });\r\n  const mapRef = useRef(null);\r\n  const { BaseLayer } = LayersControl;\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const nextIndex =\r\n        currentIndex === latLngData.length - 1 ? 0 : currentIndex + 1;\r\n      const nextLatLng = latLngData[nextIndex];\r\n      setCurrentIndex(nextIndex);\r\n      const prevPos = currentIndex;\r\n    }, 2000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [latLngData, currentIndex]);\r\n\r\n  useEffect(() => {\r\n    if (mapRef.current) {\r\n      mapRef.current.setView(latLngData[currentIndex], 13);\r\n    }\r\n  }, [currentIndex, latLngData]);\r\n\r\n  return (\r\n    <>\r\n<MapContainer center={latLngData[0]} zoom={13} style={{ width: '100%'}}>\r\n<LayersControl>\r\n                                    <BaseLayer  name=\"OpenStreetMap\">\r\n                                        <TileLayer\r\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                                        />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer checked name=\"Google-Street View\">\r\n                                        <TileLayer\r\n                                            attribution=\"Google Maps\"\r\n                                            url=\"https://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                                            />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer checked name=\"Google-Satelite\">\r\n                                    <TileLayer\r\n                                            url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                                            maxZoom= {20}\r\n                                            subdomains={['mt1','mt2','mt3']}\r\n                                        />\r\n                                    </BaseLayer>\r\n                                </LayersControl>\r\n                                {/* <Marker position={latLngData[currentIndex]} icon={defaultIcon} keepAtCenter={true} rotationAngle=\"40\">\r\n                                <Popup>\r\n          <Row>\r\n            <Col span={12}>\r\n              <h6>Vehicle Name:DL01AB1234</h6>\r\n            </Col>\r\n          </Row>\r\n        </Popup>\r\n                                </Marker> */}\r\n                                {/* <LeafletTrackingMarker\r\n      icon={defaultIcon}\r\n      position={latLngData[currentIndex]}\r\n      previousPosition={latLngData[currentIndex]-1}\r\n      duration={1000}\r\n    >\r\n      <Popup>{\"Hello, there! 🐱‍🏍 \"}</Popup>\r\n    </LeafletTrackingMarker> */}\r\n      <DriftMarker position={latLngData[currentIndex]} icon={defaultIcon} rotationAngle={50}  keepAtCenter={true} duration={20000}>\r\n        <Popup>\r\n          <p style={{margin:0}}>Vehicle Name:DL09AD8989</p>\r\n          <p style={{margin:0}}>Speed:30KMPH</p>\r\n          <p style={{margin:0}}>Last Updated:2023-09-12 18:54:00</p>\r\n          <p style={{margin:0}}>Since:05:30:00</p>\r\n          <p style={{margin:0}}>Since:05:30:00</p>\r\n          <p style={{margin:0}}>Since:05:30:00</p>\r\n        </Popup>\r\n      </DriftMarker>\r\n\r\n      \r\n    </MapContainer>\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default MapWithMovingMarker;\r\n","import React, { useState,useEffect } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {Form,Row,Col,Card,Table,Select,Input,Badge,Avatar,Divider,Tabs, List } from 'antd'\r\nimport {MapContainer,TileLayer,Marker,Popup,LayersControl,Polyline} from 'react-leaflet'\r\nimport { WHITE } from 'constants/ThemeConstant'\r\nimport { Sticky, StickyContainer } from 'react-sticky';\r\nimport AllVehicles from 'components/map-components/allVehicles';\r\nimport IdleVehicles from 'components/map-components/idleVehicles';\r\nimport MovingVehicles from 'components/map-components/movingVehicles';\r\nimport ParkingVehicles from 'components/map-components/parkingVehicles';\r\nimport NoNetworkVehicles from 'components/map-components/noNetworkVehicles';\r\nimport ExpiryVehicles from 'components/map-components/expiryVehicles';\r\nimport TrackingMarker from 'components/map-components/trackingMarker';\r\nimport Dashboard_vehicles from 'components/map-components/dashboard_vehicles'\r\nimport MovingVehicle from 'components/map-components/liveTrack'\r\nimport api from 'configs/apiConfig';\r\nimport TestMovement from 'components/map-components/smoothMovement';\r\nconst { Option } = Select\r\n\r\nexport const Admin = () => {\r\n  const [currentRole,setCurrentRole] = useState(); \r\n  const [currentUser,setCurrentUser] = useState();\r\n  const [adminList,SetAdminList] = useState([]); \r\n  const [SelectedDistributor,setSelectedDistributor] = useState(\"\");\r\n  const [distributorList,SetDistributorList] = useState([]); \r\n  const [dealerList,SetDealerList] = useState([]); \r\n  const [subdealerList,SetSubdealerList] = useState([]); \r\n  const [customerList,SetCustomerList] = useState([]); \r\n  const [adminUser,setadminuser] = useState(false);\r\n  const [distributorUser,setDistributoruser] = useState(false);\r\n  const [dealerUser,setDealeruser] = useState(false);\r\n  const [subdealerUser,setSubdealeruser] = useState(false);\r\n  const [subcustomerUser,setCustomeruser] = useState(false);\r\n  const [currentTrack, setCurrentTrack] = useState({});\r\n  const token = useSelector((state) => state.auth);\r\n  const role_id = token?.user_info?.role_id;\r\n  const user_id = token?.user_info?.id;\r\n  \r\n  console.log(role_id);\r\n  const user = () => {\r\n    return localStorage.getItem(\"id\");\r\n  };\r\n  const role = () => {\r\n    return localStorage.getItem(\"role\");\r\n  };\r\n\r\n    const RoleBasedUserList  = () => {\r\n\r\n      if(role_id===1)\r\n      {\r\n        setadminuser(true);\r\n        const admin_list = getUserList(currentUser);\r\n        SetAdminList(admin_list);\r\n      }\r\n      if(role_id===2)\r\n      {\r\n        setDistributoruser(true);\r\n        getDistributorList();\r\n        console.log(distributorList);\r\n      }\r\n    }\r\n    const getAdminList = async () => {\r\n      const admin_data = { user_id: user_id};\r\n      const admin_list = await api.post(\"role_based_user_list\",admin_data).then((res) => { return res;}).catch((err) => { return [];});\r\n      SetAdminList(admin_list?.data?.data?.user_list);\r\n    }\r\n    const getDistributorList = async () => {\r\n      const distributor_data = { user_id: user_id};\r\n      const distributor_list = await api.post(\"role_based_user_list\",distributor_data).then((res) => { return res;}).catch((err) => { return [];});\r\n      if(distributor_list?.data?.data?.user_list.length>0)\r\n      {\r\n        console.log(distributor_list?.data?.data?.user_list[0].id);\r\n        setSelectedDistributor(distributor_list?.data?.data?.user_list[0].id);\r\n      }\r\n      SetDistributorList(distributor_list?.data?.data?.user_list);\r\n    }\r\n\r\n    const getDealerList = async () => {\r\n      const dealer_data = { user_id: user_id};\r\n      const dealer_list = await api.post(\"role_based_user_list\",dealer_data).then((res) => { return res;}).catch((err) => { return [];});\r\n      SetDealerList(dealer_list?.data?.data?.user_list);\r\n    }\r\n\r\n    const getSubDealerList = async () => {\r\n      const subdealer_data = { user_id: user_id};\r\n      const subdealer_list = await api.post(\"role_based_user_list\",subdealer_data).then((res) => { return res;}).catch((err) => { return [];});\r\n      SetSubdealerList(subdealer_list?.data?.data?.user_list);\r\n    }\r\n    const getCustomerList = async () => {\r\n      const customer_data = { user_id: user_id};\r\n      const customer_list = await api.post(\"role_based_user_list\",customer_data).then((res) => { return res;}).catch((err) => { return [];});\r\n      SetCustomerList(customer_list?.data?.data?.user_list);\r\n\r\n\r\n    }\r\n    const getUserList = async (current_user_id) => {\r\n      const user_data = { user_id: current_user_id };\r\n      const user_list = await api\r\n      .post(\"role_based_user_list\", user_data)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return [];\r\n      });\r\n      \r\n    }\r\n   \r\n    useEffect(()=>{\r\n      setCurrentRole(role());\r\n      setCurrentUser(user());\r\n      RoleBasedUserList();\r\n    },[])\r\n\r\n    const dataStory = [\r\n      {\r\n        lat: 53.22376666666667,\r\n        lng: 50.745841666666664,\r\n        angle:20,\r\n      },\r\n      {\r\n        lat: 53.22376666666667,\r\n        lng: 50.745841666666664,\r\n        angle:30,\r\n      },\r\n      {\r\n        lat: 53.223728333333334,\r\n        lng: 50.74598666666667,\r\n        angle:35\r\n      },\r\n      {\r\n        lat: 53.223705,\r\n        lng: 50.746021666666664\r\n      },\r\n      {\r\n        lat: 53.22365166666667,\r\n        lng: 50.746075\r\n      }\r\n    ];\r\n\r\n    const center = [51.505, -0.09]\r\n    const polyline = [\r\n        [51.505, -0.09],\r\n        [51.51, -0.1],\r\n        [51.51, -0.12],\r\n      ]\r\n      const limeOptions = { color: 'lime' }\r\n    const { BaseLayer } = LayersControl;\r\n    const tableColumns = [\r\n        {\r\n            title: 'Vehicle No.',\r\n            dataIndex: 'vehicle_no',\r\n            key: 'vehicle_no',\r\n          },\r\n          {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n          },\r\n    ];\r\n    const handleChange = (value,option) =>{\r\n        const selected_user_id = value;\r\n        const selected_role_id = option.role_id;\r\n        console.log(selected_user_id);\r\n        console.log(selected_role_id);\r\n        switch (selected_role_id) {\r\n          case 1:\r\n            return getAdminList(selected_user_id);\r\n            break;\r\n          case 2:\r\n            return getDistributorList(selected_user_id);\r\n            break;\r\n            case 3:\r\n              return getDealerList(selected_user_id);\r\n              break;\r\n              case 4:\r\n              return getSubDealerList(selected_user_id);\r\n              case 5:\r\n              return getCustomerList(selected_user_id);\r\n              break;\r\n          default:\r\n            break;\r\n        }\r\n        \r\n    }\r\n    \r\nreturn(\r\n    <>\r\n        <Row style={{height:'700','margin':'0','padding':'0'}}>\r\n            <Col xs={24} sm={24} md={24} lg={24} style={{padding:0,margin:0}}>\r\n                <Row gutter={6} style={{padding:0,margin:0}}>\r\n                    <Col sm={12} md={6} lg={6}  style={{padding:0,margin:0}}>\r\n                    <Form name=\"customer-form\" layout=\"inline\" size=\"small\">\r\n                      {currentRole==1 && \r\n                            <Col xs={12}>\r\n                            <Form.Item name=\"admin_id\" size=\"small\" rules={[{required:true,message:'Admin Value is Required!'}]}>\r\n                                <Select showSearch onChange={handleChange} placeholder=\"Admin\">\r\n                                {Array.isArray(adminList) ? (\r\n                        adminList.map((admin) => (\r\n                          <Select.Option \r\n                            key={admin?.id}\r\n                            role_id=\"2\"\r\n                            value={admin?.id}\r\n                          >\r\n                            {admin?.name}\r\n                          </Select.Option>\r\n                        ))\r\n                      ) : (\r\n                        <Select.Option value=\"\" role_id=\"3\"></Select.Option>\r\n                      )}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            </Col>\r\n                    }\r\n                    {(currentRole==1 || currentRole==2) &&\r\n                            <Col xs={12}>\r\n                            <Form.Item name=\"distributor_id\" size=\"small\" rules={[{required:true,message:'Distributor Value is Required!'}]}>\r\n                                <Select showSearch  onChange={handleChange} placeholder=\"Distributor\">\r\n                                {Array.isArray(distributorList) ? (\r\n                        distributorList.map((distributor) => (\r\n                          <Select.Option \r\n                            key={distributor?.id}\r\n                            role_id=\"3\"\r\n                            value={distributor?.id}\r\n                          >\r\n                            {distributor?.name}\r\n                          </Select.Option>\r\n                        ))\r\n                      ) : (\r\n                        <Select.Option value=\"\" role_id=\"3\"></Select.Option>\r\n                      )}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            </Col>\r\n}\r\n{(currentRole==1 || currentRole==2 || currentRole==3) &&\r\n                            <Col xs={12}>\r\n                            <Form.Item name=\"dealer_id\"  rules={[{required:true,message:'Dealer Value is Required!'}]}>\r\n                                <Select showSearch onChange={handleChange} placeholder=\"Dealer\">\r\n                                {Array.isArray(dealerList) ? (\r\n                        dealerList.map((dealer) => (\r\n                          <Select.Option \r\n                            key={dealer?.id}\r\n                            role_id=\"4\"\r\n                            value={dealer?.id}\r\n                          >\r\n                            {dealer?.name}\r\n                          </Select.Option>\r\n                        ))\r\n                      ) : (\r\n                        <Select.Option value=\"\" role_id=\"3\"></Select.Option>\r\n                      )}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            </Col>\r\n}\r\n{(currentRole==1 || currentRole==2 || currentRole==3 || currentRole==4) &&\r\n                            <Col xs={12}>\r\n                            <Form.Item name=\"subdealer_id\"  rules={[{required:true,message:'SubDealer Value is Required!'}]}>\r\n                                <Select showSearch onChange={handleChange} placeholder=\"SubDealer\">\r\n                                    <Option value=\"1\" role_id=\"5\">Customer 1</Option>\r\n                                    <Option value=\"2\" role_id=\"5\">Customer 2</Option>\r\n                                    <Option value=\"3\" role_id=\"5\">Customer 3</Option>\r\n                                    <Option value=\"4\" role_id=\"5\">Customer 4</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            </Col>\r\n}\r\n{(currentRole==1 || currentRole==2 || currentRole==3 || currentRole==4 || currentRole==5) &&\r\n                            <Col xs={12}>\r\n                            <Form.Item name=\"client_id\"  rules={[{required:true,message:'Customer Value is Required!'}]}>\r\n                                <Select showSearch onChange={handleChange} placeholder=\"Customer\">\r\n                                    <Option value=\"1\" role_id=\"6\">Customer 1</Option>\r\n                                    <Option value=\"2\" role_id=\"6\">Customer 2</Option>\r\n                                    <Option value=\"3\" role_id=\"6\">Customer 3</Option>\r\n                                    <Option value=\"4\" role_id=\"6\">Customer 4</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                            </Col>\r\n}\r\n                        </Form>\r\n                        <Card style={{padding:0,margin:0}}>\r\n                            <StickyContainer style={{padding:0,margin:0}}>\r\n                                <Tabs defaultActiveKey=\"1\" size='small'   items={[\r\n                                        {\r\n                                            label: `All`,\r\n                                            key: '1',\r\n                                            children: <Dashboard_vehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Moving`,\r\n                                            key: '2',\r\n                                            children: <AllVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Idle`,\r\n                                            key: '3',\r\n                                            children: <AllVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Parking`,\r\n                                            key: '4',\r\n                                            children: <AllVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `No Data`,\r\n                                            key: '5',\r\n                                            children: <AllVehicles/>,\r\n                                        },\r\n                                        {\r\n                                          label: `Inactive`,\r\n                                          key: '6',\r\n                                          children: <AllVehicles/>,\r\n                                      },\r\n                                        {\r\n                                            label: `Expired`,\r\n                                            key: '7',\r\n                                            children: <AllVehicles/>,\r\n                                        },\r\n                                    ]} />\r\n                            </StickyContainer>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col sm={12} md={18} lg={18} style={{padding:0}}>\r\n                        \r\n                        <TestMovement />\r\n                            {/* <MapContainer center={center} zoom={13} scrollWheelZoom={true}>\r\n                                <LayersControl>\r\n                                    <BaseLayer checked name=\"OpenStreetMap\">\r\n                                        <TileLayer\r\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                                        />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer name=\"Google-Street View\">\r\n                                        <TileLayer\r\n                                            attribution=\"Google Maps\"\r\n                                            url=\"https://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                                            />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer checked name=\"Google-Satelite\">\r\n                                    <TileLayer\r\n                                            url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                                            maxZoom= {20}\r\n                                            subdomains={['mt1','mt2','mt3']}\r\n                                        />\r\n                                    </BaseLayer>\r\n                                </LayersControl>\r\n                                      \r\n                                <Marker position={center}>\r\n                                    <Popup>\r\n                                        <Card size=\"small\" style={{background:\"lightblue\"}} >\r\n                                            <Row>\r\n                                                <Col>\r\n                                                <div>Vehicle No: TN01AB1234</div>\r\n                                            <div>Status: MOVING</div>\r\n                                            <div>Speed: 30 km/hr</div>\r\n                                            <div>Battery: 25.86 volt</div>\r\n                                            <div>Last Updated on: 2023-08-02 13:56:47</div>\r\n                                            <div>Lat/Long: 10.7920,79.5656</div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Card>\r\n                                    </Popup>\r\n                                </Marker>\r\n\r\n                                <Polyline pathOptions={limeOptions} positions={polyline} />\r\n                            </MapContainer> */}\r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n         {/* <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24}>\r\n                <Row gutter={6} style={{padding:0,margin:0}}>\r\n                    <Col sm={12} md={5} lg={5}>\r\n                    <StickyContainer style={{padding:0,margin:0}}>\r\n                                <Tabs defaultActiveKey=\"1\" size='small' style={{fontSize:'10px'}}  items={[\r\n                                        {\r\n                                            label: `All`,\r\n                                            key: '1',\r\n                                            children: <AllVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Moving`,\r\n                                            key: '2',\r\n                                            children: <MovingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Idle`,\r\n                                            key: '3',\r\n                                            children: <IdleVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Parking`,\r\n                                            key: '4',\r\n                                            children: <ParkingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `OOC`,\r\n                                            key: '5',\r\n                                            children: <NoNetworkVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Expired`,\r\n                                            key: '6',\r\n                                            children: <ExpiryVehicles/>,\r\n                                        },\r\n                                    ]} />\r\n                            </StickyContainer>\r\n                    </Col>\r\n                    <Col sm={12} md={19} lg={19}>\r\n                    <MapContainer center={center} zoom={13} scrollWheelZoom={true}>\r\n                                <LayersControl>\r\n                                    <BaseLayer checked name=\"OpenStreetMap\">\r\n                                        <TileLayer\r\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                                        />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer name=\"Google-Street View\">\r\n                                        <TileLayer\r\n                                            attribution=\"Google Maps\"\r\n                                            url=\"https://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                                            />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer checked name=\"Google-Satelite\">\r\n                                    <TileLayer\r\n                                            url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                                            maxZoom= {20}\r\n                                            subdomains={['mt1','mt2','mt3']}\r\n                                        />\r\n                                    </BaseLayer>\r\n                                </LayersControl>\r\n\r\n                                <Marker position={center}>\r\n                                    <Popup>\r\n                                        <Card size=\"small\" style={{background:\"lightblue\"}} >\r\n                                            <Row>\r\n                                                <Col>\r\n                                                <div>Vehicle No: TN01AB1234</div>\r\n                                            <div>Status: MOVING</div>\r\n                                            <div>Speed: 30 km/hr</div>\r\n                                            <div>Battery: 25.86 volt</div>\r\n                                            <div>Last Updated on: 2023-08-02 13:56:47</div>\r\n                                            <div>Lat/Long: 10.7920,79.5656</div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Card>\r\n                                    </Popup>\r\n                                </Marker>\r\n\r\n                                <Polyline pathOptions={limeOptions} positions={polyline} />\r\n                            </MapContainer>\r\n                    </Col>\r\n                </Row>\r\n            </Col> \r\n        </Row>                           */}\r\n        {/* <MapContainer center={center} zoom={13} scrollWheelZoom={true}>\r\n        <LayersControl>\r\n                                    <BaseLayer checked name=\"OpenStreetMap\">\r\n                                        <TileLayer\r\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                                        />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer name=\"Google-Street View\">\r\n                                        <TileLayer\r\n                                            attribution=\"Google Maps\"\r\n                                            url=\"https://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n                                            />\r\n                                    </BaseLayer>\r\n                                    <BaseLayer checked name=\"Google-Satelite\">\r\n                                    <TileLayer\r\n                                            url='https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                                            maxZoom= {20}\r\n                                            subdomains={['mt1','mt2','mt3']}\r\n                                        />\r\n                                    </BaseLayer>\r\n                                </LayersControl>\r\n                                <div style={tabViewStyle}>\r\n                                <StickyContainer style={{padding:0,margin:0}}>\r\n                                <Tabs defaultActiveKey=\"1\"  items={[\r\n                                        {\r\n                                            label: `All`,\r\n                                            key: '1',\r\n                                            children: <AllVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Moving`,\r\n                                            key: '2',\r\n                                            children: <MovingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Idle`,\r\n                                            key: '3',\r\n                                            children: <IdleVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Parking`,\r\n                                            key: '4',\r\n                                            children: <ParkingVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `OOC`,\r\n                                            key: '5',\r\n                                            children: <NoNetworkVehicles/>,\r\n                                        },\r\n                                        {\r\n                                            label: `Expired`,\r\n                                            key: '6',\r\n                                            children: <ExpiryVehicles/>,\r\n                                        },\r\n                                    ]} />\r\n                            </StickyContainer>\r\n                </div>\r\n        </MapContainer> */}\r\n    </>\r\n)\r\n}\r\n\r\nexport default Admin;"],"names":["L","iconUrl","iconSize","iconAnchor","popupAnchor","shadowAnchor","useState","multipleVehicles","setMultiVehicles","vehicle_status","useEffect","interval","setInterval","vehicle_list","clearInterval","value","api","get","then","res","catch","err","console","log","multiple_vehicles_data","data","filteredItems","filter","item","vehicle_current_status","processedData","map","id","title","vehicle_name","description","device_updatedtime","color","GOLD_BASE","speed","gps_count","gsm_count","style","padding","margin","fontSize","border","itemLayout","size","dataSource","renderItem","Item","actions","icon","faEllipsisVertical","GREEN_BASE","Meta","avatar","backgroundColor","CarFilled","className","WifiOutlined","RED_BASE","faLocationCrosshairs","faPlug","latLngData","defaultIcon","rotationAngle","mapRef","useRef","BaseLayer","LayersControl","currentIndex","setCurrentIndex","nextIndex","length","current","setView","MapContainer","center","zoom","width","name","TileLayer","url","attribution","checked","maxZoom","subdomains","position","keepAtCenter","duration","Option","Select","Admin","currentRole","setCurrentRole","currentUser","setCurrentUser","adminList","SetAdminList","setSelectedDistributor","distributorList","SetDistributorList","dealerList","SetDealerList","SetSubdealerList","SetCustomerList","setadminuser","setDistributoruser","token","useSelector","state","auth","role_id","user_info","user_id","getAdminList","admin_data","post","admin_list","user_list","getDistributorList","distributor_data","distributor_list","getDealerList","dealer_data","dealer_list","getSubDealerList","subdealer_data","subdealer_list","getCustomerList","customer_data","customer_list","getUserList","current_user_id","user_data","localStorage","getItem","RoleBasedUserList","handleChange","option","selected_user_id","selected_role_id","height","xs","sm","md","lg","gutter","layout","rules","required","message","showSearch","onChange","placeholder","Array","isArray","admin","distributor","dealer","defaultActiveKey","items","label","key","children"],"sourceRoot":""}